var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod4) => function __require() {
  return mod4 || (0, cb[__getOwnPropNames(cb)[0]])((mod4 = { exports: {} }).exports, mod4), mod4.exports;
};
var __export = (target, all) => {
  for (var name4 in all)
    __defProp(target, name4, { get: all[name4], enumerable: true });
};
var __copyProps = (to, from7, except, desc) => {
  if (from7 && typeof from7 === "object" || typeof from7 === "function") {
    for (let key of __getOwnPropNames(from7))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from7[key], enumerable: !(desc = __getOwnPropDesc(from7, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod4, isNodeMode, target) => (target = mod4 != null ? __create(__getProtoOf(mod4)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod4 || !mod4.__esModule ? __defProp(target, "default", { value: mod4, enumerable: true }) : target,
  mod4
));

// external-global-plugin:react
var require_react = __commonJS({
  "external-global-plugin:react"(exports, module) {
    module.exports = window.React;
  }
});

// external-global-plugin:@veramo-community/veramo-react
var require_veramo_react = __commonJS({
  "external-global-plugin:@veramo-community/veramo-react"(exports, module) {
    module.exports = window.veramoreact;
  }
});

// external-global-plugin:react-query
var require_react_query = __commonJS({
  "external-global-plugin:react-query"(exports, module) {
    module.exports = window.reactquery;
  }
});

// external-global-plugin:antd
var require_antd = __commonJS({
  "external-global-plugin:antd"(exports, module) {
    module.exports = window.antd;
  }
});

// node_modules/.pnpm/@multiformats+base-x@4.0.1/node_modules/@multiformats/base-x/src/index.js
var require_src = __commonJS({
  "node_modules/.pnpm/@multiformats+base-x@4.0.1/node_modules/@multiformats/base-x/src/index.js"(exports, module) {
    "use strict";
    function base5(ALPHABET) {
      if (ALPHABET.length >= 255) {
        throw new TypeError("Alphabet too long");
      }
      var BASE_MAP = new Uint8Array(256);
      for (var j = 0; j < BASE_MAP.length; j++) {
        BASE_MAP[j] = 255;
      }
      for (var i = 0; i < ALPHABET.length; i++) {
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) {
          throw new TypeError(x + " is ambiguous");
        }
        BASE_MAP[xc] = i;
      }
      var BASE2 = ALPHABET.length;
      var LEADER = ALPHABET.charAt(0);
      var FACTOR = Math.log(BASE2) / Math.log(256);
      var iFACTOR = Math.log(256) / Math.log(BASE2);
      function encode15(source) {
        if (source instanceof Uint8Array) {
        } else if (ArrayBuffer.isView(source)) {
          source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
        } else if (Array.isArray(source)) {
          source = Uint8Array.from(source);
        }
        if (!(source instanceof Uint8Array)) {
          throw new TypeError("Expected Uint8Array");
        }
        if (source.length === 0) {
          return "";
        }
        var zeroes = 0;
        var length5 = 0;
        var pbegin = 0;
        var pend = source.length;
        while (pbegin !== pend && source[pbegin] === 0) {
          pbegin++;
          zeroes++;
        }
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        while (pbegin !== pend) {
          var carry = source[pbegin];
          var i2 = 0;
          for (var it1 = size - 1; (carry !== 0 || i2 < length5) && it1 !== -1; it1--, i2++) {
            carry += 256 * b58[it1] >>> 0;
            b58[it1] = carry % BASE2 >>> 0;
            carry = carry / BASE2 >>> 0;
          }
          if (carry !== 0) {
            throw new Error("Non-zero carry");
          }
          length5 = i2;
          pbegin++;
        }
        var it2 = size - length5;
        while (it2 !== size && b58[it2] === 0) {
          it2++;
        }
        var str = LEADER.repeat(zeroes);
        for (; it2 < size; ++it2) {
          str += ALPHABET.charAt(b58[it2]);
        }
        return str;
      }
      function decodeUnsafe(source) {
        if (typeof source !== "string") {
          throw new TypeError("Expected String");
        }
        if (source.length === 0) {
          return new Uint8Array();
        }
        var psz = 0;
        if (source[psz] === " ") {
          return;
        }
        var zeroes = 0;
        var length5 = 0;
        while (source[psz] === LEADER) {
          zeroes++;
          psz++;
        }
        var size = (source.length - psz) * FACTOR + 1 >>> 0;
        var b256 = new Uint8Array(size);
        while (source[psz]) {
          var carry = BASE_MAP[source.charCodeAt(psz)];
          if (carry === 255) {
            return;
          }
          var i2 = 0;
          for (var it3 = size - 1; (carry !== 0 || i2 < length5) && it3 !== -1; it3--, i2++) {
            carry += BASE2 * b256[it3] >>> 0;
            b256[it3] = carry % 256 >>> 0;
            carry = carry / 256 >>> 0;
          }
          if (carry !== 0) {
            throw new Error("Non-zero carry");
          }
          length5 = i2;
          psz++;
        }
        if (source[psz] === " ") {
          return;
        }
        var it4 = size - length5;
        while (it4 !== size && b256[it4] === 0) {
          it4++;
        }
        var vch = new Uint8Array(zeroes + (size - it4));
        var j2 = zeroes;
        while (it4 !== size) {
          vch[j2++] = b256[it4++];
        }
        return vch;
      }
      function decode17(string4) {
        var buffer = decodeUnsafe(string4);
        if (buffer) {
          return buffer;
        }
        throw new Error("Non-base" + BASE2 + " character");
      }
      return {
        encode: encode15,
        decodeUnsafe,
        decode: decode17
      };
    }
    module.exports = base5;
  }
});

// node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/util.js
var require_util = __commonJS({
  "node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/util.js"(exports, module) {
    "use strict";
    var textDecoder5 = new TextDecoder();
    var decodeText = (bytes4) => textDecoder5.decode(bytes4);
    var textEncoder6 = new TextEncoder();
    var encodeText = (text) => textEncoder6.encode(text);
    function concat4(arrs, length5) {
      const output4 = new Uint8Array(length5);
      let offset = 0;
      for (const arr of arrs) {
        output4.set(arr, offset);
        offset += arr.length;
      }
      return output4;
    }
    module.exports = { decodeText, encodeText, concat: concat4 };
  }
});

// node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/base.js
var require_base = __commonJS({
  "node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/base.js"(exports, module) {
    "use strict";
    var { encodeText } = require_util();
    var Base = class {
      /**
       * @param {BaseName} name
       * @param {BaseCode} code
       * @param {CodecFactory} factory
       * @param {string} alphabet
       */
      constructor(name4, code5, factory, alphabet5) {
        this.name = name4;
        this.code = code5;
        this.codeBuf = encodeText(this.code);
        this.alphabet = alphabet5;
        this.codec = factory(alphabet5);
      }
      /**
       * @param {Uint8Array} buf
       * @returns {string}
       */
      encode(buf) {
        return this.codec.encode(buf);
      }
      /**
       * @param {string} string
       * @returns {Uint8Array}
       */
      decode(string4) {
        for (const char of string4) {
          if (this.alphabet && this.alphabet.indexOf(char) < 0) {
            throw new Error(`invalid character '${char}' in '${string4}'`);
          }
        }
        return this.codec.decode(string4);
      }
    };
    module.exports = Base;
  }
});

// node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/rfc4648.js
var require_rfc4648 = __commonJS({
  "node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/rfc4648.js"(exports, module) {
    "use strict";
    var decode17 = (string4, alphabet5, bitsPerChar) => {
      const codes = {};
      for (let i = 0; i < alphabet5.length; ++i) {
        codes[alphabet5[i]] = i;
      }
      let end = string4.length;
      while (string4[end - 1] === "=") {
        --end;
      }
      const out = new Uint8Array(end * bitsPerChar / 8 | 0);
      let bits = 0;
      let buffer = 0;
      let written = 0;
      for (let i = 0; i < end; ++i) {
        const value = codes[string4[i]];
        if (value === void 0) {
          throw new SyntaxError("Invalid character " + string4[i]);
        }
        buffer = buffer << bitsPerChar | value;
        bits += bitsPerChar;
        if (bits >= 8) {
          bits -= 8;
          out[written++] = 255 & buffer >> bits;
        }
      }
      if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
        throw new SyntaxError("Unexpected end of data");
      }
      return out;
    };
    var encode15 = (data, alphabet5, bitsPerChar) => {
      const pad = alphabet5[alphabet5.length - 1] === "=";
      const mask2 = (1 << bitsPerChar) - 1;
      let out = "";
      let bits = 0;
      let buffer = 0;
      for (let i = 0; i < data.length; ++i) {
        buffer = buffer << 8 | data[i];
        bits += 8;
        while (bits > bitsPerChar) {
          bits -= bitsPerChar;
          out += alphabet5[mask2 & buffer >> bits];
        }
      }
      if (bits) {
        out += alphabet5[mask2 & buffer << bitsPerChar - bits];
      }
      if (pad) {
        while (out.length * bitsPerChar & 7) {
          out += "=";
        }
      }
      return out;
    };
    var rfc46484 = (bitsPerChar) => (alphabet5) => {
      return {
        /**
         * @param {Uint8Array} input
         * @returns {string}
         */
        encode(input) {
          return encode15(input, alphabet5, bitsPerChar);
        },
        /**
         * @param {string} input
         * @returns {Uint8Array}
         */
        decode(input) {
          return decode17(input, alphabet5, bitsPerChar);
        }
      };
    };
    module.exports = { rfc4648: rfc46484 };
  }
});

// node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/constants.js
var require_constants = __commonJS({
  "node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/constants.js"(exports, module) {
    "use strict";
    var baseX4 = require_src();
    var Base = require_base();
    var { rfc4648: rfc46484 } = require_rfc4648();
    var { decodeText, encodeText } = require_util();
    var identity7 = () => {
      return {
        encode: decodeText,
        decode: encodeText
      };
    };
    var constants = [
      ["identity", "\0", identity7, ""],
      ["base2", "0", rfc46484(1), "01"],
      ["base8", "7", rfc46484(3), "01234567"],
      ["base10", "9", baseX4, "0123456789"],
      ["base16", "f", rfc46484(4), "0123456789abcdef"],
      ["base16upper", "F", rfc46484(4), "0123456789ABCDEF"],
      ["base32hex", "v", rfc46484(5), "0123456789abcdefghijklmnopqrstuv"],
      ["base32hexupper", "V", rfc46484(5), "0123456789ABCDEFGHIJKLMNOPQRSTUV"],
      ["base32hexpad", "t", rfc46484(5), "0123456789abcdefghijklmnopqrstuv="],
      ["base32hexpadupper", "T", rfc46484(5), "0123456789ABCDEFGHIJKLMNOPQRSTUV="],
      ["base32", "b", rfc46484(5), "abcdefghijklmnopqrstuvwxyz234567"],
      ["base32upper", "B", rfc46484(5), "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"],
      ["base32pad", "c", rfc46484(5), "abcdefghijklmnopqrstuvwxyz234567="],
      ["base32padupper", "C", rfc46484(5), "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567="],
      ["base32z", "h", rfc46484(5), "ybndrfg8ejkmcpqxot1uwisza345h769"],
      ["base36", "k", baseX4, "0123456789abcdefghijklmnopqrstuvwxyz"],
      ["base36upper", "K", baseX4, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"],
      ["base58btc", "z", baseX4, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],
      ["base58flickr", "Z", baseX4, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],
      ["base64", "m", rfc46484(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],
      ["base64pad", "M", rfc46484(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],
      ["base64url", "u", rfc46484(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],
      ["base64urlpad", "U", rfc46484(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]
    ];
    var names = constants.reduce(
      (prev, tupple) => {
        prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3]);
        return prev;
      },
      /** @type {Record<BaseName,Base>} */
      {}
    );
    var codes = constants.reduce(
      (prev, tupple) => {
        prev[tupple[1]] = names[tupple[0]];
        return prev;
      },
      /** @type {Record<BaseCode,Base>} */
      {}
    );
    module.exports = {
      names,
      codes
    };
  }
});

// node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/index.js
var require_src2 = __commonJS({
  "node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/index.js"(exports, module) {
    "use strict";
    var constants = require_constants();
    var { encodeText, decodeText, concat: concat4 } = require_util();
    function multibase(nameOrCode, buf) {
      if (!buf) {
        throw new Error("requires an encoded Uint8Array");
      }
      const { name: name4, codeBuf } = encoding(nameOrCode);
      validEncode(name4, buf);
      return concat4([codeBuf, buf], codeBuf.length + buf.length);
    }
    function encode15(nameOrCode, buf) {
      const enc = encoding(nameOrCode);
      const data = encodeText(enc.encode(buf));
      return concat4([enc.codeBuf, data], enc.codeBuf.length + data.length);
    }
    function decode17(data) {
      if (data instanceof Uint8Array) {
        data = decodeText(data);
      }
      const prefix = data[0];
      if (["f", "F", "v", "V", "t", "T", "b", "B", "c", "C", "h", "k", "K"].includes(prefix)) {
        data = data.toLowerCase();
      }
      const enc = encoding(
        /** @type {BaseCode} */
        data[0]
      );
      return enc.decode(data.substring(1));
    }
    function isEncoded(data) {
      if (data instanceof Uint8Array) {
        data = decodeText(data);
      }
      if (Object.prototype.toString.call(data) !== "[object String]") {
        return false;
      }
      try {
        const enc = encoding(
          /** @type {BaseCode} */
          data[0]
        );
        return enc.name;
      } catch (err) {
        return false;
      }
    }
    function validEncode(name4, buf) {
      const enc = encoding(name4);
      enc.decode(decodeText(buf));
    }
    function encoding(nameOrCode) {
      if (Object.prototype.hasOwnProperty.call(
        constants.names,
        /** @type {BaseName} */
        nameOrCode
      )) {
        return constants.names[
          /** @type {BaseName} */
          nameOrCode
        ];
      } else if (Object.prototype.hasOwnProperty.call(
        constants.codes,
        /** @type {BaseCode} */
        nameOrCode
      )) {
        return constants.codes[
          /** @type {BaseCode} */
          nameOrCode
        ];
      } else {
        throw new Error(`Unsupported encoding: ${nameOrCode}`);
      }
    }
    function encodingFromData(data) {
      if (data instanceof Uint8Array) {
        data = decodeText(data);
      }
      return encoding(
        /** @type {BaseCode} */
        data[0]
      );
    }
    exports = module.exports = multibase;
    exports.encode = encode15;
    exports.decode = decode17;
    exports.isEncoded = isEncoded;
    exports.encoding = encoding;
    exports.encodingFromData = encodingFromData;
    var names = Object.freeze(constants.names);
    var codes = Object.freeze(constants.codes);
    exports.names = names;
    exports.codes = codes;
  }
});

// node_modules/.pnpm/canonicalize@2.0.0/node_modules/canonicalize/lib/canonicalize.js
var require_canonicalize = __commonJS({
  "node_modules/.pnpm/canonicalize@2.0.0/node_modules/canonicalize/lib/canonicalize.js"(exports, module) {
    "use strict";
    module.exports = function serialize(object) {
      if (typeof object === "number" && isNaN(object)) {
        throw new Error("NaN is not allowed");
      }
      if (typeof object === "number" && !isFinite(object)) {
        throw new Error("Infinity is not allowed");
      }
      if (object === null || typeof object !== "object") {
        return JSON.stringify(object);
      }
      if (object.toJSON instanceof Function) {
        return serialize(object.toJSON());
      }
      if (Array.isArray(object)) {
        const values2 = object.reduce((t2, cv, ci) => {
          const comma = ci === 0 ? "" : ",";
          const value = cv === void 0 || typeof cv === "symbol" ? null : cv;
          return `${t2}${comma}${serialize(value)}`;
        }, "");
        return `[${values2}]`;
      }
      const values = Object.keys(object).sort().reduce((t2, cv) => {
        if (object[cv] === void 0 || typeof object[cv] === "symbol") {
          return t2;
        }
        const comma = t2.length === 0 ? "" : ",";
        return `${t2}${comma}${serialize(cv)}:${serialize(object[cv])}`;
      }, "");
      return `{${values}}`;
    };
  }
});

// node_modules/.pnpm/err-code@3.0.1/node_modules/err-code/index.js
var require_err_code = __commonJS({
  "node_modules/.pnpm/err-code@3.0.1/node_modules/err-code/index.js"(exports, module) {
    "use strict";
    function assign(obj, props) {
      for (const key in props) {
        Object.defineProperty(obj, key, {
          value: props[key],
          enumerable: true,
          configurable: true
        });
      }
      return obj;
    }
    function createError(err, code5, props) {
      if (!err || typeof err === "string") {
        throw new TypeError("Please pass an Error to err-code");
      }
      if (!props) {
        props = {};
      }
      if (typeof code5 === "object") {
        props = code5;
        code5 = "";
      }
      if (code5) {
        props.code = code5;
      }
      try {
        return assign(err, props);
      } catch (_) {
        props.message = err.message;
        props.stack = err.stack;
        const ErrClass = function() {
        };
        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));
        const output4 = assign(new ErrClass(), props);
        return output4;
      }
    }
    module.exports = createError;
  }
});

// node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js"(exports, module) {
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse2(val);
      } else if (type === "number" && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse2(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n2 = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n2 * y;
        case "weeks":
        case "week":
        case "w":
          return n2 * w;
        case "days":
        case "day":
        case "d":
          return n2 * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n2 * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n2 * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n2 * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n2;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n2, name4) {
      var isPlural = msAbs >= n2 * 1.5;
      return Math.round(ms / n2) + " " + name4 + (isPlural ? "s" : "");
    }
  }
});

// node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js"(exports, module) {
    function setup(env) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce5;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy;
      Object.keys(env).forEach((key) => {
        createDebug[key] = env[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash3 = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash3 = (hash3 << 5) - hash3 + namespace.charCodeAt(i);
          hash3 |= 0;
        }
        return createDebug.colors[Math.abs(hash3) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug2(...args) {
          if (!debug2.enabled) {
            return;
          }
          const self2 = debug2;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms = curr - (prevTime || curr);
          self2.diff = ms;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format3) => {
            if (match === "%%") {
              return "%";
            }
            index++;
            const formatter = createDebug.formatters[format3];
            if (typeof formatter === "function") {
              const val = args[index];
              match = formatter.call(self2, val);
              args.splice(index, 1);
              index--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug2.namespace = namespace;
        debug2.useColors = createDebug.useColors();
        debug2.color = createDebug.selectColor(namespace);
        debug2.extend = extend;
        debug2.destroy = createDebug.destroy;
        Object.defineProperty(debug2, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug2);
        }
        return debug2;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split3 = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
        const len = split3.length;
        for (i = 0; i < len; i++) {
          if (!split3[i]) {
            continue;
          }
          namespaces = split3[i].replace(/\*/g, ".*?");
          if (namespaces[0] === "-") {
            createDebug.skips.push(new RegExp("^" + namespaces.slice(1) + "$"));
          } else {
            createDebug.names.push(new RegExp("^" + namespaces + "$"));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name4) {
        if (name4[name4.length - 1] === "*") {
          return true;
        }
        let i;
        let len;
        for (i = 0, len = createDebug.skips.length; i < len; i++) {
          if (createDebug.skips[i].test(name4)) {
            return false;
          }
        }
        for (i = 0, len = createDebug.names.length; i < len; i++) {
          if (createDebug.names[i].test(name4)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
      }
      function coerce5(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module.exports = setup;
  }
});

// node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js"(exports, module) {
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load;
    exports.useColors = useColors;
    exports.storage = localstorage();
    exports.destroy = /* @__PURE__ */ (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index++;
        if (match === "%c") {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports.storage.setItem("debug", namespaces);
        } else {
          exports.storage.removeItem("debug");
        }
      } catch (error) {
      }
    }
    function load() {
      let r2;
      try {
        r2 = exports.storage.getItem("debug");
      } catch (error) {
      }
      if (!r2 && typeof process !== "undefined" && "env" in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {
      }
    }
    module.exports = require_common()(exports);
    var { formatters } = module.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// external-global-plugin:react/jsx-runtime
var require_jsx_runtime = __commonJS({
  "external-global-plugin:react/jsx-runtime"(exports, module) {
    module.exports = window.reactjsxruntime;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/defaultTo.js
var require_defaultTo = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/defaultTo.js"(exports, module) {
    function defaultTo2(value, defaultValue) {
      return value == null || value !== value ? defaultValue : value;
    }
    module.exports = defaultTo2;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js"(exports, module) {
    function isObject2(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject2;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag2 = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag2;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike3(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike3;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike3 = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike3(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject2 = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject2(value)) {
        return false;
      }
      var tag2 = baseGetTag(value);
      return tag2 == funcTag || tag2 == genTag || tag2 == asyncTag || tag2 == proxyTag;
    }
    module.exports = isFunction;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e2) {
        }
        try {
          return func + "";
        } catch (e2) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject2 = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject2(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash3(entries) {
      var index = -1, length5 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length5) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash3.prototype.clear = hashClear;
    Hash3.prototype["delete"] = hashDelete;
    Hash3.prototype.get = hashGet;
    Hash3.prototype.has = hashHas;
    Hash3.prototype.set = hashSet;
    module.exports = Hash3;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length5 = array.length;
      while (length5--) {
        if (eq(array[length5][0], key)) {
          return length5;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length5 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length5) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash3 = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash3(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash3()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length5 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length5) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache3 = memoized.cache;
        if (cache3.has(key)) {
          return cache3.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache3.set(key, result) || cache3;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache3.size === MAX_MEMOIZE_SIZE) {
          cache3.clear();
        }
        return key;
      });
      var cache3 = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string4) {
      var result = [];
      if (string4.charCodeAt(0) === 46) {
        result.push("");
      }
      string4.replace(rePropName, function(match, number4, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number4 || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length5 = array == null ? 0 : array.length, result = Array(length5);
      while (++index < length5) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString6(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString6;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString6 = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString6(value));
    }
    module.exports = castPath;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length5 = path.length;
      while (object != null && index < length5) {
        object = object[toKey(path[index++])];
      }
      return index && index == length5 ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/browser-ponyfill.js
var require_browser_ponyfill = __commonJS({
  "node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/browser-ponyfill.js"(exports, module) {
    var global2 = typeof self !== "undefined" ? self : exports;
    var __self__ = function() {
      function F() {
        this.fetch = false;
        this.DOMException = global2.DOMException;
      }
      F.prototype = global2;
      return new F();
    }();
    (function(self2) {
      var irrelevant = function(exports2) {
        var support = {
          searchParams: "URLSearchParams" in self2,
          iterable: "Symbol" in self2 && "iterator" in Symbol,
          blob: "FileReader" in self2 && "Blob" in self2 && function() {
            try {
              new Blob();
              return true;
            } catch (e2) {
              return false;
            }
          }(),
          formData: "FormData" in self2,
          arrayBuffer: "ArrayBuffer" in self2
        };
        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }
        if (support.arrayBuffer) {
          var viewClasses = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ];
          var isArrayBufferView = ArrayBuffer.isView || function(obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }
        function normalizeName(name4) {
          if (typeof name4 !== "string") {
            name4 = String(name4);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name4)) {
            throw new TypeError("Invalid character in header field name");
          }
          return name4.toLowerCase();
        }
        function normalizeValue(value) {
          if (typeof value !== "string") {
            value = String(value);
          }
          return value;
        }
        function iteratorFor(items) {
          var iterator = {
            next: function() {
              var value = items.shift();
              return { done: value === void 0, value };
            }
          };
          if (support.iterable) {
            iterator[Symbol.iterator] = function() {
              return iterator;
            };
          }
          return iterator;
        }
        function Headers3(headers) {
          this.map = {};
          if (headers instanceof Headers3) {
            headers.forEach(function(value, name4) {
              this.append(name4, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function(header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function(name4) {
              this.append(name4, headers[name4]);
            }, this);
          }
        }
        Headers3.prototype.append = function(name4, value) {
          name4 = normalizeName(name4);
          value = normalizeValue(value);
          var oldValue = this.map[name4];
          this.map[name4] = oldValue ? oldValue + ", " + value : value;
        };
        Headers3.prototype["delete"] = function(name4) {
          delete this.map[normalizeName(name4)];
        };
        Headers3.prototype.get = function(name4) {
          name4 = normalizeName(name4);
          return this.has(name4) ? this.map[name4] : null;
        };
        Headers3.prototype.has = function(name4) {
          return this.map.hasOwnProperty(normalizeName(name4));
        };
        Headers3.prototype.set = function(name4, value) {
          this.map[normalizeName(name4)] = normalizeValue(value);
        };
        Headers3.prototype.forEach = function(callback, thisArg) {
          for (var name4 in this.map) {
            if (this.map.hasOwnProperty(name4)) {
              callback.call(thisArg, this.map[name4], name4, this);
            }
          }
        };
        Headers3.prototype.keys = function() {
          var items = [];
          this.forEach(function(value, name4) {
            items.push(name4);
          });
          return iteratorFor(items);
        };
        Headers3.prototype.values = function() {
          var items = [];
          this.forEach(function(value) {
            items.push(value);
          });
          return iteratorFor(items);
        };
        Headers3.prototype.entries = function() {
          var items = [];
          this.forEach(function(value, name4) {
            items.push([name4, value]);
          });
          return iteratorFor(items);
        };
        if (support.iterable) {
          Headers3.prototype[Symbol.iterator] = Headers3.prototype.entries;
        }
        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
          }
          body.bodyUsed = true;
        }
        function fileReaderReady(reader) {
          return new Promise(function(resolve, reject) {
            reader.onload = function() {
              resolve(reader.result);
            };
            reader.onerror = function() {
              reject(reader.error);
            };
          });
        }
        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }
        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise;
        }
        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);
          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }
          return chars.join("");
        }
        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }
        function Body() {
          this.bodyUsed = false;
          this._initBody = function(body) {
            this._bodyInit = body;
            if (!body) {
              this._bodyText = "";
            } else if (typeof body === "string") {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }
            if (!this.headers.get("content-type")) {
              if (typeof body === "string") {
                this.headers.set("content-type", "text/plain;charset=UTF-8");
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set("content-type", this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
              }
            }
          };
          if (support.blob) {
            this.blob = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }
              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as blob");
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };
            this.arrayBuffer = function() {
              if (this._bodyArrayBuffer) {
                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
              } else {
                return this.blob().then(readBlobAsArrayBuffer);
              }
            };
          }
          this.text = function() {
            var rejected = consumed(this);
            if (rejected) {
              return rejected;
            }
            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error("could not read FormData body as text");
            } else {
              return Promise.resolve(this._bodyText);
            }
          };
          if (support.formData) {
            this.formData = function() {
              return this.text().then(decode17);
            };
          }
          this.json = function() {
            return this.text().then(JSON.parse);
          };
          return this;
        }
        var methods = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }
        function Request(input, options) {
          options = options || {};
          var body = options.body;
          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError("Already read");
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers3(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }
          this.credentials = options.credentials || this.credentials || "same-origin";
          if (options.headers || !this.headers) {
            this.headers = new Headers3(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || "GET");
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;
          if ((this.method === "GET" || this.method === "HEAD") && body) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
          }
          this._initBody(body);
        }
        Request.prototype.clone = function() {
          return new Request(this, { body: this._bodyInit });
        };
        function decode17(body) {
          var form = new FormData();
          body.trim().split("&").forEach(function(bytes4) {
            if (bytes4) {
              var split3 = bytes4.split("=");
              var name4 = split3.shift().replace(/\+/g, " ");
              var value = split3.join("=").replace(/\+/g, " ");
              form.append(decodeURIComponent(name4), decodeURIComponent(value));
            }
          });
          return form;
        }
        function parseHeaders(rawHeaders) {
          var headers = new Headers3();
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
          preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
            var parts = line.split(":");
            var key = parts.shift().trim();
            if (key) {
              var value = parts.join(":").trim();
              headers.append(key, value);
            }
          });
          return headers;
        }
        Body.call(Request.prototype);
        function Response(bodyInit, options) {
          if (!options) {
            options = {};
          }
          this.type = "default";
          this.status = options.status === void 0 ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = "statusText" in options ? options.statusText : "OK";
          this.headers = new Headers3(options.headers);
          this.url = options.url || "";
          this._initBody(bodyInit);
        }
        Body.call(Response.prototype);
        Response.prototype.clone = function() {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers3(this.headers),
            url: this.url
          });
        };
        Response.error = function() {
          var response = new Response(null, { status: 0, statusText: "" });
          response.type = "error";
          return response;
        };
        var redirectStatuses = [301, 302, 303, 307, 308];
        Response.redirect = function(url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError("Invalid status code");
          }
          return new Response(null, { status, headers: { location: url } });
        };
        exports2.DOMException = self2.DOMException;
        try {
          new exports2.DOMException();
        } catch (err) {
          exports2.DOMException = function(message2, name4) {
            this.message = message2;
            this.name = name4;
            var error = Error(message2);
            this.stack = error.stack;
          };
          exports2.DOMException.prototype = Object.create(Error.prototype);
          exports2.DOMException.prototype.constructor = exports2.DOMException;
        }
        function fetch2(input, init) {
          return new Promise(function(resolve, reject) {
            var request = new Request(input, init);
            if (request.signal && request.signal.aborted) {
              return reject(new exports2.DOMException("Aborted", "AbortError"));
            }
            var xhr = new XMLHttpRequest();
            function abortXhr() {
              xhr.abort();
            }
            xhr.onload = function() {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || "")
              };
              options.url = "responseURL" in xhr ? xhr.responseURL : options.headers.get("X-Request-URL");
              var body = "response" in xhr ? xhr.response : xhr.responseText;
              resolve(new Response(body, options));
            };
            xhr.onerror = function() {
              reject(new TypeError("Network request failed"));
            };
            xhr.ontimeout = function() {
              reject(new TypeError("Network request failed"));
            };
            xhr.onabort = function() {
              reject(new exports2.DOMException("Aborted", "AbortError"));
            };
            xhr.open(request.method, request.url, true);
            if (request.credentials === "include") {
              xhr.withCredentials = true;
            } else if (request.credentials === "omit") {
              xhr.withCredentials = false;
            }
            if ("responseType" in xhr && support.blob) {
              xhr.responseType = "blob";
            }
            request.headers.forEach(function(value, name4) {
              xhr.setRequestHeader(name4, value);
            });
            if (request.signal) {
              request.signal.addEventListener("abort", abortXhr);
              xhr.onreadystatechange = function() {
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener("abort", abortXhr);
                }
              };
            }
            xhr.send(typeof request._bodyInit === "undefined" ? null : request._bodyInit);
          });
        }
        fetch2.polyfill = true;
        if (!self2.fetch) {
          self2.fetch = fetch2;
          self2.Headers = Headers3;
          self2.Request = Request;
          self2.Response = Response;
        }
        exports2.Headers = Headers3;
        exports2.Request = Request;
        exports2.Response = Response;
        exports2.fetch = fetch2;
        Object.defineProperty(exports2, "__esModule", { value: true });
        return exports2;
      }({});
    })(__self__);
    __self__.fetch.ponyfill = true;
    delete __self__.fetch.polyfill;
    var ctx = __self__;
    exports = ctx.fetch;
    exports.default = ctx.fetch;
    exports.fetch = ctx.fetch;
    exports.Headers = ctx.Headers;
    exports.Request = ctx.Request;
    exports.Response = ctx.Response;
    module.exports = exports;
  }
});

// src/IdentifierHoverComponent.tsx
var import_react = __toESM(require_react(), 1);
var import_veramo_react = __toESM(require_veramo_react(), 1);
var import_react_query = __toESM(require_react_query(), 1);
var import_antd = __toESM(require_antd(), 1);

// node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length5) {
  if (!length5) {
    length5 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output4 = allocUnsafe(length5);
  let offset = 0;
  for (const arr of arrays) {
    output4.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output4);
}

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name4) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255;
  }
  for (var i = 0; i < ALPHABET.length; i++) {
    var x = ALPHABET.charAt(i);
    var xc = x.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x + " is ambiguous");
    }
    BASE_MAP[xc] = i;
  }
  var BASE2 = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE2) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE2);
  function encode15(source) {
    if (source instanceof Uint8Array)
      ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length5 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i2 = 0;
      for (var it1 = size - 1; (carry !== 0 || i2 < length5) && it1 !== -1; it1--, i2++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE2 >>> 0;
        carry = carry / BASE2 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length5 = i2;
      pbegin++;
    }
    var it2 = size - length5;
    while (it2 !== size && b58[it2] === 0) {
      it2++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it2 < size; ++it2) {
      str += ALPHABET.charAt(b58[it2]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length5 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i2 = 0;
      for (var it3 = size - 1; (carry !== 0 || i2 < length5) && it3 !== -1; it3--, i2++) {
        carry += BASE2 * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length5 = i2;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length5;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j2 = zeroes;
    while (it4 !== size) {
      vch[j2++] = b256[it4++];
    }
    return vch;
  }
  function decode17(string4) {
    var buffer = decodeUnsafe(string4);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name4} character`);
  }
  return {
    encode: encode15,
    decodeUnsafe,
    decode: decode17
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o2) => {
  if (o2 instanceof Uint8Array && o2.constructor.name === "Uint8Array")
    return o2;
  if (o2 instanceof ArrayBuffer)
    return new Uint8Array(o2);
  if (ArrayBuffer.isView(o2)) {
    return new Uint8Array(o2.buffer, o2.byteOffset, o2.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b) => new TextDecoder().decode(b);

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name4, prefix, baseEncode) {
    this.name = name4;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes4) {
    if (bytes4 instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes4)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name4, prefix, baseDecode) {
    this.name = name4;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name4, prefix, baseEncode, baseDecode) {
    this.name = name4;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name4, prefix, baseEncode);
    this.decoder = new Decoder(name4, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name4, prefix, encode: encode15, decode: decode17 }) => new Codec(name4, prefix, encode15, decode17);
var baseX = ({ prefix, name: name4, alphabet: alphabet5 }) => {
  const { encode: encode15, decode: decode17 } = base_x_default(alphabet5, name4);
  return from({
    prefix,
    name: name4,
    encode: encode15,
    decode: (text) => coerce(decode17(text))
  });
};
var decode = (string4, alphabet5, bitsPerChar, name4) => {
  const codes = {};
  for (let i = 0; i < alphabet5.length; ++i) {
    codes[alphabet5[i]] = i;
  }
  let end = string4.length;
  while (string4[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i = 0; i < end; ++i) {
    const value = codes[string4[i]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name4} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet5, bitsPerChar) => {
  const pad = alphabet5[alphabet5.length - 1] === "=";
  const mask2 = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i = 0; i < data.length; ++i) {
    buffer = buffer << 8 | data[i];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet5[mask2 & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet5[mask2 & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name4, prefix, bitsPerChar, alphabet: alphabet5 }) => {
  return from({
    prefix,
    name: name4,
    encode(input) {
      return encode(input, alphabet5, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet5, bitsPerChar, name4);
    }
  });
};

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}");
var alphabetBytesToChars = alphabet.reduce((p, c, i) => {
  p[i] = c;
  return p;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p, c, i) => {
  p[c.codePointAt(0)] = i;
  return p;
}, []);
function encode2(data) {
  return data.reduce((p, c) => {
    p += alphabetBytesToChars[c];
    return p;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "\u{1F680}",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/varint.js
var varint_exports = {};
__export(varint_exports, {
  decode: () => decode4,
  encodeTo: () => encodeTo,
  encodingLength: () => encodingLength
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
  do {
    if (counter >= l) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b = buf[counter++];
    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code5 = varint_default.decode(data, offset);
  return [
    code5,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/digest.js
var create = (code5, digest4) => {
  const size = digest4.byteLength;
  const sizeOffset = encodingLength(code5);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes4 = new Uint8Array(digestOffset + size);
  encodeTo(code5, bytes4, 0);
  encodeTo(size, bytes4, sizeOffset);
  bytes4.set(digest4, digestOffset);
  return new Digest(code5, size, digest4, bytes4);
};
var decode5 = (multihash) => {
  const bytes4 = coerce(multihash);
  const [code5, sizeOffset] = decode4(bytes4);
  const [size, digestOffset] = decode4(bytes4.subarray(sizeOffset));
  const digest4 = bytes4.subarray(sizeOffset + digestOffset);
  if (digest4.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code5, size, digest4, bytes4);
};
var equals2 = (a, b) => {
  if (a === b) {
    return true;
  } else {
    return a.code === b.code && a.size === b.size && equals(a.bytes, b.bytes);
  }
};
var Digest = class {
  constructor(code5, size, digest4, bytes4) {
    this.code = code5;
    this.size = size;
    this.digest = digest4;
    this.bytes = bytes4;
  }
};

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name4, code: code5, encode: encode15 }) => new Hasher(name4, code5, encode15);
var Hasher = class {
  constructor(name4, code5, encode15) {
    this.name = name4;
    this.code = code5;
    this.encode = encode15;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest4) => create(this.code, digest4));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name4) => async (data) => new Uint8Array(await crypto.subtle.digest(name4, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/cid.js
var CID = class _CID {
  constructor(version3, code5, multihash, bytes4) {
    this.code = code5;
    this.version = version3;
    this.multihash = multihash;
    this.bytes = bytes4;
    this.byteOffset = bytes4.byteOffset;
    this.byteLength = bytes4.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code5, multihash } = this;
        if (code5 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code5, digest: digest4 } = this.multihash;
        const multihash = create(code5, digest4);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base5) {
    const { bytes: bytes4, version: version3, _baseCache } = this;
    switch (version3) {
      case 0:
        return toStringV0(bytes4, _baseCache, base5 || base58btc.encoder);
      default:
        return toStringV1(bytes4, _baseCache, base5 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version3, code: code5, multihash, bytes: bytes4 } = value;
      return new _CID(version3, code5, multihash, bytes4 || encodeCID(version3, code5, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version3, multihash, code: code5 } = value;
      const digest4 = decode5(multihash);
      return _CID.create(version3, code5, digest4);
    } else {
      return null;
    }
  }
  static create(version3, code5, digest4) {
    if (typeof code5 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version3) {
      case 0: {
        if (code5 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version3, code5, digest4, digest4.bytes);
        }
      }
      case 1: {
        const bytes4 = encodeCID(version3, code5, digest4.bytes);
        return new _CID(version3, code5, digest4, bytes4);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest4) {
    return _CID.create(0, DAG_PB_CODE, digest4);
  }
  static createV1(code5, digest4) {
    return _CID.create(1, code5, digest4);
  }
  static decode(bytes4) {
    const [cid, remainder] = _CID.decodeFirst(bytes4);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes4) {
    const specs = _CID.inspectBytes(bytes4);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes4.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest4 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest4) : _CID.createV1(specs.codec, digest4);
    return [
      cid,
      bytes4.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i, length5] = decode4(initialBytes.subarray(offset));
      offset += length5;
      return i;
    };
    let version3 = next();
    let codec = DAG_PB_CODE;
    if (version3 === 18) {
      version3 = 0;
      offset = 0;
    } else if (version3 === 1) {
      codec = next();
    }
    if (version3 !== 0 && version3 !== 1) {
      throw new RangeError(`Invalid CID version ${version3}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version3,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base5) {
    const [prefix, bytes4] = parseCIDtoBytes(source, base5);
    const cid = _CID.decode(bytes4);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base5) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base5 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base5 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base5 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base5 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base5.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes4, cache3, base5) => {
  const { prefix } = base5;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base5.name} encoding`);
  }
  const cid = cache3.get(prefix);
  if (cid == null) {
    const cid2 = base5.encode(bytes4).slice(1);
    cache3.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes4, cache3, base5) => {
  const { prefix } = base5;
  const cid = cache3.get(prefix);
  if (cid == null) {
    const cid2 = base5.encode(bytes4);
    cache3.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version3, code5, multihash) => {
  const codeOffset = encodingLength(version3);
  const hashOffset = codeOffset + encodingLength(code5);
  const bytes4 = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version3, bytes4, 0);
  encodeTo(code5, bytes4, codeOffset);
  bytes4.set(multihash, hashOffset);
  return bytes4;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message2) => {
  if (range.test(version)) {
    console.warn(message2);
  } else {
    throw new Error(message2);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name4, prefix, encode15, decode17) {
  return {
    name: name4,
    prefix,
    encoder: {
      name: name4,
      prefix,
      encode: encode15
    },
    decoder: { decode: decode17 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string4 = "a";
  for (let i = 0; i < buf.length; i++) {
    string4 += String.fromCharCode(buf[i]);
  }
  return string4;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string4, encoding = "utf8") {
  const base5 = bases_default[encoding];
  if (!base5) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string4, "utf-8"));
  }
  return base5.decoder.decode(`${base5.prefix}${string4}`);
}

// node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base5 = bases_default[encoding];
  if (!base5) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base5.encoder.encode(array).substring(1);
}

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_assert.js
function number(n2) {
  if (!Number.isSafeInteger(n2) || n2 < 0)
    throw new Error(`Wrong positive integer: ${n2}`);
}
function isBytes(a) {
  return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
}
function bytes(b, ...lengths) {
  if (!isBytes(b))
    throw new Error("Expected Uint8Array");
  if (lengths.length > 0 && !lengths.includes(b.length))
    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);
}
function hash(hash3) {
  if (typeof hash3 !== "function" || typeof hash3.create !== "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  number(hash3.outputLen);
  number(hash3.blockLen);
}
function exists(instance, checkFinished = true) {
  if (instance.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (checkFinished && instance.finished)
    throw new Error("Hash#digest() has already been called");
}
function output(out, instance) {
  bytes(out);
  const min2 = instance.outputLen;
  if (out.length < min2) {
    throw new Error(`digestInto() expects output buffer of length at least ${min2}`);
  }
}

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/crypto.js
var crypto2 = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : void 0;

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/utils.js
var u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
function isBytes2(a) {
  return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
}
var createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
var rotr = (word, shift) => word << 32 - shift | word >>> shift;
var isLE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!isLE)
  throw new Error("Non little-endian hardware is not supported");
function utf8ToBytes(str) {
  if (typeof str !== "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
  return new Uint8Array(new TextEncoder().encode(str));
}
function toBytes(data) {
  if (typeof data === "string")
    data = utf8ToBytes(data);
  if (!isBytes2(data))
    throw new Error(`expected Uint8Array, got ${typeof data}`);
  return data;
}
function concatBytes(...arrays) {
  let sum2 = 0;
  for (let i = 0; i < arrays.length; i++) {
    const a = arrays[i];
    if (!isBytes2(a))
      throw new Error("Uint8Array expected");
    sum2 += a.length;
  }
  const res = new Uint8Array(sum2);
  for (let i = 0, pad = 0; i < arrays.length; i++) {
    const a = arrays[i];
    res.set(a, pad);
    pad += a.length;
  }
  return res;
}
var Hash = class {
  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }
};
var toStr = {}.toString;
function wrapConstructor(hashCons) {
  const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
  const tmp = hashCons();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = () => hashCons();
  return hashC;
}
function wrapXOFConstructorWithOpts(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = (opts) => hashCons(opts);
  return hashC;
}
function randomBytes(bytesLength = 32) {
  if (crypto2 && typeof crypto2.getRandomValues === "function") {
    return crypto2.getRandomValues(new Uint8Array(bytesLength));
  }
  throw new Error("crypto.getRandomValues must be defined");
}

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_sha2.js
function setBigUint64(view, byteOffset, value, isLE4) {
  if (typeof view.setBigUint64 === "function")
    return view.setBigUint64(byteOffset, value, isLE4);
  const _32n3 = BigInt(32);
  const _u32_max = BigInt(4294967295);
  const wh = Number(value >> _32n3 & _u32_max);
  const wl = Number(value & _u32_max);
  const h = isLE4 ? 4 : 0;
  const l = isLE4 ? 0 : 4;
  view.setUint32(byteOffset + h, wh, isLE4);
  view.setUint32(byteOffset + l, wl, isLE4);
}
var SHA2 = class extends Hash {
  constructor(blockLen, outputLen, padOffset, isLE4) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.padOffset = padOffset;
    this.isLE = isLE4;
    this.finished = false;
    this.length = 0;
    this.pos = 0;
    this.destroyed = false;
    this.buffer = new Uint8Array(blockLen);
    this.view = createView(this.buffer);
  }
  update(data) {
    exists(this);
    const { view, buffer, blockLen } = this;
    data = toBytes(data);
    const len = data.length;
    for (let pos = 0; pos < len; ) {
      const take = Math.min(blockLen - this.pos, len - pos);
      if (take === blockLen) {
        const dataView = createView(data);
        for (; blockLen <= len - pos; pos += blockLen)
          this.process(dataView, pos);
        continue;
      }
      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      pos += take;
      if (this.pos === blockLen) {
        this.process(view, 0);
        this.pos = 0;
      }
    }
    this.length += data.length;
    this.roundClean();
    return this;
  }
  digestInto(out) {
    exists(this);
    output(out, this);
    this.finished = true;
    const { buffer, view, blockLen, isLE: isLE4 } = this;
    let { pos } = this;
    buffer[pos++] = 128;
    this.buffer.subarray(pos).fill(0);
    if (this.padOffset > blockLen - pos) {
      this.process(view, 0);
      pos = 0;
    }
    for (let i = pos; i < blockLen; i++)
      buffer[i] = 0;
    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE4);
    this.process(view, 0);
    const oview = createView(out);
    const len = this.outputLen;
    if (len % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const outLen = len / 4;
    const state = this.get();
    if (outLen > state.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let i = 0; i < outLen; i++)
      oview.setUint32(4 * i, state[i], isLE4);
  }
  digest() {
    const { buffer, outputLen } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }
  _cloneInto(to) {
    to || (to = new this.constructor());
    to.set(...this.get());
    const { blockLen, buffer, length: length5, finished, destroyed, pos } = this;
    to.length = length5;
    to.pos = pos;
    to.finished = finished;
    to.destroyed = destroyed;
    if (length5 % blockLen)
      to.buffer.set(buffer);
    return to;
  }
};

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_u64.js
var U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
var _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n2, le = false) {
  if (le)
    return { h: Number(n2 & U32_MASK64), l: Number(n2 >> _32n & U32_MASK64) };
  return { h: Number(n2 >> _32n & U32_MASK64) | 0, l: Number(n2 & U32_MASK64) | 0 };
}
function split(lst, le = false) {
  let Ah = new Uint32Array(lst.length);
  let Al = new Uint32Array(lst.length);
  for (let i = 0; i < lst.length; i++) {
    const { h, l } = fromBig(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }
  return [Ah, Al];
}
var toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0);
var shrSH = (h, _l, s) => h >>> s;
var shrSL = (h, l, s) => h << 32 - s | l >>> s;
var rotrSH = (h, l, s) => h >>> s | l << 32 - s;
var rotrSL = (h, l, s) => h << 32 - s | l >>> s;
var rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
var rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s;
var rotr32H = (_h, l) => l;
var rotr32L = (h, _l) => h;
var rotlSH = (h, l, s) => h << s | l >>> 32 - s;
var rotlSL = (h, l, s) => l << s | h >>> 32 - s;
var rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
var rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s;
function add(Ah, Al, Bh, Bl) {
  const l = (Al >>> 0) + (Bl >>> 0);
  return { h: Ah + Bh + (l / 2 ** 32 | 0) | 0, l: l | 0 };
}
var add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
var add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
var add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
var add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
var add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
var add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;
var u64 = {
  fromBig,
  split,
  toBig,
  shrSH,
  shrSL,
  rotrSH,
  rotrSL,
  rotrBH,
  rotrBL,
  rotr32H,
  rotr32L,
  rotlSH,
  rotlSL,
  rotlBH,
  rotlBL,
  add,
  add3L,
  add3H,
  add4L,
  add4H,
  add5H,
  add5L
};
var u64_default = u64;

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha512.js
var [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64_default.split([
  "0x428a2f98d728ae22",
  "0x7137449123ef65cd",
  "0xb5c0fbcfec4d3b2f",
  "0xe9b5dba58189dbbc",
  "0x3956c25bf348b538",
  "0x59f111f1b605d019",
  "0x923f82a4af194f9b",
  "0xab1c5ed5da6d8118",
  "0xd807aa98a3030242",
  "0x12835b0145706fbe",
  "0x243185be4ee4b28c",
  "0x550c7dc3d5ffb4e2",
  "0x72be5d74f27b896f",
  "0x80deb1fe3b1696b1",
  "0x9bdc06a725c71235",
  "0xc19bf174cf692694",
  "0xe49b69c19ef14ad2",
  "0xefbe4786384f25e3",
  "0x0fc19dc68b8cd5b5",
  "0x240ca1cc77ac9c65",
  "0x2de92c6f592b0275",
  "0x4a7484aa6ea6e483",
  "0x5cb0a9dcbd41fbd4",
  "0x76f988da831153b5",
  "0x983e5152ee66dfab",
  "0xa831c66d2db43210",
  "0xb00327c898fb213f",
  "0xbf597fc7beef0ee4",
  "0xc6e00bf33da88fc2",
  "0xd5a79147930aa725",
  "0x06ca6351e003826f",
  "0x142929670a0e6e70",
  "0x27b70a8546d22ffc",
  "0x2e1b21385c26c926",
  "0x4d2c6dfc5ac42aed",
  "0x53380d139d95b3df",
  "0x650a73548baf63de",
  "0x766a0abb3c77b2a8",
  "0x81c2c92e47edaee6",
  "0x92722c851482353b",
  "0xa2bfe8a14cf10364",
  "0xa81a664bbc423001",
  "0xc24b8b70d0f89791",
  "0xc76c51a30654be30",
  "0xd192e819d6ef5218",
  "0xd69906245565a910",
  "0xf40e35855771202a",
  "0x106aa07032bbd1b8",
  "0x19a4c116b8d2d0c8",
  "0x1e376c085141ab53",
  "0x2748774cdf8eeb99",
  "0x34b0bcb5e19b48a8",
  "0x391c0cb3c5c95a63",
  "0x4ed8aa4ae3418acb",
  "0x5b9cca4f7763e373",
  "0x682e6ff3d6b2b8a3",
  "0x748f82ee5defb2fc",
  "0x78a5636f43172f60",
  "0x84c87814a1f0ab72",
  "0x8cc702081a6439ec",
  "0x90befffa23631e28",
  "0xa4506cebde82bde9",
  "0xbef9a3f7b2c67915",
  "0xc67178f2e372532b",
  "0xca273eceea26619c",
  "0xd186b8c721c0c207",
  "0xeada7dd6cde0eb1e",
  "0xf57d4f7fee6ed178",
  "0x06f067aa72176fba",
  "0x0a637dc5a2c898a6",
  "0x113f9804bef90dae",
  "0x1b710b35131c471b",
  "0x28db77f523047d84",
  "0x32caab7b40c72493",
  "0x3c9ebe0a15c9bebc",
  "0x431d67c49c100d4c",
  "0x4cc5d4becb3e42b6",
  "0x597f299cfc657e2a",
  "0x5fcb6fab3ad6faec",
  "0x6c44198c4a475817"
].map((n2) => BigInt(n2))))();
var SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);
var SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);
var SHA512 = class extends SHA2 {
  constructor() {
    super(128, 64, 16, false);
    this.Ah = 1779033703 | 0;
    this.Al = 4089235720 | 0;
    this.Bh = 3144134277 | 0;
    this.Bl = 2227873595 | 0;
    this.Ch = 1013904242 | 0;
    this.Cl = 4271175723 | 0;
    this.Dh = 2773480762 | 0;
    this.Dl = 1595750129 | 0;
    this.Eh = 1359893119 | 0;
    this.El = 2917565137 | 0;
    this.Fh = 2600822924 | 0;
    this.Fl = 725511199 | 0;
    this.Gh = 528734635 | 0;
    this.Gl = 4215389547 | 0;
    this.Hh = 1541459225 | 0;
    this.Hl = 327033209 | 0;
  }
  // prettier-ignore
  get() {
    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
  }
  // prettier-ignore
  set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
    this.Ah = Ah | 0;
    this.Al = Al | 0;
    this.Bh = Bh | 0;
    this.Bl = Bl | 0;
    this.Ch = Ch | 0;
    this.Cl = Cl | 0;
    this.Dh = Dh | 0;
    this.Dl = Dl | 0;
    this.Eh = Eh | 0;
    this.El = El | 0;
    this.Fh = Fh | 0;
    this.Fl = Fl | 0;
    this.Gh = Gh | 0;
    this.Gl = Gl | 0;
    this.Hh = Hh | 0;
    this.Hl = Hl | 0;
  }
  process(view, offset) {
    for (let i = 0; i < 16; i++, offset += 4) {
      SHA512_W_H[i] = view.getUint32(offset);
      SHA512_W_L[i] = view.getUint32(offset += 4);
    }
    for (let i = 16; i < 80; i++) {
      const W15h = SHA512_W_H[i - 15] | 0;
      const W15l = SHA512_W_L[i - 15] | 0;
      const s0h = u64_default.rotrSH(W15h, W15l, 1) ^ u64_default.rotrSH(W15h, W15l, 8) ^ u64_default.shrSH(W15h, W15l, 7);
      const s0l = u64_default.rotrSL(W15h, W15l, 1) ^ u64_default.rotrSL(W15h, W15l, 8) ^ u64_default.shrSL(W15h, W15l, 7);
      const W2h = SHA512_W_H[i - 2] | 0;
      const W2l = SHA512_W_L[i - 2] | 0;
      const s1h = u64_default.rotrSH(W2h, W2l, 19) ^ u64_default.rotrBH(W2h, W2l, 61) ^ u64_default.shrSH(W2h, W2l, 6);
      const s1l = u64_default.rotrSL(W2h, W2l, 19) ^ u64_default.rotrBL(W2h, W2l, 61) ^ u64_default.shrSL(W2h, W2l, 6);
      const SUMl = u64_default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
      const SUMh = u64_default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
      SHA512_W_H[i] = SUMh | 0;
      SHA512_W_L[i] = SUMl | 0;
    }
    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
    for (let i = 0; i < 80; i++) {
      const sigma1h = u64_default.rotrSH(Eh, El, 14) ^ u64_default.rotrSH(Eh, El, 18) ^ u64_default.rotrBH(Eh, El, 41);
      const sigma1l = u64_default.rotrSL(Eh, El, 14) ^ u64_default.rotrSL(Eh, El, 18) ^ u64_default.rotrBL(Eh, El, 41);
      const CHIh = Eh & Fh ^ ~Eh & Gh;
      const CHIl = El & Fl ^ ~El & Gl;
      const T1ll = u64_default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
      const T1h = u64_default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
      const T1l = T1ll | 0;
      const sigma0h = u64_default.rotrSH(Ah, Al, 28) ^ u64_default.rotrBH(Ah, Al, 34) ^ u64_default.rotrBH(Ah, Al, 39);
      const sigma0l = u64_default.rotrSL(Ah, Al, 28) ^ u64_default.rotrBL(Ah, Al, 34) ^ u64_default.rotrBL(Ah, Al, 39);
      const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;
      const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;
      Hh = Gh | 0;
      Hl = Gl | 0;
      Gh = Fh | 0;
      Gl = Fl | 0;
      Fh = Eh | 0;
      Fl = El | 0;
      ({ h: Eh, l: El } = u64_default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
      Dh = Ch | 0;
      Dl = Cl | 0;
      Ch = Bh | 0;
      Cl = Bl | 0;
      Bh = Ah | 0;
      Bl = Al | 0;
      const All = u64_default.add3L(T1l, sigma0l, MAJl);
      Ah = u64_default.add3H(All, T1h, sigma0h, MAJh);
      Al = All | 0;
    }
    ({ h: Ah, l: Al } = u64_default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
    ({ h: Bh, l: Bl } = u64_default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
    ({ h: Ch, l: Cl } = u64_default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
    ({ h: Dh, l: Dl } = u64_default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
    ({ h: Eh, l: El } = u64_default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
    ({ h: Fh, l: Fl } = u64_default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
    ({ h: Gh, l: Gl } = u64_default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
    ({ h: Hh, l: Hl } = u64_default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
  }
  roundClean() {
    SHA512_W_H.fill(0);
    SHA512_W_L.fill(0);
  }
  destroy() {
    this.buffer.fill(0);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var sha5122 = /* @__PURE__ */ wrapConstructor(() => new SHA512());

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/utils.js
var utils_exports = {};
__export(utils_exports, {
  bitGet: () => bitGet,
  bitLen: () => bitLen,
  bitMask: () => bitMask,
  bitSet: () => bitSet,
  bytesToHex: () => bytesToHex,
  bytesToNumberBE: () => bytesToNumberBE,
  bytesToNumberLE: () => bytesToNumberLE,
  concatBytes: () => concatBytes2,
  createHmacDrbg: () => createHmacDrbg,
  ensureBytes: () => ensureBytes,
  equalBytes: () => equalBytes,
  hexToBytes: () => hexToBytes,
  hexToNumber: () => hexToNumber,
  isBytes: () => isBytes3,
  numberToBytesBE: () => numberToBytesBE,
  numberToBytesLE: () => numberToBytesLE,
  numberToHexUnpadded: () => numberToHexUnpadded,
  numberToVarBytesBE: () => numberToVarBytesBE,
  utf8ToBytes: () => utf8ToBytes2,
  validateObject: () => validateObject
});
var _0n = BigInt(0);
var _1n = BigInt(1);
var _2n = BigInt(2);
function isBytes3(a) {
  return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
}
var hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, "0"));
function bytesToHex(bytes4) {
  if (!isBytes3(bytes4))
    throw new Error("Uint8Array expected");
  let hex = "";
  for (let i = 0; i < bytes4.length; i++) {
    hex += hexes[bytes4[i]];
  }
  return hex;
}
function numberToHexUnpadded(num) {
  const hex = num.toString(16);
  return hex.length & 1 ? `0${hex}` : hex;
}
function hexToNumber(hex) {
  if (typeof hex !== "string")
    throw new Error("hex string expected, got " + typeof hex);
  return BigInt(hex === "" ? "0" : `0x${hex}`);
}
var asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
function asciiToBase16(char) {
  if (char >= asciis._0 && char <= asciis._9)
    return char - asciis._0;
  if (char >= asciis._A && char <= asciis._F)
    return char - (asciis._A - 10);
  if (char >= asciis._a && char <= asciis._f)
    return char - (asciis._a - 10);
  return;
}
function hexToBytes(hex) {
  if (typeof hex !== "string")
    throw new Error("hex string expected, got " + typeof hex);
  const hl = hex.length;
  const al = hl / 2;
  if (hl % 2)
    throw new Error("padded hex string expected, got unpadded hex of length " + hl);
  const array = new Uint8Array(al);
  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {
    const n1 = asciiToBase16(hex.charCodeAt(hi));
    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
    if (n1 === void 0 || n2 === void 0) {
      const char = hex[hi] + hex[hi + 1];
      throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
    }
    array[ai] = n1 * 16 + n2;
  }
  return array;
}
function bytesToNumberBE(bytes4) {
  return hexToNumber(bytesToHex(bytes4));
}
function bytesToNumberLE(bytes4) {
  if (!isBytes3(bytes4))
    throw new Error("Uint8Array expected");
  return hexToNumber(bytesToHex(Uint8Array.from(bytes4).reverse()));
}
function numberToBytesBE(n2, len) {
  return hexToBytes(n2.toString(16).padStart(len * 2, "0"));
}
function numberToBytesLE(n2, len) {
  return numberToBytesBE(n2, len).reverse();
}
function numberToVarBytesBE(n2) {
  return hexToBytes(numberToHexUnpadded(n2));
}
function ensureBytes(title, hex, expectedLength) {
  let res;
  if (typeof hex === "string") {
    try {
      res = hexToBytes(hex);
    } catch (e2) {
      throw new Error(`${title} must be valid hex string, got "${hex}". Cause: ${e2}`);
    }
  } else if (isBytes3(hex)) {
    res = Uint8Array.from(hex);
  } else {
    throw new Error(`${title} must be hex string or Uint8Array`);
  }
  const len = res.length;
  if (typeof expectedLength === "number" && len !== expectedLength)
    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);
  return res;
}
function concatBytes2(...arrays) {
  let sum2 = 0;
  for (let i = 0; i < arrays.length; i++) {
    const a = arrays[i];
    if (!isBytes3(a))
      throw new Error("Uint8Array expected");
    sum2 += a.length;
  }
  let res = new Uint8Array(sum2);
  let pad = 0;
  for (let i = 0; i < arrays.length; i++) {
    const a = arrays[i];
    res.set(a, pad);
    pad += a.length;
  }
  return res;
}
function equalBytes(a, b) {
  if (a.length !== b.length)
    return false;
  let diff = 0;
  for (let i = 0; i < a.length; i++)
    diff |= a[i] ^ b[i];
  return diff === 0;
}
function utf8ToBytes2(str) {
  if (typeof str !== "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
  return new Uint8Array(new TextEncoder().encode(str));
}
function bitLen(n2) {
  let len;
  for (len = 0; n2 > _0n; n2 >>= _1n, len += 1)
    ;
  return len;
}
function bitGet(n2, pos) {
  return n2 >> BigInt(pos) & _1n;
}
var bitSet = (n2, pos, value) => {
  return n2 | (value ? _1n : _0n) << BigInt(pos);
};
var bitMask = (n2) => (_2n << BigInt(n2 - 1)) - _1n;
var u8n = (data) => new Uint8Array(data);
var u8fr = (arr) => Uint8Array.from(arr);
function createHmacDrbg(hashLen, qByteLen, hmacFn) {
  if (typeof hashLen !== "number" || hashLen < 2)
    throw new Error("hashLen must be a number");
  if (typeof qByteLen !== "number" || qByteLen < 2)
    throw new Error("qByteLen must be a number");
  if (typeof hmacFn !== "function")
    throw new Error("hmacFn must be a function");
  let v = u8n(hashLen);
  let k = u8n(hashLen);
  let i = 0;
  const reset = () => {
    v.fill(1);
    k.fill(0);
    i = 0;
  };
  const h = (...b) => hmacFn(k, v, ...b);
  const reseed = (seed = u8n()) => {
    k = h(u8fr([0]), seed);
    v = h();
    if (seed.length === 0)
      return;
    k = h(u8fr([1]), seed);
    v = h();
  };
  const gen3 = () => {
    if (i++ >= 1e3)
      throw new Error("drbg: tried 1000 values");
    let len = 0;
    const out = [];
    while (len < qByteLen) {
      v = h();
      const sl = v.slice();
      out.push(sl);
      len += v.length;
    }
    return concatBytes2(...out);
  };
  const genUntil = (seed, pred) => {
    reset();
    reseed(seed);
    let res = void 0;
    while (!(res = pred(gen3())))
      reseed();
    reset();
    return res;
  };
  return genUntil;
}
var validatorFns = {
  bigint: (val) => typeof val === "bigint",
  function: (val) => typeof val === "function",
  boolean: (val) => typeof val === "boolean",
  string: (val) => typeof val === "string",
  stringOrUint8Array: (val) => typeof val === "string" || isBytes3(val),
  isSafeInteger: (val) => Number.isSafeInteger(val),
  array: (val) => Array.isArray(val),
  field: (val, object) => object.Fp.isValid(val),
  hash: (val) => typeof val === "function" && Number.isSafeInteger(val.outputLen)
};
function validateObject(object, validators, optValidators = {}) {
  const checkField = (fieldName, type, isOptional) => {
    const checkVal = validatorFns[type];
    if (typeof checkVal !== "function")
      throw new Error(`Invalid validator "${type}", expected function`);
    const val = object[fieldName];
    if (isOptional && val === void 0)
      return;
    if (!checkVal(val, object)) {
      throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);
    }
  };
  for (const [fieldName, type] of Object.entries(validators))
    checkField(fieldName, type, false);
  for (const [fieldName, type] of Object.entries(optValidators))
    checkField(fieldName, type, true);
  return object;
}

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/modular.js
var _0n2 = BigInt(0);
var _1n2 = BigInt(1);
var _2n2 = BigInt(2);
var _3n = BigInt(3);
var _4n = BigInt(4);
var _5n = BigInt(5);
var _8n = BigInt(8);
var _9n = BigInt(9);
var _16n = BigInt(16);
function mod(a, b) {
  const result = a % b;
  return result >= _0n2 ? result : b + result;
}
function pow(num, power, modulo) {
  if (modulo <= _0n2 || power < _0n2)
    throw new Error("Expected power/modulo > 0");
  if (modulo === _1n2)
    return _0n2;
  let res = _1n2;
  while (power > _0n2) {
    if (power & _1n2)
      res = res * num % modulo;
    num = num * num % modulo;
    power >>= _1n2;
  }
  return res;
}
function pow2(x, power, modulo) {
  let res = x;
  while (power-- > _0n2) {
    res *= res;
    res %= modulo;
  }
  return res;
}
function invert(number4, modulo) {
  if (number4 === _0n2 || modulo <= _0n2) {
    throw new Error(`invert: expected positive integers, got n=${number4} mod=${modulo}`);
  }
  let a = mod(number4, modulo);
  let b = modulo;
  let x = _0n2, y = _1n2, u = _1n2, v = _0n2;
  while (a !== _0n2) {
    const q = b / a;
    const r2 = b % a;
    const m = x - u * q;
    const n2 = y - v * q;
    b = a, a = r2, x = u, y = v, u = m, v = n2;
  }
  const gcd2 = b;
  if (gcd2 !== _1n2)
    throw new Error("invert: does not exist");
  return mod(x, modulo);
}
function tonelliShanks(P2) {
  const legendreC = (P2 - _1n2) / _2n2;
  let Q, S, Z;
  for (Q = P2 - _1n2, S = 0; Q % _2n2 === _0n2; Q /= _2n2, S++)
    ;
  for (Z = _2n2; Z < P2 && pow(Z, legendreC, P2) !== P2 - _1n2; Z++)
    ;
  if (S === 1) {
    const p1div4 = (P2 + _1n2) / _4n;
    return function tonelliFast(Fp5, n2) {
      const root = Fp5.pow(n2, p1div4);
      if (!Fp5.eql(Fp5.sqr(root), n2))
        throw new Error("Cannot find square root");
      return root;
    };
  }
  const Q1div2 = (Q + _1n2) / _2n2;
  return function tonelliSlow(Fp5, n2) {
    if (Fp5.pow(n2, legendreC) === Fp5.neg(Fp5.ONE))
      throw new Error("Cannot find square root");
    let r2 = S;
    let g = Fp5.pow(Fp5.mul(Fp5.ONE, Z), Q);
    let x = Fp5.pow(n2, Q1div2);
    let b = Fp5.pow(n2, Q);
    while (!Fp5.eql(b, Fp5.ONE)) {
      if (Fp5.eql(b, Fp5.ZERO))
        return Fp5.ZERO;
      let m = 1;
      for (let t2 = Fp5.sqr(b); m < r2; m++) {
        if (Fp5.eql(t2, Fp5.ONE))
          break;
        t2 = Fp5.sqr(t2);
      }
      const ge = Fp5.pow(g, _1n2 << BigInt(r2 - m - 1));
      g = Fp5.sqr(ge);
      x = Fp5.mul(x, ge);
      b = Fp5.mul(b, g);
      r2 = m;
    }
    return x;
  };
}
function FpSqrt(P2) {
  if (P2 % _4n === _3n) {
    const p1div4 = (P2 + _1n2) / _4n;
    return function sqrt3mod4(Fp5, n2) {
      const root = Fp5.pow(n2, p1div4);
      if (!Fp5.eql(Fp5.sqr(root), n2))
        throw new Error("Cannot find square root");
      return root;
    };
  }
  if (P2 % _8n === _5n) {
    const c1 = (P2 - _5n) / _8n;
    return function sqrt5mod8(Fp5, n2) {
      const n22 = Fp5.mul(n2, _2n2);
      const v = Fp5.pow(n22, c1);
      const nv = Fp5.mul(n2, v);
      const i = Fp5.mul(Fp5.mul(nv, _2n2), v);
      const root = Fp5.mul(nv, Fp5.sub(i, Fp5.ONE));
      if (!Fp5.eql(Fp5.sqr(root), n2))
        throw new Error("Cannot find square root");
      return root;
    };
  }
  if (P2 % _16n === _9n) {
  }
  return tonelliShanks(P2);
}
var isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n2) === _1n2;
var FIELD_FIELDS = [
  "create",
  "isValid",
  "is0",
  "neg",
  "inv",
  "sqrt",
  "sqr",
  "eql",
  "add",
  "sub",
  "mul",
  "pow",
  "div",
  "addN",
  "subN",
  "mulN",
  "sqrN"
];
function validateField(field) {
  const initial = {
    ORDER: "bigint",
    MASK: "bigint",
    BYTES: "isSafeInteger",
    BITS: "isSafeInteger"
  };
  const opts = FIELD_FIELDS.reduce((map, val) => {
    map[val] = "function";
    return map;
  }, initial);
  return validateObject(field, opts);
}
function FpPow(f2, num, power) {
  if (power < _0n2)
    throw new Error("Expected power > 0");
  if (power === _0n2)
    return f2.ONE;
  if (power === _1n2)
    return num;
  let p = f2.ONE;
  let d = num;
  while (power > _0n2) {
    if (power & _1n2)
      p = f2.mul(p, d);
    d = f2.sqr(d);
    power >>= _1n2;
  }
  return p;
}
function FpInvertBatch(f2, nums) {
  const tmp = new Array(nums.length);
  const lastMultiplied = nums.reduce((acc, num, i) => {
    if (f2.is0(num))
      return acc;
    tmp[i] = acc;
    return f2.mul(acc, num);
  }, f2.ONE);
  const inverted = f2.inv(lastMultiplied);
  nums.reduceRight((acc, num, i) => {
    if (f2.is0(num))
      return acc;
    tmp[i] = f2.mul(acc, tmp[i]);
    return f2.mul(acc, num);
  }, inverted);
  return tmp;
}
function nLength(n2, nBitLength) {
  const _nBitLength = nBitLength !== void 0 ? nBitLength : n2.toString(2).length;
  const nByteLength = Math.ceil(_nBitLength / 8);
  return { nBitLength: _nBitLength, nByteLength };
}
function Field(ORDER, bitLen3, isLE4 = false, redef = {}) {
  if (ORDER <= _0n2)
    throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);
  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen3);
  if (BYTES > 2048)
    throw new Error("Field lengths over 2048 bytes are not supported");
  const sqrtP = FpSqrt(ORDER);
  const f2 = Object.freeze({
    ORDER,
    BITS,
    BYTES,
    MASK: bitMask(BITS),
    ZERO: _0n2,
    ONE: _1n2,
    create: (num) => mod(num, ORDER),
    isValid: (num) => {
      if (typeof num !== "bigint")
        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);
      return _0n2 <= num && num < ORDER;
    },
    is0: (num) => num === _0n2,
    isOdd: (num) => (num & _1n2) === _1n2,
    neg: (num) => mod(-num, ORDER),
    eql: (lhs, rhs) => lhs === rhs,
    sqr: (num) => mod(num * num, ORDER),
    add: (lhs, rhs) => mod(lhs + rhs, ORDER),
    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),
    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),
    pow: (num, power) => FpPow(f2, num, power),
    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),
    // Same as above, but doesn't normalize
    sqrN: (num) => num * num,
    addN: (lhs, rhs) => lhs + rhs,
    subN: (lhs, rhs) => lhs - rhs,
    mulN: (lhs, rhs) => lhs * rhs,
    inv: (num) => invert(num, ORDER),
    sqrt: redef.sqrt || ((n2) => sqrtP(f2, n2)),
    invertBatch: (lst) => FpInvertBatch(f2, lst),
    // TODO: do we really need constant cmov?
    // We don't have const-time bigints anyway, so probably will be not very useful
    cmov: (a, b, c) => c ? b : a,
    toBytes: (num) => isLE4 ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES),
    fromBytes: (bytes4) => {
      if (bytes4.length !== BYTES)
        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes4.length}`);
      return isLE4 ? bytesToNumberLE(bytes4) : bytesToNumberBE(bytes4);
    }
  });
  return Object.freeze(f2);
}
function FpSqrtEven(Fp5, elm) {
  if (!Fp5.isOdd)
    throw new Error(`Field doesn't have isOdd`);
  const root = Fp5.sqrt(elm);
  return Fp5.isOdd(root) ? Fp5.neg(root) : root;
}
function getFieldBytesLength(fieldOrder) {
  if (typeof fieldOrder !== "bigint")
    throw new Error("field order must be bigint");
  const bitLength = fieldOrder.toString(2).length;
  return Math.ceil(bitLength / 8);
}
function getMinHashLength(fieldOrder) {
  const length5 = getFieldBytesLength(fieldOrder);
  return length5 + Math.ceil(length5 / 2);
}
function mapHashToField(key, fieldOrder, isLE4 = false) {
  const len = key.length;
  const fieldLen = getFieldBytesLength(fieldOrder);
  const minLen = getMinHashLength(fieldOrder);
  if (len < 16 || len < minLen || len > 1024)
    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);
  const num = isLE4 ? bytesToNumberBE(key) : bytesToNumberLE(key);
  const reduced = mod(num, fieldOrder - _1n2) + _1n2;
  return isLE4 ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);
}

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/curve.js
var _0n3 = BigInt(0);
var _1n3 = BigInt(1);
function wNAF(c, bits) {
  const constTimeNegate = (condition, item) => {
    const neg = item.negate();
    return condition ? neg : item;
  };
  const opts = (W) => {
    const windows = Math.ceil(bits / W) + 1;
    const windowSize = 2 ** (W - 1);
    return { windows, windowSize };
  };
  return {
    constTimeNegate,
    // non-const time multiplication ladder
    unsafeLadder(elm, n2) {
      let p = c.ZERO;
      let d = elm;
      while (n2 > _0n3) {
        if (n2 & _1n3)
          p = p.add(d);
        d = d.double();
        n2 >>= _1n3;
      }
      return p;
    },
    /**
     * Creates a wNAF precomputation window. Used for caching.
     * Default window size is set by `utils.precompute()` and is equal to 8.
     * Number of precomputed points depends on the curve size:
     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
     * - 𝑊 is the window size
     * - 𝑛 is the bitlength of the curve order.
     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
     * @returns precomputed point tables flattened to a single array
     */
    precomputeWindow(elm, W) {
      const { windows, windowSize } = opts(W);
      const points = [];
      let p = elm;
      let base5 = p;
      for (let window2 = 0; window2 < windows; window2++) {
        base5 = p;
        points.push(base5);
        for (let i = 1; i < windowSize; i++) {
          base5 = base5.add(p);
          points.push(base5);
        }
        p = base5.double();
      }
      return points;
    },
    /**
     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
     * @param W window size
     * @param precomputes precomputed tables
     * @param n scalar (we don't check here, but should be less than curve order)
     * @returns real and fake (for const-time) points
     */
    wNAF(W, precomputes, n2) {
      const { windows, windowSize } = opts(W);
      let p = c.ZERO;
      let f2 = c.BASE;
      const mask2 = BigInt(2 ** W - 1);
      const maxNumber = 2 ** W;
      const shiftBy = BigInt(W);
      for (let window2 = 0; window2 < windows; window2++) {
        const offset = window2 * windowSize;
        let wbits = Number(n2 & mask2);
        n2 >>= shiftBy;
        if (wbits > windowSize) {
          wbits -= maxNumber;
          n2 += _1n3;
        }
        const offset1 = offset;
        const offset2 = offset + Math.abs(wbits) - 1;
        const cond1 = window2 % 2 !== 0;
        const cond2 = wbits < 0;
        if (wbits === 0) {
          f2 = f2.add(constTimeNegate(cond1, precomputes[offset1]));
        } else {
          p = p.add(constTimeNegate(cond2, precomputes[offset2]));
        }
      }
      return { p, f: f2 };
    },
    wNAFCached(P2, precomputesMap, n2, transform) {
      const W = P2._WINDOW_SIZE || 1;
      let comp = precomputesMap.get(P2);
      if (!comp) {
        comp = this.precomputeWindow(P2, W);
        if (W !== 1) {
          precomputesMap.set(P2, transform(comp));
        }
      }
      return this.wNAF(W, comp, n2);
    }
  };
}
function validateBasic(curve) {
  validateField(curve.Fp);
  validateObject(curve, {
    n: "bigint",
    h: "bigint",
    Gx: "field",
    Gy: "field"
  }, {
    nBitLength: "isSafeInteger",
    nByteLength: "isSafeInteger"
  });
  return Object.freeze({
    ...nLength(curve.n, curve.nBitLength),
    ...curve,
    ...{ p: curve.Fp.ORDER }
  });
}

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/edwards.js
var _0n4 = BigInt(0);
var _1n4 = BigInt(1);
var _2n3 = BigInt(2);
var _8n2 = BigInt(8);
var VERIFY_DEFAULT = { zip215: true };
function validateOpts(curve) {
  const opts = validateBasic(curve);
  validateObject(curve, {
    hash: "function",
    a: "bigint",
    d: "bigint",
    randomBytes: "function"
  }, {
    adjustScalarBytes: "function",
    domain: "function",
    uvRatio: "function",
    mapToCurve: "function"
  });
  return Object.freeze({ ...opts });
}
function twistedEdwards(curveDef) {
  const CURVE = validateOpts(curveDef);
  const { Fp: Fp5, n: CURVE_ORDER, prehash, hash: cHash, randomBytes: randomBytes4, nByteLength, h: cofactor } = CURVE;
  const MASK = _2n3 << BigInt(nByteLength * 8) - _1n4;
  const modP = Fp5.create;
  const uvRatio2 = CURVE.uvRatio || ((u, v) => {
    try {
      return { isValid: true, value: Fp5.sqrt(u * Fp5.inv(v)) };
    } catch (e2) {
      return { isValid: false, value: _0n4 };
    }
  });
  const adjustScalarBytes2 = CURVE.adjustScalarBytes || ((bytes4) => bytes4);
  const domain = CURVE.domain || ((data, ctx, phflag) => {
    if (ctx.length || phflag)
      throw new Error("Contexts/pre-hash are not supported");
    return data;
  });
  const inBig = (n2) => typeof n2 === "bigint" && _0n4 < n2;
  const inRange = (n2, max2) => inBig(n2) && inBig(max2) && n2 < max2;
  const in0MaskRange = (n2) => n2 === _0n4 || inRange(n2, MASK);
  function assertInRange(n2, max2) {
    if (inRange(n2, max2))
      return n2;
    throw new Error(`Expected valid scalar < ${max2}, got ${typeof n2} ${n2}`);
  }
  function assertGE0(n2) {
    return n2 === _0n4 ? n2 : assertInRange(n2, CURVE_ORDER);
  }
  const pointPrecomputes = /* @__PURE__ */ new Map();
  function isPoint(other) {
    if (!(other instanceof Point3))
      throw new Error("ExtendedPoint expected");
  }
  class Point3 {
    constructor(ex, ey, ez, et) {
      this.ex = ex;
      this.ey = ey;
      this.ez = ez;
      this.et = et;
      if (!in0MaskRange(ex))
        throw new Error("x required");
      if (!in0MaskRange(ey))
        throw new Error("y required");
      if (!in0MaskRange(ez))
        throw new Error("z required");
      if (!in0MaskRange(et))
        throw new Error("t required");
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(p) {
      if (p instanceof Point3)
        throw new Error("extended point not allowed");
      const { x, y } = p || {};
      if (!in0MaskRange(x) || !in0MaskRange(y))
        throw new Error("invalid affine point");
      return new Point3(x, y, _1n4, modP(x * y));
    }
    static normalizeZ(points) {
      const toInv = Fp5.invertBatch(points.map((p) => p.ez));
      return points.map((p, i) => p.toAffine(toInv[i])).map(Point3.fromAffine);
    }
    // "Private method", don't use it directly
    _setWindowSize(windowSize) {
      this._WINDOW_SIZE = windowSize;
      pointPrecomputes.delete(this);
    }
    // Not required for fromHex(), which always creates valid points.
    // Could be useful for fromAffine().
    assertValidity() {
      const { a, d } = CURVE;
      if (this.is0())
        throw new Error("bad point: ZERO");
      const { ex: X, ey: Y, ez: Z, et: T } = this;
      const X2 = modP(X * X);
      const Y2 = modP(Y * Y);
      const Z2 = modP(Z * Z);
      const Z4 = modP(Z2 * Z2);
      const aX2 = modP(X2 * a);
      const left = modP(Z2 * modP(aX2 + Y2));
      const right = modP(Z4 + modP(d * modP(X2 * Y2)));
      if (left !== right)
        throw new Error("bad point: equation left != right (1)");
      const XY = modP(X * Y);
      const ZT = modP(Z * T);
      if (XY !== ZT)
        throw new Error("bad point: equation left != right (2)");
    }
    // Compare one point to another.
    equals(other) {
      isPoint(other);
      const { ex: X1, ey: Y1, ez: Z1 } = this;
      const { ex: X2, ey: Y2, ez: Z2 } = other;
      const X1Z2 = modP(X1 * Z2);
      const X2Z1 = modP(X2 * Z1);
      const Y1Z2 = modP(Y1 * Z2);
      const Y2Z1 = modP(Y2 * Z1);
      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;
    }
    is0() {
      return this.equals(Point3.ZERO);
    }
    negate() {
      return new Point3(modP(-this.ex), this.ey, this.ez, modP(-this.et));
    }
    // Fast algo for doubling Extended Point.
    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd
    // Cost: 4M + 4S + 1*a + 6add + 1*2.
    double() {
      const { a } = CURVE;
      const { ex: X1, ey: Y1, ez: Z1 } = this;
      const A = modP(X1 * X1);
      const B = modP(Y1 * Y1);
      const C = modP(_2n3 * modP(Z1 * Z1));
      const D = modP(a * A);
      const x1y1 = X1 + Y1;
      const E = modP(modP(x1y1 * x1y1) - A - B);
      const G2 = D + B;
      const F = G2 - C;
      const H = D - B;
      const X3 = modP(E * F);
      const Y3 = modP(G2 * H);
      const T3 = modP(E * H);
      const Z3 = modP(F * G2);
      return new Point3(X3, Y3, Z3, T3);
    }
    // Fast algo for adding 2 Extended Points.
    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd
    // Cost: 9M + 1*a + 1*d + 7add.
    add(other) {
      isPoint(other);
      const { a, d } = CURVE;
      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;
      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;
      if (a === BigInt(-1)) {
        const A2 = modP((Y1 - X1) * (Y2 + X2));
        const B2 = modP((Y1 + X1) * (Y2 - X2));
        const F2 = modP(B2 - A2);
        if (F2 === _0n4)
          return this.double();
        const C2 = modP(Z1 * _2n3 * T2);
        const D2 = modP(T1 * _2n3 * Z2);
        const E2 = D2 + C2;
        const G3 = B2 + A2;
        const H2 = D2 - C2;
        const X32 = modP(E2 * F2);
        const Y32 = modP(G3 * H2);
        const T32 = modP(E2 * H2);
        const Z32 = modP(F2 * G3);
        return new Point3(X32, Y32, Z32, T32);
      }
      const A = modP(X1 * X2);
      const B = modP(Y1 * Y2);
      const C = modP(T1 * d * T2);
      const D = modP(Z1 * Z2);
      const E = modP((X1 + Y1) * (X2 + Y2) - A - B);
      const F = D - C;
      const G2 = D + C;
      const H = modP(B - a * A);
      const X3 = modP(E * F);
      const Y3 = modP(G2 * H);
      const T3 = modP(E * H);
      const Z3 = modP(F * G2);
      return new Point3(X3, Y3, Z3, T3);
    }
    subtract(other) {
      return this.add(other.negate());
    }
    wNAF(n2) {
      return wnaf.wNAFCached(this, pointPrecomputes, n2, Point3.normalizeZ);
    }
    // Constant-time multiplication.
    multiply(scalar) {
      const { p, f: f2 } = this.wNAF(assertInRange(scalar, CURVE_ORDER));
      return Point3.normalizeZ([p, f2])[0];
    }
    // Non-constant-time multiplication. Uses double-and-add algorithm.
    // It's faster, but should only be used when you don't care about
    // an exposed private key e.g. sig verification.
    // Does NOT allow scalars higher than CURVE.n.
    multiplyUnsafe(scalar) {
      let n2 = assertGE0(scalar);
      if (n2 === _0n4)
        return I;
      if (this.equals(I) || n2 === _1n4)
        return this;
      if (this.equals(G))
        return this.wNAF(n2).p;
      return wnaf.unsafeLadder(this, n2);
    }
    // Checks if point is of small order.
    // If you add something to small order point, you will have "dirty"
    // point with torsion component.
    // Multiplies point by cofactor and checks if the result is 0.
    isSmallOrder() {
      return this.multiplyUnsafe(cofactor).is0();
    }
    // Multiplies point by curve order and checks if the result is 0.
    // Returns `false` is the point is dirty.
    isTorsionFree() {
      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();
    }
    // Converts Extended point to default (x, y) coordinates.
    // Can accept precomputed Z^-1 - for example, from invertBatch.
    toAffine(iz) {
      const { ex: x, ey: y, ez: z2 } = this;
      const is0 = this.is0();
      if (iz == null)
        iz = is0 ? _8n2 : Fp5.inv(z2);
      const ax = modP(x * iz);
      const ay = modP(y * iz);
      const zz = modP(z2 * iz);
      if (is0)
        return { x: _0n4, y: _1n4 };
      if (zz !== _1n4)
        throw new Error("invZ was invalid");
      return { x: ax, y: ay };
    }
    clearCofactor() {
      const { h: cofactor2 } = CURVE;
      if (cofactor2 === _1n4)
        return this;
      return this.multiplyUnsafe(cofactor2);
    }
    // Converts hash string or Uint8Array to Point.
    // Uses algo from RFC8032 5.1.3.
    static fromHex(hex, zip215 = false) {
      const { d, a } = CURVE;
      const len = Fp5.BYTES;
      hex = ensureBytes("pointHex", hex, len);
      const normed = hex.slice();
      const lastByte = hex[len - 1];
      normed[len - 1] = lastByte & ~128;
      const y = bytesToNumberLE(normed);
      if (y === _0n4) {
      } else {
        if (zip215)
          assertInRange(y, MASK);
        else
          assertInRange(y, Fp5.ORDER);
      }
      const y2 = modP(y * y);
      const u = modP(y2 - _1n4);
      const v = modP(d * y2 - a);
      let { isValid: isValid2, value: x } = uvRatio2(u, v);
      if (!isValid2)
        throw new Error("Point.fromHex: invalid y coordinate");
      const isXOdd = (x & _1n4) === _1n4;
      const isLastByteOdd = (lastByte & 128) !== 0;
      if (!zip215 && x === _0n4 && isLastByteOdd)
        throw new Error("Point.fromHex: x=0 and x_0=1");
      if (isLastByteOdd !== isXOdd)
        x = modP(-x);
      return Point3.fromAffine({ x, y });
    }
    static fromPrivateKey(privKey) {
      return getExtendedPublicKey(privKey).point;
    }
    toRawBytes() {
      const { x, y } = this.toAffine();
      const bytes4 = numberToBytesLE(y, Fp5.BYTES);
      bytes4[bytes4.length - 1] |= x & _1n4 ? 128 : 0;
      return bytes4;
    }
    toHex() {
      return bytesToHex(this.toRawBytes());
    }
  }
  Point3.BASE = new Point3(CURVE.Gx, CURVE.Gy, _1n4, modP(CURVE.Gx * CURVE.Gy));
  Point3.ZERO = new Point3(_0n4, _1n4, _1n4, _0n4);
  const { BASE: G, ZERO: I } = Point3;
  const wnaf = wNAF(Point3, nByteLength * 8);
  function modN(a) {
    return mod(a, CURVE_ORDER);
  }
  function modN_LE(hash3) {
    return modN(bytesToNumberLE(hash3));
  }
  function getExtendedPublicKey(key) {
    const len = nByteLength;
    key = ensureBytes("private key", key, len);
    const hashed = ensureBytes("hashed private key", cHash(key), 2 * len);
    const head = adjustScalarBytes2(hashed.slice(0, len));
    const prefix = hashed.slice(len, 2 * len);
    const scalar = modN_LE(head);
    const point = G.multiply(scalar);
    const pointBytes = point.toRawBytes();
    return { head, prefix, scalar, point, pointBytes };
  }
  function getPublicKey(privKey) {
    return getExtendedPublicKey(privKey).pointBytes;
  }
  function hashDomainToScalar(context = new Uint8Array(), ...msgs) {
    const msg = concatBytes2(...msgs);
    return modN_LE(cHash(domain(msg, ensureBytes("context", context), !!prehash)));
  }
  function sign2(msg, privKey, options = {}) {
    msg = ensureBytes("message", msg);
    if (prehash)
      msg = prehash(msg);
    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);
    const r2 = hashDomainToScalar(options.context, prefix, msg);
    const R = G.multiply(r2).toRawBytes();
    const k = hashDomainToScalar(options.context, R, pointBytes, msg);
    const s = modN(r2 + k * scalar);
    assertGE0(s);
    const res = concatBytes2(R, numberToBytesLE(s, Fp5.BYTES));
    return ensureBytes("result", res, nByteLength * 2);
  }
  const verifyOpts = VERIFY_DEFAULT;
  function verify(sig, msg, publicKey, options = verifyOpts) {
    const { context, zip215 } = options;
    const len = Fp5.BYTES;
    sig = ensureBytes("signature", sig, 2 * len);
    msg = ensureBytes("message", msg);
    if (prehash)
      msg = prehash(msg);
    const s = bytesToNumberLE(sig.slice(len, 2 * len));
    let A, R, SB;
    try {
      A = Point3.fromHex(publicKey, zip215);
      R = Point3.fromHex(sig.slice(0, len), zip215);
      SB = G.multiplyUnsafe(s);
    } catch (error) {
      return false;
    }
    if (!zip215 && A.isSmallOrder())
      return false;
    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);
    const RkA = R.add(A.multiplyUnsafe(k));
    return RkA.subtract(SB).clearCofactor().equals(Point3.ZERO);
  }
  G._setWindowSize(8);
  const utils = {
    getExtendedPublicKey,
    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.
    randomPrivateKey: () => randomBytes4(Fp5.BYTES),
    /**
     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT
     * values. This slows down first getPublicKey() by milliseconds (see Speed section),
     * but allows to speed-up subsequent getPublicKey() calls up to 20x.
     * @param windowSize 2, 4, 8, 16
     */
    precompute(windowSize = 8, point = Point3.BASE) {
      point._setWindowSize(windowSize);
      point.multiply(BigInt(3));
      return point;
    }
  };
  return {
    CURVE,
    getPublicKey,
    sign: sign2,
    verify,
    ExtendedPoint: Point3,
    utils
  };
}

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/ed25519.js
var ED25519_P = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var ED25519_SQRT_M1 = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
var _0n5 = BigInt(0);
var _1n5 = BigInt(1);
var _2n4 = BigInt(2);
var _5n2 = BigInt(5);
var _10n = BigInt(10);
var _20n = BigInt(20);
var _40n = BigInt(40);
var _80n = BigInt(80);
function ed25519_pow_2_252_3(x) {
  const P2 = ED25519_P;
  const x2 = x * x % P2;
  const b2 = x2 * x % P2;
  const b4 = pow2(b2, _2n4, P2) * b2 % P2;
  const b5 = pow2(b4, _1n5, P2) * x % P2;
  const b10 = pow2(b5, _5n2, P2) * b5 % P2;
  const b20 = pow2(b10, _10n, P2) * b10 % P2;
  const b40 = pow2(b20, _20n, P2) * b20 % P2;
  const b80 = pow2(b40, _40n, P2) * b40 % P2;
  const b160 = pow2(b80, _80n, P2) * b80 % P2;
  const b240 = pow2(b160, _80n, P2) * b80 % P2;
  const b250 = pow2(b240, _10n, P2) * b10 % P2;
  const pow_p_5_8 = pow2(b250, _2n4, P2) * x % P2;
  return { pow_p_5_8, b2 };
}
function adjustScalarBytes(bytes4) {
  bytes4[0] &= 248;
  bytes4[31] &= 127;
  bytes4[31] |= 64;
  return bytes4;
}
function uvRatio(u, v) {
  const P2 = ED25519_P;
  const v3 = mod(v * v * v, P2);
  const v7 = mod(v3 * v3 * v, P2);
  const pow5 = ed25519_pow_2_252_3(u * v7).pow_p_5_8;
  let x = mod(u * v3 * pow5, P2);
  const vx2 = mod(v * x * x, P2);
  const root1 = x;
  const root2 = mod(x * ED25519_SQRT_M1, P2);
  const useRoot1 = vx2 === u;
  const useRoot2 = vx2 === mod(-u, P2);
  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P2);
  if (useRoot1)
    x = root1;
  if (useRoot2 || noRoot)
    x = root2;
  if (isNegativeLE(x, P2))
    x = mod(-x, P2);
  return { isValid: useRoot1 || useRoot2, value: x };
}
var Fp = Field(ED25519_P, void 0, true);
var ed25519Defaults = {
  // Param: a
  a: BigInt(-1),
  // Fp.create(-1) is proper; our way still works and is faster
  // d is equal to -121665/121666 over finite field.
  // Negative number is P - number, and division is invert(number, P)
  d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),
  // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n
  Fp,
  // Subgroup order: how many points curve has
  // 2n**252n + 27742317777372353535851937790883648493n;
  n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),
  // Cofactor
  h: BigInt(8),
  // Base point (x, y) aka generator point
  Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),
  Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),
  hash: sha5122,
  randomBytes,
  adjustScalarBytes,
  // dom2
  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.
  // Constant-time, u/√v
  uvRatio
};
var ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);
function ed25519_domain(data, ctx, phflag) {
  if (ctx.length > 255)
    throw new Error("Context is too big");
  return concatBytes(utf8ToBytes("SigEd25519 no Ed25519 collisions"), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);
}
var ed25519ctx = /* @__PURE__ */ twistedEdwards({
  ...ed25519Defaults,
  domain: ed25519_domain
});
var ed25519ph = /* @__PURE__ */ twistedEdwards({
  ...ed25519Defaults,
  domain: ed25519_domain,
  prehash: sha5122
});
var ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8);
var ELL2_C2 = Fp.pow(_2n4, ELL2_C1);
var ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE));
var ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8);
var ELL2_J = BigInt(486662);
var ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664)));
var SQRT_AD_MINUS_ONE = BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235");
var INVSQRT_A_MINUS_D = BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578");
var ONE_MINUS_D_SQ = BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838");
var D_MINUS_ONE_SQ = BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");
var MAX_255B = BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

// node_modules/.pnpm/did-jwt@7.4.7/node_modules/did-jwt/lib/index.module.js
var import_multibase = __toESM(require_src2(), 1);

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha256.js
var Chi = (a, b, c) => a & b ^ ~a & c;
var Maj = (a, b, c) => a & b ^ a & c ^ b & c;
var SHA256_K = /* @__PURE__ */ new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]);
var IV = /* @__PURE__ */ new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]);
var SHA256_W = /* @__PURE__ */ new Uint32Array(64);
var SHA256 = class extends SHA2 {
  constructor() {
    super(64, 32, 8, false);
    this.A = IV[0] | 0;
    this.B = IV[1] | 0;
    this.C = IV[2] | 0;
    this.D = IV[3] | 0;
    this.E = IV[4] | 0;
    this.F = IV[5] | 0;
    this.G = IV[6] | 0;
    this.H = IV[7] | 0;
  }
  get() {
    const { A, B, C, D, E, F, G, H } = this;
    return [A, B, C, D, E, F, G, H];
  }
  // prettier-ignore
  set(A, B, C, D, E, F, G, H) {
    this.A = A | 0;
    this.B = B | 0;
    this.C = C | 0;
    this.D = D | 0;
    this.E = E | 0;
    this.F = F | 0;
    this.G = G | 0;
    this.H = H | 0;
  }
  process(view, offset) {
    for (let i = 0; i < 16; i++, offset += 4)
      SHA256_W[i] = view.getUint32(offset, false);
    for (let i = 16; i < 64; i++) {
      const W15 = SHA256_W[i - 15];
      const W2 = SHA256_W[i - 2];
      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ W15 >>> 3;
      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ W2 >>> 10;
      SHA256_W[i] = s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16] | 0;
    }
    let { A, B, C, D, E, F, G, H } = this;
    for (let i = 0; i < 64; i++) {
      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);
      const T1 = H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i] | 0;
      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);
      const T2 = sigma0 + Maj(A, B, C) | 0;
      H = G;
      G = F;
      F = E;
      E = D + T1 | 0;
      D = C;
      C = B;
      B = A;
      A = T1 + T2 | 0;
    }
    A = A + this.A | 0;
    B = B + this.B | 0;
    C = C + this.C | 0;
    D = D + this.D | 0;
    E = E + this.E | 0;
    F = F + this.F | 0;
    G = G + this.G | 0;
    H = H + this.H | 0;
    this.set(A, B, C, D, E, F, G, H);
  }
  roundClean() {
    SHA256_W.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0);
    this.buffer.fill(0);
  }
};
var sha2562 = /* @__PURE__ */ wrapConstructor(() => new SHA256());

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/ripemd160.js
var Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);
var Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);
var Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);
var idxL = [Id];
var idxR = [Pi];
for (let i = 0; i < 4; i++)
  for (let j of [idxL, idxR])
    j.push(j[i].map((k) => Rho[k]));
var shifts = /* @__PURE__ */ [
  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
].map((i) => new Uint8Array(i));
var shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));
var shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));
var Kl = /* @__PURE__ */ new Uint32Array([
  0,
  1518500249,
  1859775393,
  2400959708,
  2840853838
]);
var Kr = /* @__PURE__ */ new Uint32Array([
  1352829926,
  1548603684,
  1836072691,
  2053994217,
  0
]);
var rotl = (word, shift) => word << shift | word >>> 32 - shift;
function f(group, x, y, z2) {
  if (group === 0)
    return x ^ y ^ z2;
  else if (group === 1)
    return x & y | ~x & z2;
  else if (group === 2)
    return (x | ~y) ^ z2;
  else if (group === 3)
    return x & z2 | y & ~z2;
  else
    return x ^ (y | ~z2);
}
var BUF = /* @__PURE__ */ new Uint32Array(16);
var RIPEMD160 = class extends SHA2 {
  constructor() {
    super(64, 20, 8, true);
    this.h0 = 1732584193 | 0;
    this.h1 = 4023233417 | 0;
    this.h2 = 2562383102 | 0;
    this.h3 = 271733878 | 0;
    this.h4 = 3285377520 | 0;
  }
  get() {
    const { h0, h1, h2, h3, h4 } = this;
    return [h0, h1, h2, h3, h4];
  }
  set(h0, h1, h2, h3, h4) {
    this.h0 = h0 | 0;
    this.h1 = h1 | 0;
    this.h2 = h2 | 0;
    this.h3 = h3 | 0;
    this.h4 = h4 | 0;
  }
  process(view, offset) {
    for (let i = 0; i < 16; i++, offset += 4)
      BUF[i] = view.getUint32(offset, true);
    let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;
    for (let group = 0; group < 5; group++) {
      const rGroup = 4 - group;
      const hbl = Kl[group], hbr = Kr[group];
      const rl = idxL[group], rr = idxR[group];
      const sl = shiftsL[group], sr = shiftsR[group];
      for (let i = 0; i < 16; i++) {
        const tl = rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el | 0;
        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl;
      }
      for (let i = 0; i < 16; i++) {
        const tr = rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er | 0;
        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr;
      }
    }
    this.set(this.h1 + cl + dr | 0, this.h2 + dl + er | 0, this.h3 + el + ar | 0, this.h4 + al + br | 0, this.h0 + bl + cr | 0);
  }
  roundClean() {
    BUF.fill(0);
  }
  destroy() {
    this.destroyed = true;
    this.buffer.fill(0);
    this.set(0, 0, 0, 0, 0);
  }
};
var ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha3.js
var [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];
var _0n6 = /* @__PURE__ */ BigInt(0);
var _1n6 = /* @__PURE__ */ BigInt(1);
var _2n5 = /* @__PURE__ */ BigInt(2);
var _7n = /* @__PURE__ */ BigInt(7);
var _256n = /* @__PURE__ */ BigInt(256);
var _0x71n = /* @__PURE__ */ BigInt(113);
for (let round2 = 0, R = _1n6, x = 1, y = 0; round2 < 24; round2++) {
  [x, y] = [y, (2 * x + 3 * y) % 5];
  SHA3_PI.push(2 * (5 * y + x));
  SHA3_ROTL.push((round2 + 1) * (round2 + 2) / 2 % 64);
  let t2 = _0n6;
  for (let j = 0; j < 7; j++) {
    R = (R << _1n6 ^ (R >> _7n) * _0x71n) % _256n;
    if (R & _2n5)
      t2 ^= _1n6 << (_1n6 << /* @__PURE__ */ BigInt(j)) - _1n6;
  }
  _SHA3_IOTA.push(t2);
}
var [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);
var rotlH = (h, l, s) => s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s);
var rotlL = (h, l, s) => s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s);
function keccakP(s, rounds = 24) {
  const B = new Uint32Array(5 * 2);
  for (let round2 = 24 - rounds; round2 < 24; round2++) {
    for (let x = 0; x < 10; x++)
      B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
    for (let x = 0; x < 10; x += 2) {
      const idx1 = (x + 8) % 10;
      const idx0 = (x + 2) % 10;
      const B0 = B[idx0];
      const B1 = B[idx0 + 1];
      const Th = rotlH(B0, B1, 1) ^ B[idx1];
      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
      for (let y = 0; y < 50; y += 10) {
        s[x + y] ^= Th;
        s[x + y + 1] ^= Tl;
      }
    }
    let curH = s[2];
    let curL = s[3];
    for (let t2 = 0; t2 < 24; t2++) {
      const shift = SHA3_ROTL[t2];
      const Th = rotlH(curH, curL, shift);
      const Tl = rotlL(curH, curL, shift);
      const PI2 = SHA3_PI[t2];
      curH = s[PI2];
      curL = s[PI2 + 1];
      s[PI2] = Th;
      s[PI2 + 1] = Tl;
    }
    for (let y = 0; y < 50; y += 10) {
      for (let x = 0; x < 10; x++)
        B[x] = s[y + x];
      for (let x = 0; x < 10; x++)
        s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
    }
    s[0] ^= SHA3_IOTA_H[round2];
    s[1] ^= SHA3_IOTA_L[round2];
  }
  B.fill(0);
}
var Keccak = class _Keccak extends Hash {
  // NOTE: we accept arguments in bytes instead of bits here.
  constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
    super();
    this.blockLen = blockLen;
    this.suffix = suffix;
    this.outputLen = outputLen;
    this.enableXOF = enableXOF;
    this.rounds = rounds;
    this.pos = 0;
    this.posOut = 0;
    this.finished = false;
    this.destroyed = false;
    number(outputLen);
    if (0 >= this.blockLen || this.blockLen >= 200)
      throw new Error("Sha3 supports only keccak-f1600 function");
    this.state = new Uint8Array(200);
    this.state32 = u32(this.state);
  }
  keccak() {
    keccakP(this.state32, this.rounds);
    this.posOut = 0;
    this.pos = 0;
  }
  update(data) {
    exists(this);
    const { blockLen, state } = this;
    data = toBytes(data);
    const len = data.length;
    for (let pos = 0; pos < len; ) {
      const take = Math.min(blockLen - this.pos, len - pos);
      for (let i = 0; i < take; i++)
        state[this.pos++] ^= data[pos++];
      if (this.pos === blockLen)
        this.keccak();
    }
    return this;
  }
  finish() {
    if (this.finished)
      return;
    this.finished = true;
    const { state, suffix, pos, blockLen } = this;
    state[pos] ^= suffix;
    if ((suffix & 128) !== 0 && pos === blockLen - 1)
      this.keccak();
    state[blockLen - 1] ^= 128;
    this.keccak();
  }
  writeInto(out) {
    exists(this, false);
    bytes(out);
    this.finish();
    const bufferOut = this.state;
    const { blockLen } = this;
    for (let pos = 0, len = out.length; pos < len; ) {
      if (this.posOut >= blockLen)
        this.keccak();
      const take = Math.min(blockLen - this.posOut, len - pos);
      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
      this.posOut += take;
      pos += take;
    }
    return out;
  }
  xofInto(out) {
    if (!this.enableXOF)
      throw new Error("XOF is not possible for this instance");
    return this.writeInto(out);
  }
  xof(bytes4) {
    number(bytes4);
    return this.xofInto(new Uint8Array(bytes4));
  }
  digestInto(out) {
    output(out, this);
    if (this.finished)
      throw new Error("digest() was already called");
    this.writeInto(out);
    this.destroy();
    return out;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
  destroy() {
    this.destroyed = true;
    this.state.fill(0);
  }
  _cloneInto(to) {
    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
    to || (to = new _Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
    to.state32.set(this.state32);
    to.pos = this.pos;
    to.posOut = this.posOut;
    to.finished = this.finished;
    to.rounds = rounds;
    to.suffix = suffix;
    to.outputLen = outputLen;
    to.enableXOF = enableXOF;
    to.destroyed = this.destroyed;
    return to;
  }
};
var gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));
var sha3_224 = /* @__PURE__ */ gen(6, 144, 224 / 8);
var sha3_256 = /* @__PURE__ */ gen(6, 136, 256 / 8);
var sha3_384 = /* @__PURE__ */ gen(6, 104, 384 / 8);
var sha3_512 = /* @__PURE__ */ gen(6, 72, 512 / 8);
var keccak_224 = /* @__PURE__ */ gen(1, 144, 224 / 8);
var keccak_256 = /* @__PURE__ */ gen(1, 136, 256 / 8);
var keccak_384 = /* @__PURE__ */ gen(1, 104, 384 / 8);
var keccak_512 = /* @__PURE__ */ gen(1, 72, 512 / 8);
var genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === void 0 ? outputLen : opts.dkLen, true));
var shake128 = /* @__PURE__ */ genShake(31, 168, 128 / 8);
var shake256 = /* @__PURE__ */ genShake(31, 136, 256 / 8);

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/abstract/weierstrass.js
function validatePointOpts(curve) {
  const opts = validateBasic(curve);
  validateObject(opts, {
    a: "field",
    b: "field"
  }, {
    allowedPrivateKeyLengths: "array",
    wrapPrivateKey: "boolean",
    isTorsionFree: "function",
    clearCofactor: "function",
    allowInfinityPoint: "boolean",
    fromBytes: "function",
    toBytes: "function"
  });
  const { endo, Fp: Fp5, a } = opts;
  if (endo) {
    if (!Fp5.eql(a, Fp5.ZERO)) {
      throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
    }
    if (typeof endo !== "object" || typeof endo.beta !== "bigint" || typeof endo.splitScalar !== "function") {
      throw new Error("Expected endomorphism with beta: bigint and splitScalar: function");
    }
  }
  return Object.freeze({ ...opts });
}
var { bytesToNumberBE: b2n, hexToBytes: h2b } = utils_exports;
var DER = {
  // asn.1 DER encoding utils
  Err: class DERErr extends Error {
    constructor(m = "") {
      super(m);
    }
  },
  _parseInt(data) {
    const { Err: E } = DER;
    if (data.length < 2 || data[0] !== 2)
      throw new E("Invalid signature integer tag");
    const len = data[1];
    const res = data.subarray(2, len + 2);
    if (!len || res.length !== len)
      throw new E("Invalid signature integer: wrong length");
    if (res[0] & 128)
      throw new E("Invalid signature integer: negative");
    if (res[0] === 0 && !(res[1] & 128))
      throw new E("Invalid signature integer: unnecessary leading zero");
    return { d: b2n(res), l: data.subarray(len + 2) };
  },
  toSig(hex) {
    const { Err: E } = DER;
    const data = typeof hex === "string" ? h2b(hex) : hex;
    if (!isBytes3(data))
      throw new Error("ui8a expected");
    let l = data.length;
    if (l < 2 || data[0] != 48)
      throw new E("Invalid signature tag");
    if (data[1] !== l - 2)
      throw new E("Invalid signature: incorrect length");
    const { d: r2, l: sBytes } = DER._parseInt(data.subarray(2));
    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);
    if (rBytesLeft.length)
      throw new E("Invalid signature: left bytes after parsing");
    return { r: r2, s };
  },
  hexFromSig(sig) {
    const slice = (s2) => Number.parseInt(s2[0], 16) & 8 ? "00" + s2 : s2;
    const h = (num) => {
      const hex = num.toString(16);
      return hex.length & 1 ? `0${hex}` : hex;
    };
    const s = slice(h(sig.s));
    const r2 = slice(h(sig.r));
    const shl = s.length / 2;
    const rhl = r2.length / 2;
    const sl = h(shl);
    const rl = h(rhl);
    return `30${h(rhl + shl + 4)}02${rl}${r2}02${sl}${s}`;
  }
};
var _0n7 = BigInt(0);
var _1n7 = BigInt(1);
var _2n6 = BigInt(2);
var _3n2 = BigInt(3);
var _4n2 = BigInt(4);
function weierstrassPoints(opts) {
  const CURVE = validatePointOpts(opts);
  const { Fp: Fp5 } = CURVE;
  const toBytes4 = CURVE.toBytes || ((_c, point, _isCompressed) => {
    const a = point.toAffine();
    return concatBytes2(Uint8Array.from([4]), Fp5.toBytes(a.x), Fp5.toBytes(a.y));
  });
  const fromBytes = CURVE.fromBytes || ((bytes4) => {
    const tail = bytes4.subarray(1);
    const x = Fp5.fromBytes(tail.subarray(0, Fp5.BYTES));
    const y = Fp5.fromBytes(tail.subarray(Fp5.BYTES, 2 * Fp5.BYTES));
    return { x, y };
  });
  function weierstrassEquation(x) {
    const { a, b } = CURVE;
    const x2 = Fp5.sqr(x);
    const x3 = Fp5.mul(x2, x);
    return Fp5.add(Fp5.add(x3, Fp5.mul(x, a)), b);
  }
  if (!Fp5.eql(Fp5.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))
    throw new Error("bad generator point: equation left != right");
  function isWithinCurveOrder(num) {
    return typeof num === "bigint" && _0n7 < num && num < CURVE.n;
  }
  function assertGE(num) {
    if (!isWithinCurveOrder(num))
      throw new Error("Expected valid bigint: 0 < bigint < curve.n");
  }
  function normPrivateKeyToScalar(key) {
    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: n2 } = CURVE;
    if (lengths && typeof key !== "bigint") {
      if (isBytes3(key))
        key = bytesToHex(key);
      if (typeof key !== "string" || !lengths.includes(key.length))
        throw new Error("Invalid key");
      key = key.padStart(nByteLength * 2, "0");
    }
    let num;
    try {
      num = typeof key === "bigint" ? key : bytesToNumberBE(ensureBytes("private key", key, nByteLength));
    } catch (error) {
      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);
    }
    if (wrapPrivateKey)
      num = mod(num, n2);
    assertGE(num);
    return num;
  }
  const pointPrecomputes = /* @__PURE__ */ new Map();
  function assertPrjPoint(other) {
    if (!(other instanceof Point3))
      throw new Error("ProjectivePoint expected");
  }
  class Point3 {
    constructor(px, py, pz) {
      this.px = px;
      this.py = py;
      this.pz = pz;
      if (px == null || !Fp5.isValid(px))
        throw new Error("x required");
      if (py == null || !Fp5.isValid(py))
        throw new Error("y required");
      if (pz == null || !Fp5.isValid(pz))
        throw new Error("z required");
    }
    // Does not validate if the point is on-curve.
    // Use fromHex instead, or call assertValidity() later.
    static fromAffine(p) {
      const { x, y } = p || {};
      if (!p || !Fp5.isValid(x) || !Fp5.isValid(y))
        throw new Error("invalid affine point");
      if (p instanceof Point3)
        throw new Error("projective point not allowed");
      const is0 = (i) => Fp5.eql(i, Fp5.ZERO);
      if (is0(x) && is0(y))
        return Point3.ZERO;
      return new Point3(x, y, Fp5.ONE);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    /**
     * Takes a bunch of Projective Points but executes only one
     * inversion on all of them. Inversion is very slow operation,
     * so this improves performance massively.
     * Optimization: converts a list of projective points to a list of identical points with Z=1.
     */
    static normalizeZ(points) {
      const toInv = Fp5.invertBatch(points.map((p) => p.pz));
      return points.map((p, i) => p.toAffine(toInv[i])).map(Point3.fromAffine);
    }
    /**
     * Converts hash string or Uint8Array to Point.
     * @param hex short/long ECDSA hex
     */
    static fromHex(hex) {
      const P2 = Point3.fromAffine(fromBytes(ensureBytes("pointHex", hex)));
      P2.assertValidity();
      return P2;
    }
    // Multiplies generator point by privateKey.
    static fromPrivateKey(privateKey) {
      return Point3.BASE.multiply(normPrivateKeyToScalar(privateKey));
    }
    // "Private method", don't use it directly
    _setWindowSize(windowSize) {
      this._WINDOW_SIZE = windowSize;
      pointPrecomputes.delete(this);
    }
    // A point on curve is valid if it conforms to equation.
    assertValidity() {
      if (this.is0()) {
        if (CURVE.allowInfinityPoint && !Fp5.is0(this.py))
          return;
        throw new Error("bad point: ZERO");
      }
      const { x, y } = this.toAffine();
      if (!Fp5.isValid(x) || !Fp5.isValid(y))
        throw new Error("bad point: x or y not FE");
      const left = Fp5.sqr(y);
      const right = weierstrassEquation(x);
      if (!Fp5.eql(left, right))
        throw new Error("bad point: equation left != right");
      if (!this.isTorsionFree())
        throw new Error("bad point: not in prime-order subgroup");
    }
    hasEvenY() {
      const { y } = this.toAffine();
      if (Fp5.isOdd)
        return !Fp5.isOdd(y);
      throw new Error("Field doesn't support isOdd");
    }
    /**
     * Compare one point to another.
     */
    equals(other) {
      assertPrjPoint(other);
      const { px: X1, py: Y1, pz: Z1 } = this;
      const { px: X2, py: Y2, pz: Z2 } = other;
      const U1 = Fp5.eql(Fp5.mul(X1, Z2), Fp5.mul(X2, Z1));
      const U2 = Fp5.eql(Fp5.mul(Y1, Z2), Fp5.mul(Y2, Z1));
      return U1 && U2;
    }
    /**
     * Flips point to one corresponding to (x, -y) in Affine coordinates.
     */
    negate() {
      return new Point3(this.px, Fp5.neg(this.py), this.pz);
    }
    // Renes-Costello-Batina exception-free doubling formula.
    // There is 30% faster Jacobian formula, but it is not complete.
    // https://eprint.iacr.org/2015/1060, algorithm 3
    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
    double() {
      const { a, b } = CURVE;
      const b3 = Fp5.mul(b, _3n2);
      const { px: X1, py: Y1, pz: Z1 } = this;
      let X3 = Fp5.ZERO, Y3 = Fp5.ZERO, Z3 = Fp5.ZERO;
      let t0 = Fp5.mul(X1, X1);
      let t1 = Fp5.mul(Y1, Y1);
      let t2 = Fp5.mul(Z1, Z1);
      let t3 = Fp5.mul(X1, Y1);
      t3 = Fp5.add(t3, t3);
      Z3 = Fp5.mul(X1, Z1);
      Z3 = Fp5.add(Z3, Z3);
      X3 = Fp5.mul(a, Z3);
      Y3 = Fp5.mul(b3, t2);
      Y3 = Fp5.add(X3, Y3);
      X3 = Fp5.sub(t1, Y3);
      Y3 = Fp5.add(t1, Y3);
      Y3 = Fp5.mul(X3, Y3);
      X3 = Fp5.mul(t3, X3);
      Z3 = Fp5.mul(b3, Z3);
      t2 = Fp5.mul(a, t2);
      t3 = Fp5.sub(t0, t2);
      t3 = Fp5.mul(a, t3);
      t3 = Fp5.add(t3, Z3);
      Z3 = Fp5.add(t0, t0);
      t0 = Fp5.add(Z3, t0);
      t0 = Fp5.add(t0, t2);
      t0 = Fp5.mul(t0, t3);
      Y3 = Fp5.add(Y3, t0);
      t2 = Fp5.mul(Y1, Z1);
      t2 = Fp5.add(t2, t2);
      t0 = Fp5.mul(t2, t3);
      X3 = Fp5.sub(X3, t0);
      Z3 = Fp5.mul(t2, t1);
      Z3 = Fp5.add(Z3, Z3);
      Z3 = Fp5.add(Z3, Z3);
      return new Point3(X3, Y3, Z3);
    }
    // Renes-Costello-Batina exception-free addition formula.
    // There is 30% faster Jacobian formula, but it is not complete.
    // https://eprint.iacr.org/2015/1060, algorithm 1
    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
    add(other) {
      assertPrjPoint(other);
      const { px: X1, py: Y1, pz: Z1 } = this;
      const { px: X2, py: Y2, pz: Z2 } = other;
      let X3 = Fp5.ZERO, Y3 = Fp5.ZERO, Z3 = Fp5.ZERO;
      const a = CURVE.a;
      const b3 = Fp5.mul(CURVE.b, _3n2);
      let t0 = Fp5.mul(X1, X2);
      let t1 = Fp5.mul(Y1, Y2);
      let t2 = Fp5.mul(Z1, Z2);
      let t3 = Fp5.add(X1, Y1);
      let t4 = Fp5.add(X2, Y2);
      t3 = Fp5.mul(t3, t4);
      t4 = Fp5.add(t0, t1);
      t3 = Fp5.sub(t3, t4);
      t4 = Fp5.add(X1, Z1);
      let t5 = Fp5.add(X2, Z2);
      t4 = Fp5.mul(t4, t5);
      t5 = Fp5.add(t0, t2);
      t4 = Fp5.sub(t4, t5);
      t5 = Fp5.add(Y1, Z1);
      X3 = Fp5.add(Y2, Z2);
      t5 = Fp5.mul(t5, X3);
      X3 = Fp5.add(t1, t2);
      t5 = Fp5.sub(t5, X3);
      Z3 = Fp5.mul(a, t4);
      X3 = Fp5.mul(b3, t2);
      Z3 = Fp5.add(X3, Z3);
      X3 = Fp5.sub(t1, Z3);
      Z3 = Fp5.add(t1, Z3);
      Y3 = Fp5.mul(X3, Z3);
      t1 = Fp5.add(t0, t0);
      t1 = Fp5.add(t1, t0);
      t2 = Fp5.mul(a, t2);
      t4 = Fp5.mul(b3, t4);
      t1 = Fp5.add(t1, t2);
      t2 = Fp5.sub(t0, t2);
      t2 = Fp5.mul(a, t2);
      t4 = Fp5.add(t4, t2);
      t0 = Fp5.mul(t1, t4);
      Y3 = Fp5.add(Y3, t0);
      t0 = Fp5.mul(t5, t4);
      X3 = Fp5.mul(t3, X3);
      X3 = Fp5.sub(X3, t0);
      t0 = Fp5.mul(t3, t1);
      Z3 = Fp5.mul(t5, Z3);
      Z3 = Fp5.add(Z3, t0);
      return new Point3(X3, Y3, Z3);
    }
    subtract(other) {
      return this.add(other.negate());
    }
    is0() {
      return this.equals(Point3.ZERO);
    }
    wNAF(n2) {
      return wnaf.wNAFCached(this, pointPrecomputes, n2, (comp) => {
        const toInv = Fp5.invertBatch(comp.map((p) => p.pz));
        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point3.fromAffine);
      });
    }
    /**
     * Non-constant-time multiplication. Uses double-and-add algorithm.
     * It's faster, but should only be used when you don't care about
     * an exposed private key e.g. sig verification, which works over *public* keys.
     */
    multiplyUnsafe(n2) {
      const I = Point3.ZERO;
      if (n2 === _0n7)
        return I;
      assertGE(n2);
      if (n2 === _1n7)
        return this;
      const { endo } = CURVE;
      if (!endo)
        return wnaf.unsafeLadder(this, n2);
      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n2);
      let k1p = I;
      let k2p = I;
      let d = this;
      while (k1 > _0n7 || k2 > _0n7) {
        if (k1 & _1n7)
          k1p = k1p.add(d);
        if (k2 & _1n7)
          k2p = k2p.add(d);
        d = d.double();
        k1 >>= _1n7;
        k2 >>= _1n7;
      }
      if (k1neg)
        k1p = k1p.negate();
      if (k2neg)
        k2p = k2p.negate();
      k2p = new Point3(Fp5.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
      return k1p.add(k2p);
    }
    /**
     * Constant time multiplication.
     * Uses wNAF method. Windowed method may be 10% faster,
     * but takes 2x longer to generate and consumes 2x memory.
     * Uses precomputes when available.
     * Uses endomorphism for Koblitz curves.
     * @param scalar by which the point would be multiplied
     * @returns New point
     */
    multiply(scalar) {
      assertGE(scalar);
      let n2 = scalar;
      let point, fake;
      const { endo } = CURVE;
      if (endo) {
        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n2);
        let { p: k1p, f: f1p } = this.wNAF(k1);
        let { p: k2p, f: f2p } = this.wNAF(k2);
        k1p = wnaf.constTimeNegate(k1neg, k1p);
        k2p = wnaf.constTimeNegate(k2neg, k2p);
        k2p = new Point3(Fp5.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
        point = k1p.add(k2p);
        fake = f1p.add(f2p);
      } else {
        const { p, f: f2 } = this.wNAF(n2);
        point = p;
        fake = f2;
      }
      return Point3.normalizeZ([point, fake])[0];
    }
    /**
     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
     * Not using Strauss-Shamir trick: precomputation tables are faster.
     * The trick could be useful if both P and Q are not G (not in our case).
     * @returns non-zero affine point
     */
    multiplyAndAddUnsafe(Q, a, b) {
      const G = Point3.BASE;
      const mul2 = (P2, a2) => a2 === _0n7 || a2 === _1n7 || !P2.equals(G) ? P2.multiplyUnsafe(a2) : P2.multiply(a2);
      const sum2 = mul2(this, a).add(mul2(Q, b));
      return sum2.is0() ? void 0 : sum2;
    }
    // Converts Projective point to affine (x, y) coordinates.
    // Can accept precomputed Z^-1 - for example, from invertBatch.
    // (x, y, z) ∋ (x=x/z, y=y/z)
    toAffine(iz) {
      const { px: x, py: y, pz: z2 } = this;
      const is0 = this.is0();
      if (iz == null)
        iz = is0 ? Fp5.ONE : Fp5.inv(z2);
      const ax = Fp5.mul(x, iz);
      const ay = Fp5.mul(y, iz);
      const zz = Fp5.mul(z2, iz);
      if (is0)
        return { x: Fp5.ZERO, y: Fp5.ZERO };
      if (!Fp5.eql(zz, Fp5.ONE))
        throw new Error("invZ was invalid");
      return { x: ax, y: ay };
    }
    isTorsionFree() {
      const { h: cofactor, isTorsionFree } = CURVE;
      if (cofactor === _1n7)
        return true;
      if (isTorsionFree)
        return isTorsionFree(Point3, this);
      throw new Error("isTorsionFree() has not been declared for the elliptic curve");
    }
    clearCofactor() {
      const { h: cofactor, clearCofactor } = CURVE;
      if (cofactor === _1n7)
        return this;
      if (clearCofactor)
        return clearCofactor(Point3, this);
      return this.multiplyUnsafe(CURVE.h);
    }
    toRawBytes(isCompressed = true) {
      this.assertValidity();
      return toBytes4(Point3, this, isCompressed);
    }
    toHex(isCompressed = true) {
      return bytesToHex(this.toRawBytes(isCompressed));
    }
  }
  Point3.BASE = new Point3(CURVE.Gx, CURVE.Gy, Fp5.ONE);
  Point3.ZERO = new Point3(Fp5.ZERO, Fp5.ONE, Fp5.ZERO);
  const _bits = CURVE.nBitLength;
  const wnaf = wNAF(Point3, CURVE.endo ? Math.ceil(_bits / 2) : _bits);
  return {
    CURVE,
    ProjectivePoint: Point3,
    normPrivateKeyToScalar,
    weierstrassEquation,
    isWithinCurveOrder
  };
}
function validateOpts2(curve) {
  const opts = validateBasic(curve);
  validateObject(opts, {
    hash: "hash",
    hmac: "function",
    randomBytes: "function"
  }, {
    bits2int: "function",
    bits2int_modN: "function",
    lowS: "boolean"
  });
  return Object.freeze({ lowS: true, ...opts });
}
function weierstrass(curveDef) {
  const CURVE = validateOpts2(curveDef);
  const { Fp: Fp5, n: CURVE_ORDER } = CURVE;
  const compressedLen = Fp5.BYTES + 1;
  const uncompressedLen = 2 * Fp5.BYTES + 1;
  function isValidFieldElement(num) {
    return _0n7 < num && num < Fp5.ORDER;
  }
  function modN(a) {
    return mod(a, CURVE_ORDER);
  }
  function invN(a) {
    return invert(a, CURVE_ORDER);
  }
  const { ProjectivePoint: Point3, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder } = weierstrassPoints({
    ...CURVE,
    toBytes(_c, point, isCompressed) {
      const a = point.toAffine();
      const x = Fp5.toBytes(a.x);
      const cat = concatBytes2;
      if (isCompressed) {
        return cat(Uint8Array.from([point.hasEvenY() ? 2 : 3]), x);
      } else {
        return cat(Uint8Array.from([4]), x, Fp5.toBytes(a.y));
      }
    },
    fromBytes(bytes4) {
      const len = bytes4.length;
      const head = bytes4[0];
      const tail = bytes4.subarray(1);
      if (len === compressedLen && (head === 2 || head === 3)) {
        const x = bytesToNumberBE(tail);
        if (!isValidFieldElement(x))
          throw new Error("Point is not on curve");
        const y2 = weierstrassEquation(x);
        let y = Fp5.sqrt(y2);
        const isYOdd = (y & _1n7) === _1n7;
        const isHeadOdd = (head & 1) === 1;
        if (isHeadOdd !== isYOdd)
          y = Fp5.neg(y);
        return { x, y };
      } else if (len === uncompressedLen && head === 4) {
        const x = Fp5.fromBytes(tail.subarray(0, Fp5.BYTES));
        const y = Fp5.fromBytes(tail.subarray(Fp5.BYTES, 2 * Fp5.BYTES));
        return { x, y };
      } else {
        throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);
      }
    }
  });
  const numToNByteStr = (num) => bytesToHex(numberToBytesBE(num, CURVE.nByteLength));
  function isBiggerThanHalfOrder(number4) {
    const HALF = CURVE_ORDER >> _1n7;
    return number4 > HALF;
  }
  function normalizeS(s) {
    return isBiggerThanHalfOrder(s) ? modN(-s) : s;
  }
  const slcNum = (b, from7, to) => bytesToNumberBE(b.slice(from7, to));
  class Signature2 {
    constructor(r2, s, recovery) {
      this.r = r2;
      this.s = s;
      this.recovery = recovery;
      this.assertValidity();
    }
    // pair (bytes of r, bytes of s)
    static fromCompact(hex) {
      const l = CURVE.nByteLength;
      hex = ensureBytes("compactSignature", hex, l * 2);
      return new Signature2(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));
    }
    // DER encoded ECDSA signature
    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
    static fromDER(hex) {
      const { r: r2, s } = DER.toSig(ensureBytes("DER", hex));
      return new Signature2(r2, s);
    }
    assertValidity() {
      if (!isWithinCurveOrder(this.r))
        throw new Error("r must be 0 < r < CURVE.n");
      if (!isWithinCurveOrder(this.s))
        throw new Error("s must be 0 < s < CURVE.n");
    }
    addRecoveryBit(recovery) {
      return new Signature2(this.r, this.s, recovery);
    }
    recoverPublicKey(msgHash) {
      const { r: r2, s, recovery: rec } = this;
      const h = bits2int_modN(ensureBytes("msgHash", msgHash));
      if (rec == null || ![0, 1, 2, 3].includes(rec))
        throw new Error("recovery id invalid");
      const radj = rec === 2 || rec === 3 ? r2 + CURVE.n : r2;
      if (radj >= Fp5.ORDER)
        throw new Error("recovery id 2 or 3 invalid");
      const prefix = (rec & 1) === 0 ? "02" : "03";
      const R = Point3.fromHex(prefix + numToNByteStr(radj));
      const ir = invN(radj);
      const u1 = modN(-h * ir);
      const u2 = modN(s * ir);
      const Q = Point3.BASE.multiplyAndAddUnsafe(R, u1, u2);
      if (!Q)
        throw new Error("point at infinify");
      Q.assertValidity();
      return Q;
    }
    // Signatures should be low-s, to prevent malleability.
    hasHighS() {
      return isBiggerThanHalfOrder(this.s);
    }
    normalizeS() {
      return this.hasHighS() ? new Signature2(this.r, modN(-this.s), this.recovery) : this;
    }
    // DER-encoded
    toDERRawBytes() {
      return hexToBytes(this.toDERHex());
    }
    toDERHex() {
      return DER.hexFromSig({ r: this.r, s: this.s });
    }
    // padded bytes of r, then padded bytes of s
    toCompactRawBytes() {
      return hexToBytes(this.toCompactHex());
    }
    toCompactHex() {
      return numToNByteStr(this.r) + numToNByteStr(this.s);
    }
  }
  const utils = {
    isValidPrivateKey(privateKey) {
      try {
        normPrivateKeyToScalar(privateKey);
        return true;
      } catch (error) {
        return false;
      }
    },
    normPrivateKeyToScalar,
    /**
     * Produces cryptographically secure private key from random of size
     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
     */
    randomPrivateKey: () => {
      const length5 = getMinHashLength(CURVE.n);
      return mapHashToField(CURVE.randomBytes(length5), CURVE.n);
    },
    /**
     * Creates precompute table for an arbitrary EC point. Makes point "cached".
     * Allows to massively speed-up `point.multiply(scalar)`.
     * @returns cached point
     * @example
     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
     * fast.multiply(privKey); // much faster ECDH now
     */
    precompute(windowSize = 8, point = Point3.BASE) {
      point._setWindowSize(windowSize);
      point.multiply(BigInt(3));
      return point;
    }
  };
  function getPublicKey(privateKey, isCompressed = true) {
    return Point3.fromPrivateKey(privateKey).toRawBytes(isCompressed);
  }
  function isProbPub(item) {
    const arr = isBytes3(item);
    const str = typeof item === "string";
    const len = (arr || str) && item.length;
    if (arr)
      return len === compressedLen || len === uncompressedLen;
    if (str)
      return len === 2 * compressedLen || len === 2 * uncompressedLen;
    if (item instanceof Point3)
      return true;
    return false;
  }
  function getSharedSecret(privateA, publicB, isCompressed = true) {
    if (isProbPub(privateA))
      throw new Error("first arg must be private key");
    if (!isProbPub(publicB))
      throw new Error("second arg must be public key");
    const b = Point3.fromHex(publicB);
    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);
  }
  const bits2int = CURVE.bits2int || function(bytes4) {
    const num = bytesToNumberBE(bytes4);
    const delta = bytes4.length * 8 - CURVE.nBitLength;
    return delta > 0 ? num >> BigInt(delta) : num;
  };
  const bits2int_modN = CURVE.bits2int_modN || function(bytes4) {
    return modN(bits2int(bytes4));
  };
  const ORDER_MASK = bitMask(CURVE.nBitLength);
  function int2octets(num) {
    if (typeof num !== "bigint")
      throw new Error("bigint expected");
    if (!(_0n7 <= num && num < ORDER_MASK))
      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);
    return numberToBytesBE(num, CURVE.nByteLength);
  }
  function prepSig(msgHash, privateKey, opts = defaultSigOpts) {
    if (["recovered", "canonical"].some((k) => k in opts))
      throw new Error("sign() legacy options not supported");
    const { hash: hash3, randomBytes: randomBytes4 } = CURVE;
    let { lowS, prehash, extraEntropy: ent } = opts;
    if (lowS == null)
      lowS = true;
    msgHash = ensureBytes("msgHash", msgHash);
    if (prehash)
      msgHash = ensureBytes("prehashed msgHash", hash3(msgHash));
    const h1int = bits2int_modN(msgHash);
    const d = normPrivateKeyToScalar(privateKey);
    const seedArgs = [int2octets(d), int2octets(h1int)];
    if (ent != null) {
      const e2 = ent === true ? randomBytes4(Fp5.BYTES) : ent;
      seedArgs.push(ensureBytes("extraEntropy", e2));
    }
    const seed = concatBytes2(...seedArgs);
    const m = h1int;
    function k2sig(kBytes) {
      const k = bits2int(kBytes);
      if (!isWithinCurveOrder(k))
        return;
      const ik = invN(k);
      const q = Point3.BASE.multiply(k).toAffine();
      const r2 = modN(q.x);
      if (r2 === _0n7)
        return;
      const s = modN(ik * modN(m + r2 * d));
      if (s === _0n7)
        return;
      let recovery = (q.x === r2 ? 0 : 2) | Number(q.y & _1n7);
      let normS = s;
      if (lowS && isBiggerThanHalfOrder(s)) {
        normS = normalizeS(s);
        recovery ^= 1;
      }
      return new Signature2(r2, normS, recovery);
    }
    return { seed, k2sig };
  }
  const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };
  const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };
  function sign2(msgHash, privKey, opts = defaultSigOpts) {
    const { seed, k2sig } = prepSig(msgHash, privKey, opts);
    const C = CURVE;
    const drbg = createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);
    return drbg(seed, k2sig);
  }
  Point3.BASE._setWindowSize(8);
  function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {
    const sg = signature;
    msgHash = ensureBytes("msgHash", msgHash);
    publicKey = ensureBytes("publicKey", publicKey);
    if ("strict" in opts)
      throw new Error("options.strict was renamed to lowS");
    const { lowS, prehash } = opts;
    let _sig = void 0;
    let P2;
    try {
      if (typeof sg === "string" || isBytes3(sg)) {
        try {
          _sig = Signature2.fromDER(sg);
        } catch (derError) {
          if (!(derError instanceof DER.Err))
            throw derError;
          _sig = Signature2.fromCompact(sg);
        }
      } else if (typeof sg === "object" && typeof sg.r === "bigint" && typeof sg.s === "bigint") {
        const { r: r3, s: s2 } = sg;
        _sig = new Signature2(r3, s2);
      } else {
        throw new Error("PARSE");
      }
      P2 = Point3.fromHex(publicKey);
    } catch (error) {
      if (error.message === "PARSE")
        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);
      return false;
    }
    if (lowS && _sig.hasHighS())
      return false;
    if (prehash)
      msgHash = CURVE.hash(msgHash);
    const { r: r2, s } = _sig;
    const h = bits2int_modN(msgHash);
    const is = invN(s);
    const u1 = modN(h * is);
    const u2 = modN(r2 * is);
    const R = Point3.BASE.multiplyAndAddUnsafe(P2, u1, u2)?.toAffine();
    if (!R)
      return false;
    const v = modN(R.x);
    return v === r2;
  }
  return {
    CURVE,
    getPublicKey,
    getSharedSecret,
    sign: sign2,
    verify,
    ProjectivePoint: Point3,
    Signature: Signature2,
    utils
  };
}

// node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/hmac.js
var HMAC = class extends Hash {
  constructor(hash3, _key) {
    super();
    this.finished = false;
    this.destroyed = false;
    hash(hash3);
    const key = toBytes(_key);
    this.iHash = hash3.create();
    if (typeof this.iHash.update !== "function")
      throw new Error("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen;
    this.outputLen = this.iHash.outputLen;
    const blockLen = this.blockLen;
    const pad = new Uint8Array(blockLen);
    pad.set(key.length > blockLen ? hash3.create().update(key).digest() : key);
    for (let i = 0; i < pad.length; i++)
      pad[i] ^= 54;
    this.iHash.update(pad);
    this.oHash = hash3.create();
    for (let i = 0; i < pad.length; i++)
      pad[i] ^= 54 ^ 92;
    this.oHash.update(pad);
    pad.fill(0);
  }
  update(buf) {
    exists(this);
    this.iHash.update(buf);
    return this;
  }
  digestInto(out) {
    exists(this);
    bytes(out, this.outputLen);
    this.finished = true;
    this.iHash.digestInto(out);
    this.oHash.update(out);
    this.oHash.digestInto(out);
    this.destroy();
  }
  digest() {
    const out = new Uint8Array(this.oHash.outputLen);
    this.digestInto(out);
    return out;
  }
  _cloneInto(to) {
    to || (to = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
    to = to;
    to.finished = finished;
    to.destroyed = destroyed;
    to.blockLen = blockLen;
    to.outputLen = outputLen;
    to.oHash = oHash._cloneInto(to.oHash);
    to.iHash = iHash._cloneInto(to.iHash);
    return to;
  }
  destroy() {
    this.destroyed = true;
    this.oHash.destroy();
    this.iHash.destroy();
  }
};
var hmac = (hash3, key, message2) => new HMAC(hash3, key).update(message2).digest();
hmac.create = (hash3, key) => new HMAC(hash3, key);

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/_shortw_utils.js
function getHash(hash3) {
  return {
    hash: hash3,
    hmac: (key, ...msgs) => hmac(hash3, key, concatBytes(...msgs)),
    randomBytes
  };
}
function createCurve(curveDef, defHash) {
  const create4 = (hash3) => weierstrass({ ...curveDef, ...getHash(hash3) });
  return Object.freeze({ ...create4(defHash), create: create4 });
}

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/secp256k1.js
var secp256k1P = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f");
var secp256k1N = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
var _1n8 = BigInt(1);
var _2n7 = BigInt(2);
var divNearest = (a, b) => (a + b / _2n7) / b;
function sqrtMod(y) {
  const P2 = secp256k1P;
  const _3n5 = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);
  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);
  const b2 = y * y * y % P2;
  const b3 = b2 * b2 * y % P2;
  const b6 = pow2(b3, _3n5, P2) * b3 % P2;
  const b9 = pow2(b6, _3n5, P2) * b3 % P2;
  const b11 = pow2(b9, _2n7, P2) * b2 % P2;
  const b22 = pow2(b11, _11n, P2) * b11 % P2;
  const b44 = pow2(b22, _22n, P2) * b22 % P2;
  const b88 = pow2(b44, _44n, P2) * b44 % P2;
  const b176 = pow2(b88, _88n, P2) * b88 % P2;
  const b220 = pow2(b176, _44n, P2) * b44 % P2;
  const b223 = pow2(b220, _3n5, P2) * b3 % P2;
  const t1 = pow2(b223, _23n, P2) * b22 % P2;
  const t2 = pow2(t1, _6n, P2) * b2 % P2;
  const root = pow2(t2, _2n7, P2);
  if (!Fp2.eql(Fp2.sqr(root), y))
    throw new Error("Cannot find square root");
  return root;
}
var Fp2 = Field(secp256k1P, void 0, void 0, { sqrt: sqrtMod });
var secp256k1 = createCurve({
  a: BigInt(0),
  // equation params: a, b
  b: BigInt(7),
  // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975
  Fp: Fp2,
  // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n
  n: secp256k1N,
  // Curve order, total count of valid points in the field
  // Base point (x, y) aka generator point
  Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
  Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
  h: BigInt(1),
  // Cofactor
  lowS: true,
  // Allow only low-S signatures by default in sign() and verify()
  /**
   * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.
   * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.
   * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.
   * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066
   */
  endo: {
    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
    splitScalar: (k) => {
      const n2 = secp256k1N;
      const a1 = BigInt("0x3086d221a7d46bcde86c90e49284eb15");
      const b1 = -_1n8 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3");
      const a2 = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8");
      const b2 = a1;
      const POW_2_128 = BigInt("0x100000000000000000000000000000000");
      const c1 = divNearest(b2 * k, n2);
      const c2 = divNearest(-b1 * k, n2);
      let k1 = mod(k - c1 * a1 - c2 * a2, n2);
      let k2 = mod(-c1 * b1 - c2 * b2, n2);
      const k1neg = k1 > POW_2_128;
      const k2neg = k2 > POW_2_128;
      if (k1neg)
        k1 = n2 - k1;
      if (k2neg)
        k2 = n2 - k2;
      if (k1 > POW_2_128 || k2 > POW_2_128) {
        throw new Error("splitScalar: Endomorphism failed, k=" + k);
      }
      return { k1neg, k1, k2neg, k2 };
    }
  }
}, sha2562);
var _0n8 = BigInt(0);
var Point = secp256k1.ProjectivePoint;

// node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/esm/p256.js
var Fp3 = Field(BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff"));
var CURVE_A = Fp3.create(BigInt("-3"));
var CURVE_B = BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b");
var p256 = createCurve({
  a: CURVE_A,
  // Equation params: a, b
  b: CURVE_B,
  Fp: Fp3,
  // Field: 2n**224n * (2n**32n-1n) + 2n**192n + 2n**96n-1n
  // Curve order, total count of valid points in the field
  n: BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"),
  // Base (generator) point (x, y)
  Gx: BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"),
  Gy: BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"),
  h: BigInt(1),
  lowS: false
}, sha2562);

// node_modules/.pnpm/did-jwt@7.4.7/node_modules/did-jwt/lib/index.module.js
var import_canonicalize = __toESM(require_canonicalize(), 1);

// node_modules/.pnpm/@scure+base@1.1.5/node_modules/@scure/base/lib/esm/index.js
// @__NO_SIDE_EFFECTS__
function assertNumber(n2) {
  if (!Number.isSafeInteger(n2))
    throw new Error(`Wrong integer: ${n2}`);
}
function isBytes4(a) {
  return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
}
// @__NO_SIDE_EFFECTS__
function chain(...args) {
  const id = (a) => a;
  const wrap2 = (a, b) => (c) => a(b(c));
  const encode15 = args.map((x) => x.encode).reduceRight(wrap2, id);
  const decode17 = args.map((x) => x.decode).reduce(wrap2, id);
  return { encode: encode15, decode: decode17 };
}
// @__NO_SIDE_EFFECTS__
function alphabet2(alphabet5) {
  return {
    encode: (digits) => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== "number")
        throw new Error("alphabet.encode input should be an array of numbers");
      return digits.map((i) => {
        /* @__PURE__ */ assertNumber(i);
        if (i < 0 || i >= alphabet5.length)
          throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet5.length})`);
        return alphabet5[i];
      });
    },
    decode: (input) => {
      if (!Array.isArray(input) || input.length && typeof input[0] !== "string")
        throw new Error("alphabet.decode input should be array of strings");
      return input.map((letter) => {
        if (typeof letter !== "string")
          throw new Error(`alphabet.decode: not string element=${letter}`);
        const index = alphabet5.indexOf(letter);
        if (index === -1)
          throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet5}`);
        return index;
      });
    }
  };
}
// @__NO_SIDE_EFFECTS__
function join(separator = "") {
  if (typeof separator !== "string")
    throw new Error("join separator should be string");
  return {
    encode: (from7) => {
      if (!Array.isArray(from7) || from7.length && typeof from7[0] !== "string")
        throw new Error("join.encode input should be array of strings");
      for (let i of from7)
        if (typeof i !== "string")
          throw new Error(`join.encode: non-string input=${i}`);
      return from7.join(separator);
    },
    decode: (to) => {
      if (typeof to !== "string")
        throw new Error("join.decode input should be string");
      return to.split(separator);
    }
  };
}
var gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => !b ? a : /* @__PURE__ */ gcd(b, a % b);
var radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from7, to) => from7 + (to - /* @__PURE__ */ gcd(from7, to));
// @__NO_SIDE_EFFECTS__
function convertRadix2(data, from7, to, padding) {
  if (!Array.isArray(data))
    throw new Error("convertRadix2: data should be array");
  if (from7 <= 0 || from7 > 32)
    throw new Error(`convertRadix2: wrong from=${from7}`);
  if (to <= 0 || to > 32)
    throw new Error(`convertRadix2: wrong to=${to}`);
  if (/* @__PURE__ */ radix2carry(from7, to) > 32) {
    throw new Error(`convertRadix2: carry overflow from=${from7} to=${to} carryBits=${/* @__PURE__ */ radix2carry(from7, to)}`);
  }
  let carry = 0;
  let pos = 0;
  const mask2 = 2 ** to - 1;
  const res = [];
  for (const n2 of data) {
    /* @__PURE__ */ assertNumber(n2);
    if (n2 >= 2 ** from7)
      throw new Error(`convertRadix2: invalid data word=${n2} from=${from7}`);
    carry = carry << from7 | n2;
    if (pos + from7 > 32)
      throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from7}`);
    pos += from7;
    for (; pos >= to; pos -= to)
      res.push((carry >> pos - to & mask2) >>> 0);
    carry &= 2 ** pos - 1;
  }
  carry = carry << to - pos & mask2;
  if (!padding && pos >= from7)
    throw new Error("Excess padding");
  if (!padding && carry)
    throw new Error(`Non-zero padding: ${carry}`);
  if (padding && pos > 0)
    res.push(carry >>> 0);
  return res;
}
// @__NO_SIDE_EFFECTS__
function radix2(bits, revPadding = false) {
  /* @__PURE__ */ assertNumber(bits);
  if (bits <= 0 || bits > 32)
    throw new Error("radix2: bits should be in (0..32]");
  if (/* @__PURE__ */ radix2carry(8, bits) > 32 || /* @__PURE__ */ radix2carry(bits, 8) > 32)
    throw new Error("radix2: carry overflow");
  return {
    encode: (bytes4) => {
      if (!isBytes4(bytes4))
        throw new Error("radix2.encode input should be Uint8Array");
      return /* @__PURE__ */ convertRadix2(Array.from(bytes4), 8, bits, !revPadding);
    },
    decode: (digits) => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== "number")
        throw new Error("radix2.decode input should be array of numbers");
      return Uint8Array.from(/* @__PURE__ */ convertRadix2(digits, bits, 8, revPadding));
    }
  };
}
// @__NO_SIDE_EFFECTS__
function unsafeWrapper(fn) {
  if (typeof fn !== "function")
    throw new Error("unsafeWrapper fn should be function");
  return function(...args) {
    try {
      return fn.apply(null, args);
    } catch (e2) {
    }
  };
}
var BECH_ALPHABET = /* @__PURE__ */ chain(/* @__PURE__ */ alphabet2("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), /* @__PURE__ */ join(""));
var POLYMOD_GENERATORS = [996825010, 642813549, 513874426, 1027748829, 705979059];
// @__NO_SIDE_EFFECTS__
function bech32Polymod(pre) {
  const b = pre >> 25;
  let chk = (pre & 33554431) << 5;
  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
    if ((b >> i & 1) === 1)
      chk ^= POLYMOD_GENERATORS[i];
  }
  return chk;
}
// @__NO_SIDE_EFFECTS__
function bechChecksum(prefix, words, encodingConst = 1) {
  const len = prefix.length;
  let chk = 1;
  for (let i = 0; i < len; i++) {
    const c = prefix.charCodeAt(i);
    if (c < 33 || c > 126)
      throw new Error(`Invalid prefix (${prefix})`);
    chk = /* @__PURE__ */ bech32Polymod(chk) ^ c >> 5;
  }
  chk = /* @__PURE__ */ bech32Polymod(chk);
  for (let i = 0; i < len; i++)
    chk = /* @__PURE__ */ bech32Polymod(chk) ^ prefix.charCodeAt(i) & 31;
  for (let v of words)
    chk = /* @__PURE__ */ bech32Polymod(chk) ^ v;
  for (let i = 0; i < 6; i++)
    chk = /* @__PURE__ */ bech32Polymod(chk);
  chk ^= encodingConst;
  return BECH_ALPHABET.encode(/* @__PURE__ */ convertRadix2([chk % 2 ** 30], 30, 5, false));
}
// @__NO_SIDE_EFFECTS__
function genBech32(encoding) {
  const ENCODING_CONST = encoding === "bech32" ? 1 : 734539939;
  const _words = /* @__PURE__ */ radix2(5);
  const fromWords = _words.decode;
  const toWords = _words.encode;
  const fromWordsUnsafe = /* @__PURE__ */ unsafeWrapper(fromWords);
  function encode15(prefix, words, limit = 90) {
    if (typeof prefix !== "string")
      throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);
    if (!Array.isArray(words) || words.length && typeof words[0] !== "number")
      throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);
    const actualLength = prefix.length + 7 + words.length;
    if (limit !== false && actualLength > limit)
      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
    const lowered = prefix.toLowerCase();
    const sum2 = /* @__PURE__ */ bechChecksum(lowered, words, ENCODING_CONST);
    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum2}`;
  }
  function decode17(str, limit = 90) {
    if (typeof str !== "string")
      throw new Error(`bech32.decode input should be string, not ${typeof str}`);
    if (str.length < 8 || limit !== false && str.length > limit)
      throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
    const lowered = str.toLowerCase();
    if (str !== lowered && str !== str.toUpperCase())
      throw new Error(`String must be lowercase or uppercase`);
    str = lowered;
    const sepIndex = str.lastIndexOf("1");
    if (sepIndex === 0 || sepIndex === -1)
      throw new Error(`Letter "1" must be present between prefix and data only`);
    const prefix = str.slice(0, sepIndex);
    const _words2 = str.slice(sepIndex + 1);
    if (_words2.length < 6)
      throw new Error("Data must be at least 6 characters long");
    const words = BECH_ALPHABET.decode(_words2).slice(0, -6);
    const sum2 = /* @__PURE__ */ bechChecksum(prefix, words, ENCODING_CONST);
    if (!_words2.endsWith(sum2))
      throw new Error(`Invalid checksum in ${str}: expected "${sum2}"`);
    return { prefix, words };
  }
  const decodeUnsafe = /* @__PURE__ */ unsafeWrapper(decode17);
  function decodeToBytes(str) {
    const { prefix, words } = decode17(str, false);
    return { prefix, words, bytes: fromWords(words) };
  }
  return { encode: encode15, decode: decode17, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };
}
var bech32 = /* @__PURE__ */ genBech32("bech32");

// node_modules/.pnpm/@noble+ciphers@0.4.1/node_modules/@noble/ciphers/esm/utils.js
var u322 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
function isBytes5(a) {
  return a instanceof Uint8Array || a != null && typeof a === "object" && a.constructor.name === "Uint8Array";
}
var createView2 = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
var isLE2 = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!isLE2)
  throw new Error("Non little-endian hardware is not supported");
function utf8ToBytes3(str) {
  if (typeof str !== "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
  return new Uint8Array(new TextEncoder().encode(str));
}
function toBytes2(data) {
  if (typeof data === "string")
    data = utf8ToBytes3(data);
  else if (isBytes5(data))
    data = data.slice();
  else
    throw new Error(`expected Uint8Array, got ${typeof data}`);
  return data;
}
var isPlainObject = (obj) => Object.prototype.toString.call(obj) === "[object Object]" && obj.constructor === Object;
function checkOpts(defaults, opts) {
  if (opts !== void 0 && (typeof opts !== "object" || !isPlainObject(opts)))
    throw new Error("options must be object or undefined");
  const merged = Object.assign(defaults, opts);
  return merged;
}
function ensureBytes2(b, len) {
  if (!isBytes5(b))
    throw new Error("Uint8Array expected");
  if (typeof len === "number") {
    if (b.length !== len)
      throw new Error(`Uint8Array length ${len} expected`);
  }
}
function equalBytes2(a, b) {
  if (a.length !== b.length)
    return false;
  let diff = 0;
  for (let i = 0; i < a.length; i++)
    diff |= a[i] ^ b[i];
  return diff === 0;
}
var wrapCipher = (params, c) => {
  Object.assign(c, params);
  return c;
};
function setBigUint642(view, byteOffset, value, isLE4) {
  if (typeof view.setBigUint64 === "function")
    return view.setBigUint64(byteOffset, value, isLE4);
  const _32n3 = BigInt(32);
  const _u32_max = BigInt(4294967295);
  const wh = Number(value >> _32n3 & _u32_max);
  const wl = Number(value & _u32_max);
  const h = isLE4 ? 4 : 0;
  const l = isLE4 ? 0 : 4;
  view.setUint32(byteOffset + h, wh, isLE4);
  view.setUint32(byteOffset + l, wl, isLE4);
}

// node_modules/.pnpm/@noble+ciphers@0.4.1/node_modules/@noble/ciphers/esm/_assert.js
function number2(n2) {
  if (!Number.isSafeInteger(n2) || n2 < 0)
    throw new Error(`wrong positive integer: ${n2}`);
}
function bool(b) {
  if (typeof b !== "boolean")
    throw new Error(`boolean expected, not ${b}`);
}
function isBytes6(a) {
  return a != null && typeof a === "object" && (a instanceof Uint8Array || a.constructor.name === "Uint8Array");
}
function bytes2(b, ...lengths) {
  if (!isBytes6(b))
    throw new Error("Uint8Array expected");
  if (lengths.length > 0 && !lengths.includes(b.length))
    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);
}
function exists2(instance, checkFinished = true) {
  if (instance.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (checkFinished && instance.finished)
    throw new Error("Hash#digest() has already been called");
}
function output2(out, instance) {
  bytes2(out);
  const min2 = instance.outputLen;
  if (out.length < min2) {
    throw new Error(`digestInto() expects output buffer of length at least ${min2}`);
  }
}

// node_modules/.pnpm/@noble+ciphers@0.4.1/node_modules/@noble/ciphers/esm/_poly1305.js
var u8to16 = (a, i) => a[i++] & 255 | (a[i++] & 255) << 8;
var Poly1305 = class {
  constructor(key) {
    this.blockLen = 16;
    this.outputLen = 16;
    this.buffer = new Uint8Array(16);
    this.r = new Uint16Array(10);
    this.h = new Uint16Array(10);
    this.pad = new Uint16Array(8);
    this.pos = 0;
    this.finished = false;
    key = toBytes2(key);
    ensureBytes2(key, 32);
    const t0 = u8to16(key, 0);
    const t1 = u8to16(key, 2);
    const t2 = u8to16(key, 4);
    const t3 = u8to16(key, 6);
    const t4 = u8to16(key, 8);
    const t5 = u8to16(key, 10);
    const t6 = u8to16(key, 12);
    const t7 = u8to16(key, 14);
    this.r[0] = t0 & 8191;
    this.r[1] = (t0 >>> 13 | t1 << 3) & 8191;
    this.r[2] = (t1 >>> 10 | t2 << 6) & 7939;
    this.r[3] = (t2 >>> 7 | t3 << 9) & 8191;
    this.r[4] = (t3 >>> 4 | t4 << 12) & 255;
    this.r[5] = t4 >>> 1 & 8190;
    this.r[6] = (t4 >>> 14 | t5 << 2) & 8191;
    this.r[7] = (t5 >>> 11 | t6 << 5) & 8065;
    this.r[8] = (t6 >>> 8 | t7 << 8) & 8191;
    this.r[9] = t7 >>> 5 & 127;
    for (let i = 0; i < 8; i++)
      this.pad[i] = u8to16(key, 16 + 2 * i);
  }
  process(data, offset, isLast = false) {
    const hibit = isLast ? 0 : 1 << 11;
    const { h, r: r2 } = this;
    const r0 = r2[0];
    const r1 = r2[1];
    const r22 = r2[2];
    const r3 = r2[3];
    const r4 = r2[4];
    const r5 = r2[5];
    const r6 = r2[6];
    const r7 = r2[7];
    const r8 = r2[8];
    const r9 = r2[9];
    const t0 = u8to16(data, offset + 0);
    const t1 = u8to16(data, offset + 2);
    const t2 = u8to16(data, offset + 4);
    const t3 = u8to16(data, offset + 6);
    const t4 = u8to16(data, offset + 8);
    const t5 = u8to16(data, offset + 10);
    const t6 = u8to16(data, offset + 12);
    const t7 = u8to16(data, offset + 14);
    let h0 = h[0] + (t0 & 8191);
    let h1 = h[1] + ((t0 >>> 13 | t1 << 3) & 8191);
    let h2 = h[2] + ((t1 >>> 10 | t2 << 6) & 8191);
    let h3 = h[3] + ((t2 >>> 7 | t3 << 9) & 8191);
    let h4 = h[4] + ((t3 >>> 4 | t4 << 12) & 8191);
    let h5 = h[5] + (t4 >>> 1 & 8191);
    let h6 = h[6] + ((t4 >>> 14 | t5 << 2) & 8191);
    let h7 = h[7] + ((t5 >>> 11 | t6 << 5) & 8191);
    let h8 = h[8] + ((t6 >>> 8 | t7 << 8) & 8191);
    let h9 = h[9] + (t7 >>> 5 | hibit);
    let c = 0;
    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);
    c = d0 >>> 13;
    d0 &= 8191;
    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r22) + h9 * (5 * r1);
    c += d0 >>> 13;
    d0 &= 8191;
    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);
    c = d1 >>> 13;
    d1 &= 8191;
    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r22);
    c += d1 >>> 13;
    d1 &= 8191;
    let d2 = c + h0 * r22 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);
    c = d2 >>> 13;
    d2 &= 8191;
    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);
    c += d2 >>> 13;
    d2 &= 8191;
    let d3 = c + h0 * r3 + h1 * r22 + h2 * r1 + h3 * r0 + h4 * (5 * r9);
    c = d3 >>> 13;
    d3 &= 8191;
    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);
    c += d3 >>> 13;
    d3 &= 8191;
    let d4 = c + h0 * r4 + h1 * r3 + h2 * r22 + h3 * r1 + h4 * r0;
    c = d4 >>> 13;
    d4 &= 8191;
    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);
    c += d4 >>> 13;
    d4 &= 8191;
    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r22 + h4 * r1;
    c = d5 >>> 13;
    d5 &= 8191;
    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);
    c += d5 >>> 13;
    d5 &= 8191;
    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r22;
    c = d6 >>> 13;
    d6 &= 8191;
    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);
    c += d6 >>> 13;
    d6 &= 8191;
    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;
    c = d7 >>> 13;
    d7 &= 8191;
    d7 += h5 * r22 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);
    c += d7 >>> 13;
    d7 &= 8191;
    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;
    c = d8 >>> 13;
    d8 &= 8191;
    d8 += h5 * r3 + h6 * r22 + h7 * r1 + h8 * r0 + h9 * (5 * r9);
    c += d8 >>> 13;
    d8 &= 8191;
    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;
    c = d9 >>> 13;
    d9 &= 8191;
    d9 += h5 * r4 + h6 * r3 + h7 * r22 + h8 * r1 + h9 * r0;
    c += d9 >>> 13;
    d9 &= 8191;
    c = (c << 2) + c | 0;
    c = c + d0 | 0;
    d0 = c & 8191;
    c = c >>> 13;
    d1 += c;
    h[0] = d0;
    h[1] = d1;
    h[2] = d2;
    h[3] = d3;
    h[4] = d4;
    h[5] = d5;
    h[6] = d6;
    h[7] = d7;
    h[8] = d8;
    h[9] = d9;
  }
  finalize() {
    const { h, pad } = this;
    const g = new Uint16Array(10);
    let c = h[1] >>> 13;
    h[1] &= 8191;
    for (let i = 2; i < 10; i++) {
      h[i] += c;
      c = h[i] >>> 13;
      h[i] &= 8191;
    }
    h[0] += c * 5;
    c = h[0] >>> 13;
    h[0] &= 8191;
    h[1] += c;
    c = h[1] >>> 13;
    h[1] &= 8191;
    h[2] += c;
    g[0] = h[0] + 5;
    c = g[0] >>> 13;
    g[0] &= 8191;
    for (let i = 1; i < 10; i++) {
      g[i] = h[i] + c;
      c = g[i] >>> 13;
      g[i] &= 8191;
    }
    g[9] -= 1 << 13;
    let mask2 = (c ^ 1) - 1;
    for (let i = 0; i < 10; i++)
      g[i] &= mask2;
    mask2 = ~mask2;
    for (let i = 0; i < 10; i++)
      h[i] = h[i] & mask2 | g[i];
    h[0] = (h[0] | h[1] << 13) & 65535;
    h[1] = (h[1] >>> 3 | h[2] << 10) & 65535;
    h[2] = (h[2] >>> 6 | h[3] << 7) & 65535;
    h[3] = (h[3] >>> 9 | h[4] << 4) & 65535;
    h[4] = (h[4] >>> 12 | h[5] << 1 | h[6] << 14) & 65535;
    h[5] = (h[6] >>> 2 | h[7] << 11) & 65535;
    h[6] = (h[7] >>> 5 | h[8] << 8) & 65535;
    h[7] = (h[8] >>> 8 | h[9] << 5) & 65535;
    let f2 = h[0] + pad[0];
    h[0] = f2 & 65535;
    for (let i = 1; i < 8; i++) {
      f2 = (h[i] + pad[i] | 0) + (f2 >>> 16) | 0;
      h[i] = f2 & 65535;
    }
  }
  update(data) {
    exists2(this);
    const { buffer, blockLen } = this;
    data = toBytes2(data);
    const len = data.length;
    for (let pos = 0; pos < len; ) {
      const take = Math.min(blockLen - this.pos, len - pos);
      if (take === blockLen) {
        for (; blockLen <= len - pos; pos += blockLen)
          this.process(data, pos);
        continue;
      }
      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      pos += take;
      if (this.pos === blockLen) {
        this.process(buffer, 0, false);
        this.pos = 0;
      }
    }
    return this;
  }
  destroy() {
    this.h.fill(0);
    this.r.fill(0);
    this.buffer.fill(0);
    this.pad.fill(0);
  }
  digestInto(out) {
    exists2(this);
    output2(out, this);
    this.finished = true;
    const { buffer, h } = this;
    let { pos } = this;
    if (pos) {
      buffer[pos++] = 1;
      for (; pos < 16; pos++)
        buffer[pos] = 0;
      this.process(buffer, 0, true);
    }
    this.finalize();
    let opos = 0;
    for (let i = 0; i < 8; i++) {
      out[opos++] = h[i] >>> 0;
      out[opos++] = h[i] >>> 8;
    }
    return out;
  }
  digest() {
    const { buffer, outputLen } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }
};
function wrapConstructorWithKey(hashCons) {
  const hashC = (msg, key) => hashCons(key).update(toBytes2(msg)).digest();
  const tmp = hashCons(new Uint8Array(32));
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = (key) => hashCons(key);
  return hashC;
}
var poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));

// node_modules/.pnpm/@noble+ciphers@0.4.1/node_modules/@noble/ciphers/esm/_arx.js
var sigma16 = utf8ToBytes3("expand 16-byte k");
var sigma32 = utf8ToBytes3("expand 32-byte k");
var sigma16_32 = u322(sigma16);
var sigma32_32 = u322(sigma32);
function rotl2(a, b) {
  return a << b | a >>> 32 - b;
}
function isAligned32(b) {
  return b.byteOffset % 4 === 0;
}
var BLOCK_LEN = 64;
var BLOCK_LEN32 = 16;
var MAX_COUNTER = 2 ** 32 - 1;
var U32_EMPTY = new Uint32Array();
function runCipher(core, sigma, key, nonce, data, output4, counter, rounds) {
  const len = data.length;
  const block2 = new Uint8Array(BLOCK_LEN);
  const b32 = u322(block2);
  const isAligned = isAligned32(data) && isAligned32(output4);
  const d32 = isAligned ? u322(data) : U32_EMPTY;
  const o32 = isAligned ? u322(output4) : U32_EMPTY;
  for (let pos = 0; pos < len; counter++) {
    core(sigma, key, nonce, b32, counter, rounds);
    if (counter >= MAX_COUNTER)
      throw new Error("arx: counter overflow");
    const take = Math.min(BLOCK_LEN, len - pos);
    if (isAligned && take === BLOCK_LEN) {
      const pos32 = pos / 4;
      if (pos % 4 !== 0)
        throw new Error("arx: invalid block position");
      for (let j = 0, posj; j < BLOCK_LEN32; j++) {
        posj = pos32 + j;
        o32[posj] = d32[posj] ^ b32[j];
      }
      pos += BLOCK_LEN;
      continue;
    }
    for (let j = 0, posj; j < take; j++) {
      posj = pos + j;
      output4[posj] = data[posj] ^ block2[j];
    }
    pos += take;
  }
}
function createCipher(core, opts) {
  const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, opts);
  if (typeof core !== "function")
    throw new Error("core must be a function");
  number2(counterLength);
  number2(rounds);
  bool(counterRight);
  bool(allowShortKeys);
  return (key, nonce, data, output4, counter = 0) => {
    bytes2(key);
    bytes2(nonce);
    bytes2(data);
    const len = data.length;
    if (!output4)
      output4 = new Uint8Array(len);
    bytes2(output4);
    number2(counter);
    if (counter < 0 || counter >= MAX_COUNTER)
      throw new Error("arx: counter overflow");
    if (output4.length < len)
      throw new Error(`arx: output (${output4.length}) is shorter than data (${len})`);
    const toClean = [];
    let l = key.length, k, sigma;
    if (l === 32) {
      k = key.slice();
      toClean.push(k);
      sigma = sigma32_32;
    } else if (l === 16 && allowShortKeys) {
      k = new Uint8Array(32);
      k.set(key);
      k.set(key, 16);
      sigma = sigma16_32;
      toClean.push(k);
    } else {
      throw new Error(`arx: invalid 32-byte key, got length=${l}`);
    }
    if (!isAligned32(nonce)) {
      nonce = nonce.slice();
      toClean.push(nonce);
    }
    const k32 = u322(k);
    if (extendNonceFn) {
      if (nonce.length !== 24)
        throw new Error(`arx: extended nonce must be 24 bytes`);
      extendNonceFn(sigma, k32, u322(nonce.subarray(0, 16)), k32);
      nonce = nonce.subarray(16);
    }
    const nonceNcLen = 16 - counterLength;
    if (nonceNcLen !== nonce.length)
      throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);
    if (nonceNcLen !== 12) {
      const nc = new Uint8Array(12);
      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);
      nonce = nc;
      toClean.push(nonce);
    }
    const n32 = u322(nonce);
    runCipher(core, sigma, k32, n32, data, output4, counter, rounds);
    while (toClean.length > 0)
      toClean.pop().fill(0);
    return output4;
  };
}

// node_modules/.pnpm/@noble+ciphers@0.4.1/node_modules/@noble/ciphers/esm/chacha.js
function chachaCore(s, k, n2, out, cnt, rounds = 20) {
  let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], y12 = cnt, y13 = n2[0], y14 = n2[1], y15 = n2[2];
  let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;
  for (let r2 = 0; r2 < rounds; r2 += 2) {
    x00 = x00 + x04 | 0;
    x12 = rotl2(x12 ^ x00, 16);
    x08 = x08 + x12 | 0;
    x04 = rotl2(x04 ^ x08, 12);
    x00 = x00 + x04 | 0;
    x12 = rotl2(x12 ^ x00, 8);
    x08 = x08 + x12 | 0;
    x04 = rotl2(x04 ^ x08, 7);
    x01 = x01 + x05 | 0;
    x13 = rotl2(x13 ^ x01, 16);
    x09 = x09 + x13 | 0;
    x05 = rotl2(x05 ^ x09, 12);
    x01 = x01 + x05 | 0;
    x13 = rotl2(x13 ^ x01, 8);
    x09 = x09 + x13 | 0;
    x05 = rotl2(x05 ^ x09, 7);
    x02 = x02 + x06 | 0;
    x14 = rotl2(x14 ^ x02, 16);
    x10 = x10 + x14 | 0;
    x06 = rotl2(x06 ^ x10, 12);
    x02 = x02 + x06 | 0;
    x14 = rotl2(x14 ^ x02, 8);
    x10 = x10 + x14 | 0;
    x06 = rotl2(x06 ^ x10, 7);
    x03 = x03 + x07 | 0;
    x15 = rotl2(x15 ^ x03, 16);
    x11 = x11 + x15 | 0;
    x07 = rotl2(x07 ^ x11, 12);
    x03 = x03 + x07 | 0;
    x15 = rotl2(x15 ^ x03, 8);
    x11 = x11 + x15 | 0;
    x07 = rotl2(x07 ^ x11, 7);
    x00 = x00 + x05 | 0;
    x15 = rotl2(x15 ^ x00, 16);
    x10 = x10 + x15 | 0;
    x05 = rotl2(x05 ^ x10, 12);
    x00 = x00 + x05 | 0;
    x15 = rotl2(x15 ^ x00, 8);
    x10 = x10 + x15 | 0;
    x05 = rotl2(x05 ^ x10, 7);
    x01 = x01 + x06 | 0;
    x12 = rotl2(x12 ^ x01, 16);
    x11 = x11 + x12 | 0;
    x06 = rotl2(x06 ^ x11, 12);
    x01 = x01 + x06 | 0;
    x12 = rotl2(x12 ^ x01, 8);
    x11 = x11 + x12 | 0;
    x06 = rotl2(x06 ^ x11, 7);
    x02 = x02 + x07 | 0;
    x13 = rotl2(x13 ^ x02, 16);
    x08 = x08 + x13 | 0;
    x07 = rotl2(x07 ^ x08, 12);
    x02 = x02 + x07 | 0;
    x13 = rotl2(x13 ^ x02, 8);
    x08 = x08 + x13 | 0;
    x07 = rotl2(x07 ^ x08, 7);
    x03 = x03 + x04 | 0;
    x14 = rotl2(x14 ^ x03, 16);
    x09 = x09 + x14 | 0;
    x04 = rotl2(x04 ^ x09, 12);
    x03 = x03 + x04 | 0;
    x14 = rotl2(x14 ^ x03, 8);
    x09 = x09 + x14 | 0;
    x04 = rotl2(x04 ^ x09, 7);
  }
  let oi = 0;
  out[oi++] = y00 + x00 | 0;
  out[oi++] = y01 + x01 | 0;
  out[oi++] = y02 + x02 | 0;
  out[oi++] = y03 + x03 | 0;
  out[oi++] = y04 + x04 | 0;
  out[oi++] = y05 + x05 | 0;
  out[oi++] = y06 + x06 | 0;
  out[oi++] = y07 + x07 | 0;
  out[oi++] = y08 + x08 | 0;
  out[oi++] = y09 + x09 | 0;
  out[oi++] = y10 + x10 | 0;
  out[oi++] = y11 + x11 | 0;
  out[oi++] = y12 + x12 | 0;
  out[oi++] = y13 + x13 | 0;
  out[oi++] = y14 + x14 | 0;
  out[oi++] = y15 + x15 | 0;
}
function hchacha(s, k, i, o32) {
  let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3], x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3], x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7], x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];
  for (let r2 = 0; r2 < 20; r2 += 2) {
    x00 = x00 + x04 | 0;
    x12 = rotl2(x12 ^ x00, 16);
    x08 = x08 + x12 | 0;
    x04 = rotl2(x04 ^ x08, 12);
    x00 = x00 + x04 | 0;
    x12 = rotl2(x12 ^ x00, 8);
    x08 = x08 + x12 | 0;
    x04 = rotl2(x04 ^ x08, 7);
    x01 = x01 + x05 | 0;
    x13 = rotl2(x13 ^ x01, 16);
    x09 = x09 + x13 | 0;
    x05 = rotl2(x05 ^ x09, 12);
    x01 = x01 + x05 | 0;
    x13 = rotl2(x13 ^ x01, 8);
    x09 = x09 + x13 | 0;
    x05 = rotl2(x05 ^ x09, 7);
    x02 = x02 + x06 | 0;
    x14 = rotl2(x14 ^ x02, 16);
    x10 = x10 + x14 | 0;
    x06 = rotl2(x06 ^ x10, 12);
    x02 = x02 + x06 | 0;
    x14 = rotl2(x14 ^ x02, 8);
    x10 = x10 + x14 | 0;
    x06 = rotl2(x06 ^ x10, 7);
    x03 = x03 + x07 | 0;
    x15 = rotl2(x15 ^ x03, 16);
    x11 = x11 + x15 | 0;
    x07 = rotl2(x07 ^ x11, 12);
    x03 = x03 + x07 | 0;
    x15 = rotl2(x15 ^ x03, 8);
    x11 = x11 + x15 | 0;
    x07 = rotl2(x07 ^ x11, 7);
    x00 = x00 + x05 | 0;
    x15 = rotl2(x15 ^ x00, 16);
    x10 = x10 + x15 | 0;
    x05 = rotl2(x05 ^ x10, 12);
    x00 = x00 + x05 | 0;
    x15 = rotl2(x15 ^ x00, 8);
    x10 = x10 + x15 | 0;
    x05 = rotl2(x05 ^ x10, 7);
    x01 = x01 + x06 | 0;
    x12 = rotl2(x12 ^ x01, 16);
    x11 = x11 + x12 | 0;
    x06 = rotl2(x06 ^ x11, 12);
    x01 = x01 + x06 | 0;
    x12 = rotl2(x12 ^ x01, 8);
    x11 = x11 + x12 | 0;
    x06 = rotl2(x06 ^ x11, 7);
    x02 = x02 + x07 | 0;
    x13 = rotl2(x13 ^ x02, 16);
    x08 = x08 + x13 | 0;
    x07 = rotl2(x07 ^ x08, 12);
    x02 = x02 + x07 | 0;
    x13 = rotl2(x13 ^ x02, 8);
    x08 = x08 + x13 | 0;
    x07 = rotl2(x07 ^ x08, 7);
    x03 = x03 + x04 | 0;
    x14 = rotl2(x14 ^ x03, 16);
    x09 = x09 + x14 | 0;
    x04 = rotl2(x04 ^ x09, 12);
    x03 = x03 + x04 | 0;
    x14 = rotl2(x14 ^ x03, 8);
    x09 = x09 + x14 | 0;
    x04 = rotl2(x04 ^ x09, 7);
  }
  let oi = 0;
  o32[oi++] = x00;
  o32[oi++] = x01;
  o32[oi++] = x02;
  o32[oi++] = x03;
  o32[oi++] = x12;
  o32[oi++] = x13;
  o32[oi++] = x14;
  o32[oi++] = x15;
}
var chacha20 = /* @__PURE__ */ createCipher(chachaCore, {
  counterRight: false,
  counterLength: 4,
  allowShortKeys: false
});
var xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {
  counterRight: false,
  counterLength: 8,
  extendNonceFn: hchacha,
  allowShortKeys: false
});
var ZEROS16 = /* @__PURE__ */ new Uint8Array(16);
var updatePadded = (h, msg) => {
  h.update(msg);
  const left = msg.length % 16;
  if (left)
    h.update(ZEROS16.subarray(left));
};
var ZEROS32 = /* @__PURE__ */ new Uint8Array(32);
function computeTag(fn, key, nonce, data, AAD) {
  const authKey = fn(key, nonce, ZEROS32);
  const h = poly1305.create(authKey);
  if (AAD)
    updatePadded(h, AAD);
  updatePadded(h, data);
  const num = new Uint8Array(16);
  const view = createView2(num);
  setBigUint642(view, 0, BigInt(AAD ? AAD.length : 0), true);
  setBigUint642(view, 8, BigInt(data.length), true);
  h.update(num);
  const res = h.digest();
  authKey.fill(0);
  return res;
}
var _poly1305_aead = (xorStream) => (key, nonce, AAD) => {
  const tagLength = 16;
  ensureBytes2(key, 32);
  ensureBytes2(nonce);
  return {
    encrypt: (plaintext, output4) => {
      const plength = plaintext.length;
      const clength = plength + tagLength;
      if (output4) {
        ensureBytes2(output4, clength);
      } else {
        output4 = new Uint8Array(clength);
      }
      xorStream(key, nonce, plaintext, output4, 1);
      const tag2 = computeTag(xorStream, key, nonce, output4.subarray(0, -tagLength), AAD);
      output4.set(tag2, plength);
      return output4;
    },
    decrypt: (ciphertext, output4) => {
      const clength = ciphertext.length;
      const plength = clength - tagLength;
      if (clength < tagLength)
        throw new Error(`encrypted data must be at least ${tagLength} bytes`);
      if (output4) {
        ensureBytes2(output4, plength);
      } else {
        output4 = new Uint8Array(plength);
      }
      const data = ciphertext.subarray(0, -tagLength);
      const passedTag = ciphertext.subarray(-tagLength);
      const tag2 = computeTag(xorStream, key, nonce, data, AAD);
      if (!equalBytes2(passedTag, tag2))
        throw new Error("invalid tag");
      xorStream(key, nonce, data, output4, 1);
      return output4;
    }
  };
};
var chacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 12, tagLength: 16 }, _poly1305_aead(chacha20));
var xchacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 24, tagLength: 16 }, _poly1305_aead(xchacha20));

// node_modules/.pnpm/did-jwt@7.4.7/node_modules/did-jwt/lib/index.module.js
var u8a = {
  toString: toString2,
  fromString: fromString2,
  concat
};
function bytesToBase64url(b) {
  return u8a.toString(b, "base64url");
}
function base64ToBytes(s) {
  const inputBase64Url = s.replace(/\+/g, "-").replace(/\//g, "_").replace(/=/g, "");
  return u8a.fromString(inputBase64Url, "base64url");
}
function base58ToBytes(s) {
  return u8a.fromString(s, "base58btc");
}
function bytesToBase58(b) {
  return u8a.toString(b, "base58btc");
}
function multibaseToBytes(s) {
  const bytes4 = (0, import_multibase.decode)(s);
  if ([32, 33, 48, 64, 65, 96].includes(bytes4.length)) {
    return bytes4;
  }
  try {
    const [codec, length5] = varint_exports.decode(bytes4);
    return bytes4.slice(length5);
  } catch (e2) {
    return bytes4;
  }
}
function hexToBytes2(s, minLength) {
  let input = s.startsWith("0x") ? s.substring(2) : s;
  if (input.length % 2 !== 0) {
    input = `0${input}`;
  }
  if (minLength) {
    const paddedLength = Math.max(input.length, minLength * 2);
    input = input.padStart(paddedLength, "00");
  }
  return u8a.fromString(input.toLowerCase(), "base16");
}
function bytesToHex2(b) {
  return u8a.toString(b, "base16");
}
function bytesToBigInt(b) {
  return BigInt(`0x` + u8a.toString(b, "base16"));
}
function stringToBytes(s) {
  return u8a.fromString(s, "utf-8");
}
function toJose({
  r: r2,
  s,
  recoveryParam
}, recoverable) {
  const jose = new Uint8Array(recoverable ? 65 : 64);
  jose.set(u8a.fromString(r2, "base16"), 0);
  jose.set(u8a.fromString(s, "base16"), 32);
  if (recoverable) {
    if (typeof recoveryParam === "undefined") {
      throw new Error("Signer did not return a recoveryParam");
    }
    jose[64] = recoveryParam;
  }
  return bytesToBase64url(jose);
}
function fromJose(signature) {
  const signatureBytes = base64ToBytes(signature);
  if (signatureBytes.length < 64 || signatureBytes.length > 65) {
    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`);
  }
  const r2 = bytesToHex2(signatureBytes.slice(0, 32));
  const s = bytesToHex2(signatureBytes.slice(32, 64));
  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : void 0;
  return {
    r: r2,
    s,
    recoveryParam
  };
}
function sha2563(payload) {
  const data = typeof payload === "string" ? fromString2(payload) : payload;
  return sha2562(data);
}
var keccak = keccak_256;
function toEthereumAddress(hexPublicKey) {
  const hashInput = fromString2(hexPublicKey.slice(2), "base16");
  return `0x${toString2(keccak(hashInput).slice(-20), "base16")}`;
}
function instanceOfEcdsaSignature(object) {
  return typeof object === "object" && "r" in object && "s" in object;
}
function ES256SignerAlg() {
  return function sign2(payload, signer) {
    try {
      return Promise.resolve(signer(payload)).then(function(signature) {
        if (instanceOfEcdsaSignature(signature)) {
          return toJose(signature);
        } else {
          return signature;
        }
      });
    } catch (e2) {
      return Promise.reject(e2);
    }
  };
}
function ES256KSignerAlg(recoverable) {
  return function sign2(payload, signer) {
    try {
      return Promise.resolve(signer(payload)).then(function(signature) {
        if (instanceOfEcdsaSignature(signature)) {
          return toJose(signature, recoverable);
        } else {
          if (recoverable && typeof fromJose(signature).recoveryParam === "undefined") {
            throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`);
          }
          return signature;
        }
      });
    } catch (e2) {
      return Promise.reject(e2);
    }
  };
}
function Ed25519SignerAlg() {
  return function sign2(payload, signer) {
    try {
      return Promise.resolve(signer(payload)).then(function(signature) {
        if (!instanceOfEcdsaSignature(signature)) {
          return signature;
        } else {
          throw new Error("invalid_config: expected a signer function that returns a string instead of signature object");
        }
      });
    } catch (e2) {
      return Promise.reject(e2);
    }
  };
}
var algorithms$1 = {
  ES256: ES256SignerAlg(),
  ES256K: ES256KSignerAlg(),
  // This is a non-standard algorithm but retained for backwards compatibility
  // see https://github.com/decentralized-identity/did-jwt/issues/146
  "ES256K-R": ES256KSignerAlg(true),
  // This is actually incorrect but retained for backwards compatibility
  // see https://github.com/decentralized-identity/did-jwt/issues/130
  Ed25519: Ed25519SignerAlg(),
  EdDSA: Ed25519SignerAlg()
};
function publicKeyToAddress$1(publicKey, otherAddress) {
  const version3 = bytesToHex2(base58ToBytes(otherAddress).slice(0, 1));
  const publicKeyBuffer = hexToBytes2(publicKey);
  const publicKeyHash = ripemd160(sha2563(publicKeyBuffer));
  const step1 = version3 + bytesToHex2(publicKeyHash);
  const step2 = sha2563(hexToBytes2(step1));
  const step3 = sha2563(step2);
  const checksum = bytesToHex2(step3).substring(0, 8);
  const step4 = step1 + checksum;
  return bytesToBase58(hexToBytes2(step4));
}
function publicKeyToAddress(publicKey, prefix) {
  const publicKeyBuffer = secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes();
  const hash3 = ripemd160(sha2563(publicKeyBuffer));
  const words = bech32.toWords(hash3);
  return bech32.encode(prefix, words).replace(prefix, "");
}
function verifyBlockchainAccountId(publicKey, blockchainAccountId) {
  if (blockchainAccountId) {
    const chain2 = blockchainAccountId.split(":");
    switch (chain2[0]) {
      case "bip122":
        chain2[chain2.length - 1] = publicKeyToAddress$1(publicKey, chain2[chain2.length - 1]);
        break;
      case "cosmos":
        chain2[chain2.length - 1] = publicKeyToAddress(publicKey, chain2[1]);
        break;
      case "eip155":
        chain2[chain2.length - 1] = toEthereumAddress(publicKey);
        break;
      default:
        return false;
    }
    return chain2.join(":").toLowerCase() === blockchainAccountId.toLowerCase();
  }
  return false;
}
function toSignatureObject(signature, recoverable = false) {
  const rawSig = base64ToBytes(signature);
  if (rawSig.length !== (recoverable ? 65 : 64)) {
    throw new Error("wrong signature length");
  }
  const r2 = bytesToHex2(rawSig.slice(0, 32));
  const s = bytesToHex2(rawSig.slice(32, 64));
  const sigObj = {
    r: r2,
    s
  };
  if (recoverable) {
    sigObj.recoveryParam = rawSig[64];
  }
  return sigObj;
}
function toSignatureObject2(signature, recoverable = false) {
  const bytes4 = base64ToBytes(signature);
  if (bytes4.length !== (recoverable ? 65 : 64)) {
    throw new Error("wrong signature length");
  }
  return {
    compact: bytes4.slice(0, 64),
    recovery: bytes4[64]
  };
}
function extractPublicKeyBytes(pk) {
  if (pk.publicKeyBase58) {
    return base58ToBytes(pk.publicKeyBase58);
  } else if (pk.publicKeyBase64) {
    return base64ToBytes(pk.publicKeyBase64);
  } else if (pk.publicKeyHex) {
    return hexToBytes2(pk.publicKeyHex);
  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === "secp256k1" && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {
    return secp256k1.ProjectivePoint.fromAffine({
      x: bytesToBigInt(base64ToBytes(pk.publicKeyJwk.x)),
      y: bytesToBigInt(base64ToBytes(pk.publicKeyJwk.y))
    }).toRawBytes(false);
  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === "P-256" && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {
    return p256.ProjectivePoint.fromAffine({
      x: bytesToBigInt(base64ToBytes(pk.publicKeyJwk.x)),
      y: bytesToBigInt(base64ToBytes(pk.publicKeyJwk.y))
    }).toRawBytes(false);
  } else if (pk.publicKeyJwk && pk.publicKeyJwk.kty === "OKP" && ["Ed25519", "X25519"].includes(pk.publicKeyJwk.crv ?? "") && pk.publicKeyJwk.x) {
    return base64ToBytes(pk.publicKeyJwk.x);
  } else if (pk.publicKeyMultibase) {
    return multibaseToBytes(pk.publicKeyMultibase);
  }
  return new Uint8Array();
}
function verifyES256(data, signature, authenticators) {
  const hash3 = sha2563(data);
  const sig = p256.Signature.fromCompact(toSignatureObject2(signature).compact);
  const fullPublicKeys = authenticators.filter((a) => !a.ethereumAddress && !a.blockchainAccountId);
  const signer = fullPublicKeys.find((pk) => {
    try {
      const pubBytes = extractPublicKeyBytes(pk);
      return p256.verify(sig, hash3, pubBytes);
    } catch (err) {
      return false;
    }
  });
  if (!signer)
    throw new Error("invalid_signature: Signature invalid for JWT");
  return signer;
}
function verifyES256K(data, signature, authenticators) {
  const hash3 = sha2563(data);
  const signatureNormalized = secp256k1.Signature.fromCompact(base64ToBytes(signature)).normalizeS();
  const fullPublicKeys = authenticators.filter((a) => {
    return !a.ethereumAddress && !a.blockchainAccountId;
  });
  const blockchainAddressKeys = authenticators.filter((a) => {
    return a.ethereumAddress || a.blockchainAccountId;
  });
  let signer = fullPublicKeys.find((pk) => {
    try {
      const pubBytes = extractPublicKeyBytes(pk);
      return secp256k1.verify(signatureNormalized, hash3, pubBytes);
    } catch (err) {
      return false;
    }
  });
  if (!signer && blockchainAddressKeys.length > 0) {
    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys);
  }
  if (!signer)
    throw new Error("invalid_signature: Signature invalid for JWT");
  return signer;
}
function verifyRecoverableES256K(data, signature, authenticators) {
  const signatures = [];
  if (signature.length > 86) {
    signatures.push(toSignatureObject2(signature, true));
  } else {
    const so = toSignatureObject2(signature, false);
    signatures.push({
      ...so,
      recovery: 0
    });
    signatures.push({
      ...so,
      recovery: 1
    });
  }
  const hash3 = sha2563(data);
  const checkSignatureAgainstSigner = (sigObj) => {
    const signature2 = secp256k1.Signature.fromCompact(sigObj.compact).addRecoveryBit(sigObj.recovery || 0);
    const recoveredPublicKey = signature2.recoverPublicKey(hash3);
    const recoveredAddress = toEthereumAddress(recoveredPublicKey.toHex(false)).toLowerCase();
    const recoveredPublicKeyHex = recoveredPublicKey.toHex(false);
    const recoveredCompressedPublicKeyHex = recoveredPublicKey.toHex(true);
    return authenticators.find((a) => {
      const keyHex = bytesToHex2(extractPublicKeyBytes(a));
      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || a.ethereumAddress?.toLowerCase() === recoveredAddress || a.blockchainAccountId?.split("@eip155")?.[0].toLowerCase() === recoveredAddress || // CAIP-2
      verifyBlockchainAccountId(recoveredPublicKeyHex, a.blockchainAccountId);
    });
  };
  for (const signature2 of signatures) {
    const verificationMethod = checkSignatureAgainstSigner(signature2);
    if (verificationMethod)
      return verificationMethod;
  }
  throw new Error("invalid_signature: Signature invalid for JWT");
}
function verifyEd25519(data, signature, authenticators) {
  const clear = stringToBytes(data);
  const signatureBytes = base64ToBytes(signature);
  const signer = authenticators.find((a) => {
    return ed25519.verify(signatureBytes, clear, extractPublicKeyBytes(a));
  });
  if (!signer)
    throw new Error("invalid_signature: Signature invalid for JWT");
  return signer;
}
var algorithms = {
  ES256: verifyES256,
  ES256K: verifyES256K,
  // This is a non-standard algorithm but retained for backwards compatibility
  // see https://github.com/decentralized-identity/did-jwt/issues/146
  "ES256K-R": verifyRecoverableES256K,
  // This is actually incorrect but retained for backwards compatibility
  // see https://github.com/decentralized-identity/did-jwt/issues/130
  Ed25519: verifyEd25519,
  EdDSA: verifyEd25519
};
function VerifierAlgorithm(alg) {
  const impl = algorithms[alg];
  if (!impl)
    throw new Error(`not_supported: Unsupported algorithm ${alg}`);
  return impl;
}
VerifierAlgorithm.toSignatureObject = toSignatureObject;
var JWT_ERROR = {
  /**
   * Thrown when a JWT payload schema is unexpected or when validity period does not match
   */
  INVALID_JWT: "invalid_jwt",
  /**
   * Thrown when the verifier audience does not match the one set in the JWT payload
   */
  INVALID_AUDIENCE: "invalid_config",
  /**
   * Thrown when none of the public keys of the issuer match the signature of the JWT.
   *
   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.
   */
  INVALID_SIGNATURE: "invalid_signature",
  /**
   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given
   * `proofPurpose`.
   *
   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.
   */
  NO_SUITABLE_KEYS: "no_suitable_keys",
  /**
   * Thrown when the `alg` of the JWT or the encoding of the key is not supported
   */
  NOT_SUPPORTED: "not_supported",
  /**
   * Thrown when the DID resolver is unable to resolve the issuer DID.
   */
  RESOLVER_ERROR: "resolver_error"
};
var _iteratorSymbol$1 = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
var _iteratorSymbol = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";

// node_modules/.pnpm/did-jwt-vc@3.2.15/node_modules/did-jwt-vc/lib/index.module.js
var VC_ERROR = {
  /**
   * Thrown when the credential or presentation being verified does not conform to the data model defined by
   * {@link https://www.w3.org/TR/vc-data-model/ | the spec}
   */
  SCHEMA_ERROR: "schema_error",
  /**
   * Thrown when the input is not a JWT string
   */
  FORMAT_ERROR: "format_error",
  /**
   * Thrown when verifying a presentation where `challenge` and/or `domain` don't match the expected values.
   */
  AUTH_ERROR: "auth_error"
};
var VC_JWT_ERROR = {
  ...VC_ERROR,
  ...JWT_ERROR
};

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base32.js
var base32_exports2 = {};
__export(base32_exports2, {
  base32: () => base322,
  base32hex: () => base32hex2,
  base32hexpad: () => base32hexpad2,
  base32hexpadupper: () => base32hexpadupper2,
  base32hexupper: () => base32hexupper2,
  base32pad: () => base32pad2,
  base32padupper: () => base32padupper2,
  base32upper: () => base32upper2,
  base32z: () => base32z2
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bytes.js
var empty2 = new Uint8Array(0);
function equals4(aa, bb) {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
}
function coerce2(o2) {
  if (o2 instanceof Uint8Array && o2.constructor.name === "Uint8Array")
    return o2;
  if (o2 instanceof ArrayBuffer)
    return new Uint8Array(o2);
  if (ArrayBuffer.isView(o2)) {
    return new Uint8Array(o2.buffer, o2.byteOffset, o2.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
}
function fromString3(str) {
  return new TextEncoder().encode(str);
}
function toString3(b) {
  return new TextDecoder().decode(b);
}

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/vendor/base-x.js
function base3(ALPHABET, name4) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255;
  }
  for (var i = 0; i < ALPHABET.length; i++) {
    var x = ALPHABET.charAt(i);
    var xc = x.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x + " is ambiguous");
    }
    BASE_MAP[xc] = i;
  }
  var BASE2 = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE2) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE2);
  function encode15(source) {
    if (source instanceof Uint8Array)
      ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length5 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i2 = 0;
      for (var it1 = size - 1; (carry !== 0 || i2 < length5) && it1 !== -1; it1--, i2++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE2 >>> 0;
        carry = carry / BASE2 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length5 = i2;
      pbegin++;
    }
    var it2 = size - length5;
    while (it2 !== size && b58[it2] === 0) {
      it2++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it2 < size; ++it2) {
      str += ALPHABET.charAt(b58[it2]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length5 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i2 = 0;
      for (var it3 = size - 1; (carry !== 0 || i2 < length5) && it3 !== -1; it3--, i2++) {
        carry += BASE2 * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length5 = i2;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length5;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j2 = zeroes;
    while (it4 !== size) {
      vch[j2++] = b256[it4++];
    }
    return vch;
  }
  function decode17(string4) {
    var buffer = decodeUnsafe(string4);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name4} character`);
  }
  return {
    encode: encode15,
    decodeUnsafe,
    decode: decode17
  };
}
var src2 = base3;
var _brrp__multiformats_scope_baseX2 = src2;
var base_x_default2 = _brrp__multiformats_scope_baseX2;

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base.js
var Encoder2 = class {
  name;
  prefix;
  baseEncode;
  constructor(name4, prefix, baseEncode) {
    this.name = name4;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes4) {
    if (bytes4 instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes4)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder2 = class {
  name;
  prefix;
  baseDecode;
  prefixCodePoint;
  constructor(name4, prefix, baseDecode) {
    this.name = name4;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or2(this, decoder);
  }
};
var ComposedDecoder2 = class {
  decoders;
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or2(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder != null) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
function or2(left, right) {
  return new ComposedDecoder2({
    ...left.decoders ?? { [left.prefix]: left },
    ...right.decoders ?? { [right.prefix]: right }
  });
}
var Codec2 = class {
  name;
  prefix;
  baseEncode;
  baseDecode;
  encoder;
  decoder;
  constructor(name4, prefix, baseEncode, baseDecode) {
    this.name = name4;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder2(name4, prefix, baseEncode);
    this.decoder = new Decoder2(name4, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
function from3({ name: name4, prefix, encode: encode15, decode: decode17 }) {
  return new Codec2(name4, prefix, encode15, decode17);
}
function baseX2({ name: name4, prefix, alphabet: alphabet5 }) {
  const { encode: encode15, decode: decode17 } = base_x_default2(alphabet5, name4);
  return from3({
    prefix,
    name: name4,
    encode: encode15,
    decode: (text) => coerce2(decode17(text))
  });
}
function decode7(string4, alphabet5, bitsPerChar, name4) {
  const codes = {};
  for (let i = 0; i < alphabet5.length; ++i) {
    codes[alphabet5[i]] = i;
  }
  let end = string4.length;
  while (string4[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i = 0; i < end; ++i) {
    const value = codes[string4[i]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name4} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || (255 & buffer << 8 - bits) !== 0) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
}
function encode6(data, alphabet5, bitsPerChar) {
  const pad = alphabet5[alphabet5.length - 1] === "=";
  const mask2 = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i = 0; i < data.length; ++i) {
    buffer = buffer << 8 | data[i];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet5[mask2 & buffer >> bits];
    }
  }
  if (bits !== 0) {
    out += alphabet5[mask2 & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while ((out.length * bitsPerChar & 7) !== 0) {
      out += "=";
    }
  }
  return out;
}
function rfc46482({ name: name4, prefix, bitsPerChar, alphabet: alphabet5 }) {
  return from3({
    prefix,
    name: name4,
    encode(input) {
      return encode6(input, alphabet5, bitsPerChar);
    },
    decode(input) {
      return decode7(input, alphabet5, bitsPerChar, name4);
    }
  });
}

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base32.js
var base322 = rfc46482({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper2 = rfc46482({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad2 = rfc46482({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper2 = rfc46482({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex2 = rfc46482({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper2 = rfc46482({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad2 = rfc46482({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper2 = rfc46482({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z2 = rfc46482({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base58.js
var base58_exports2 = {};
__export(base58_exports2, {
  base58btc: () => base58btc2,
  base58flickr: () => base58flickr2
});
var base58btc2 = baseX2({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr2 = baseX2({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/vendor/varint.js
var encode_12 = encode7;
var MSB2 = 128;
var REST2 = 127;
var MSBALL2 = ~REST2;
var INT2 = Math.pow(2, 31);
function encode7(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT2) {
    out[offset++] = num & 255 | MSB2;
    num /= 128;
  }
  while (num & MSBALL2) {
    out[offset++] = num & 255 | MSB2;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode7.bytes = offset - oldOffset + 1;
  return out;
}
var decode8 = read2;
var MSB$12 = 128;
var REST$12 = 127;
function read2(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
  do {
    if (counter >= l) {
      read2.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b = buf[counter++];
    res += shift < 28 ? (b & REST$12) << shift : (b & REST$12) * Math.pow(2, shift);
    shift += 7;
  } while (b >= MSB$12);
  read2.bytes = counter - offset;
  return res;
}
var N12 = Math.pow(2, 7);
var N22 = Math.pow(2, 14);
var N32 = Math.pow(2, 21);
var N42 = Math.pow(2, 28);
var N52 = Math.pow(2, 35);
var N62 = Math.pow(2, 42);
var N72 = Math.pow(2, 49);
var N82 = Math.pow(2, 56);
var N92 = Math.pow(2, 63);
var length2 = function(value) {
  return value < N12 ? 1 : value < N22 ? 2 : value < N32 ? 3 : value < N42 ? 4 : value < N52 ? 5 : value < N62 ? 6 : value < N72 ? 7 : value < N82 ? 8 : value < N92 ? 9 : 10;
};
var varint2 = {
  encode: encode_12,
  decode: decode8,
  encodingLength: length2
};
var _brrp_varint2 = varint2;
var varint_default2 = _brrp_varint2;

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/varint.js
function decode9(data, offset = 0) {
  const code5 = varint_default2.decode(data, offset);
  return [code5, varint_default2.decode.bytes];
}
function encodeTo2(int, target, offset = 0) {
  varint_default2.encode(int, target, offset);
  return target;
}
function encodingLength2(int) {
  return varint_default2.encodingLength(int);
}

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/hashes/digest.js
function create2(code5, digest4) {
  const size = digest4.byteLength;
  const sizeOffset = encodingLength2(code5);
  const digestOffset = sizeOffset + encodingLength2(size);
  const bytes4 = new Uint8Array(digestOffset + size);
  encodeTo2(code5, bytes4, 0);
  encodeTo2(size, bytes4, sizeOffset);
  bytes4.set(digest4, digestOffset);
  return new Digest2(code5, size, digest4, bytes4);
}
function decode10(multihash) {
  const bytes4 = coerce2(multihash);
  const [code5, sizeOffset] = decode9(bytes4);
  const [size, digestOffset] = decode9(bytes4.subarray(sizeOffset));
  const digest4 = bytes4.subarray(sizeOffset + digestOffset);
  if (digest4.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest2(code5, size, digest4, bytes4);
}
function equals5(a, b) {
  if (a === b) {
    return true;
  } else {
    const data = b;
    return a.code === data.code && a.size === data.size && data.bytes instanceof Uint8Array && equals4(a.bytes, data.bytes);
  }
}
var Digest2 = class {
  code;
  size;
  digest;
  bytes;
  /**
   * Creates a multihash digest.
   */
  constructor(code5, size, digest4, bytes4) {
    this.code = code5;
    this.size = size;
    this.digest = digest4;
    this.bytes = bytes4;
  }
};

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/cid.js
function format(link, base5) {
  const { bytes: bytes4, version: version3 } = link;
  switch (version3) {
    case 0:
      return toStringV02(bytes4, baseCache(link), base5 ?? base58btc2.encoder);
    default:
      return toStringV12(bytes4, baseCache(link), base5 ?? base322.encoder);
  }
}
var cache = /* @__PURE__ */ new WeakMap();
function baseCache(cid) {
  const baseCache3 = cache.get(cid);
  if (baseCache3 == null) {
    const baseCache4 = /* @__PURE__ */ new Map();
    cache.set(cid, baseCache4);
    return baseCache4;
  }
  return baseCache3;
}
var CID2 = class _CID {
  code;
  version;
  multihash;
  bytes;
  "/";
  /**
   * @param version - Version of the CID
   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv
   * @param multihash - (Multi)hash of the of the content.
   */
  constructor(version3, code5, multihash, bytes4) {
    this.code = code5;
    this.version = version3;
    this.multihash = multihash;
    this.bytes = bytes4;
    this["/"] = bytes4;
  }
  /**
   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`
   * please either use `CID.asCID(cid)` or switch to new signalling mechanism
   *
   * @deprecated
   */
  get asCID() {
    return this;
  }
  // ArrayBufferView
  get byteOffset() {
    return this.bytes.byteOffset;
  }
  // ArrayBufferView
  get byteLength() {
    return this.bytes.byteLength;
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      case 1: {
        const { code: code5, multihash } = this;
        if (code5 !== DAG_PB_CODE2) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE2) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code5, digest: digest4 } = this.multihash;
        const multihash = create2(code5, digest4);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return _CID.equals(this, other);
  }
  static equals(self2, other) {
    const unknown = other;
    return unknown != null && self2.code === unknown.code && self2.version === unknown.version && equals5(self2.multihash, unknown.multihash);
  }
  toString(base5) {
    return format(this, base5);
  }
  toJSON() {
    return { "/": format(this) };
  }
  link() {
    return this;
  }
  [Symbol.toStringTag] = "CID";
  // Legacy
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return `CID(${this.toString()})`;
  }
  /**
   * Takes any input `value` and returns a `CID` instance if it was
   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`
   * it will return value back. If `value` is not instance of this CID
   * class, but is compatible CID it will return new instance of this
   * `CID` class. Otherwise returns null.
   *
   * This allows two different incompatible versions of CID library to
   * co-exist and interop as long as binary interface is compatible.
   */
  static asCID(input) {
    if (input == null) {
      return null;
    }
    const value = input;
    if (value instanceof _CID) {
      return value;
    } else if (value["/"] != null && value["/"] === value.bytes || value.asCID === value) {
      const { version: version3, code: code5, multihash, bytes: bytes4 } = value;
      return new _CID(version3, code5, multihash, bytes4 ?? encodeCID2(version3, code5, multihash.bytes));
    } else if (value[cidSymbol2] === true) {
      const { version: version3, multihash, code: code5 } = value;
      const digest4 = decode10(multihash);
      return _CID.create(version3, code5, digest4);
    } else {
      return null;
    }
  }
  /**
   * @param version - Version of the CID
   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv
   * @param digest - (Multi)hash of the of the content.
   */
  static create(version3, code5, digest4) {
    if (typeof code5 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    if (!(digest4.bytes instanceof Uint8Array)) {
      throw new Error("Invalid digest");
    }
    switch (version3) {
      case 0: {
        if (code5 !== DAG_PB_CODE2) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE2}) block encoding`);
        } else {
          return new _CID(version3, code5, digest4, digest4.bytes);
        }
      }
      case 1: {
        const bytes4 = encodeCID2(version3, code5, digest4.bytes);
        return new _CID(version3, code5, digest4, bytes4);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  /**
   * Simplified version of `create` for CIDv0.
   */
  static createV0(digest4) {
    return _CID.create(0, DAG_PB_CODE2, digest4);
  }
  /**
   * Simplified version of `create` for CIDv1.
   *
   * @param code - Content encoding format code.
   * @param digest - Multihash of the content.
   */
  static createV1(code5, digest4) {
    return _CID.create(1, code5, digest4);
  }
  /**
   * Decoded a CID from its binary representation. The byte array must contain
   * only the CID with no additional bytes.
   *
   * An error will be thrown if the bytes provided do not contain a valid
   * binary representation of a CID.
   */
  static decode(bytes4) {
    const [cid, remainder] = _CID.decodeFirst(bytes4);
    if (remainder.length !== 0) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  /**
   * Decoded a CID from its binary representation at the beginning of a byte
   * array.
   *
   * Returns an array with the first element containing the CID and the second
   * element containing the remainder of the original byte array. The remainder
   * will be a zero-length byte array if the provided bytes only contained a
   * binary CID representation.
   */
  static decodeFirst(bytes4) {
    const specs = _CID.inspectBytes(bytes4);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce2(bytes4.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest4 = new Digest2(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest4) : _CID.createV1(specs.codec, digest4);
    return [cid, bytes4.subarray(specs.size)];
  }
  /**
   * Inspect the initial bytes of a CID to determine its properties.
   *
   * Involves decoding up to 4 varints. Typically this will require only 4 to 6
   * bytes but for larger multicodec code values and larger multihash digest
   * lengths these varints can be quite large. It is recommended that at least
   * 10 bytes be made available in the `initialBytes` argument for a complete
   * inspection.
   */
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i, length5] = decode9(initialBytes.subarray(offset));
      offset += length5;
      return i;
    };
    let version3 = next();
    let codec = DAG_PB_CODE2;
    if (version3 === 18) {
      version3 = 0;
      offset = 0;
    } else {
      codec = next();
    }
    if (version3 !== 0 && version3 !== 1) {
      throw new RangeError(`Invalid CID version ${version3}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return { version: version3, codec, multihashCode, digestSize, multihashSize, size };
  }
  /**
   * Takes cid in a string representation and creates an instance. If `base`
   * decoder is not provided will use a default from the configuration. It will
   * throw an error if encoding of the CID is not compatible with supplied (or
   * a default decoder).
   */
  static parse(source, base5) {
    const [prefix, bytes4] = parseCIDtoBytes2(source, base5);
    const cid = _CID.decode(bytes4);
    if (cid.version === 0 && source[0] !== "Q") {
      throw Error("Version 0 CID string must not include multibase prefix");
    }
    baseCache(cid).set(prefix, source);
    return cid;
  }
};
function parseCIDtoBytes2(source, base5) {
  switch (source[0]) {
    case "Q": {
      const decoder = base5 ?? base58btc2;
      return [
        base58btc2.prefix,
        decoder.decode(`${base58btc2.prefix}${source}`)
      ];
    }
    case base58btc2.prefix: {
      const decoder = base5 ?? base58btc2;
      return [base58btc2.prefix, decoder.decode(source)];
    }
    case base322.prefix: {
      const decoder = base5 ?? base322;
      return [base322.prefix, decoder.decode(source)];
    }
    default: {
      if (base5 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [source[0], base5.decode(source)];
    }
  }
}
function toStringV02(bytes4, cache3, base5) {
  const { prefix } = base5;
  if (prefix !== base58btc2.prefix) {
    throw Error(`Cannot string encode V0 in ${base5.name} encoding`);
  }
  const cid = cache3.get(prefix);
  if (cid == null) {
    const cid2 = base5.encode(bytes4).slice(1);
    cache3.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
}
function toStringV12(bytes4, cache3, base5) {
  const { prefix } = base5;
  const cid = cache3.get(prefix);
  if (cid == null) {
    const cid2 = base5.encode(bytes4);
    cache3.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
}
var DAG_PB_CODE2 = 112;
var SHA_256_CODE2 = 18;
function encodeCID2(version3, code5, multihash) {
  const codeOffset = encodingLength2(version3);
  const hashOffset = codeOffset + encodingLength2(code5);
  const bytes4 = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo2(version3, bytes4, 0);
  encodeTo2(code5, bytes4, codeOffset);
  bytes4.set(multihash, hashOffset);
  return bytes4;
}
var cidSymbol2 = Symbol.for("@ipld/js-cid/CID");

// node_modules/.pnpm/@ipld+dag-pb@4.0.8/node_modules/@ipld/dag-pb/src/pb-decode.js
var textDecoder2 = new TextDecoder();

// node_modules/.pnpm/@ipld+dag-pb@4.0.8/node_modules/@ipld/dag-pb/src/pb-encode.js
var textEncoder2 = new TextEncoder();
var maxInt32 = 2 ** 32;
var maxUInt32 = 2 ** 31;

// node_modules/.pnpm/@ipld+dag-pb@4.0.8/node_modules/@ipld/dag-pb/src/util.js
var textEncoder3 = new TextEncoder();

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bytes.js
var empty3 = new Uint8Array(0);
var equals6 = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce3 = (o2) => {
  if (o2 instanceof Uint8Array && o2.constructor.name === "Uint8Array")
    return o2;
  if (o2 instanceof ArrayBuffer)
    return new Uint8Array(o2);
  if (ArrayBuffer.isView(o2)) {
    return new Uint8Array(o2.buffer, o2.byteOffset, o2.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString4 = (str) => new TextEncoder().encode(str);
var toString4 = (b) => new TextDecoder().decode(b);

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/vendor/varint.js
var encode_13 = encode8;
var MSB3 = 128;
var REST3 = 127;
var MSBALL3 = ~REST3;
var INT3 = Math.pow(2, 31);
function encode8(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT3) {
    out[offset++] = num & 255 | MSB3;
    num /= 128;
  }
  while (num & MSBALL3) {
    out[offset++] = num & 255 | MSB3;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode8.bytes = offset - oldOffset + 1;
  return out;
}
var decode11 = read3;
var MSB$13 = 128;
var REST$13 = 127;
function read3(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
  do {
    if (counter >= l) {
      read3.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b = buf[counter++];
    res += shift < 28 ? (b & REST$13) << shift : (b & REST$13) * Math.pow(2, shift);
    shift += 7;
  } while (b >= MSB$13);
  read3.bytes = counter - offset;
  return res;
}
var N13 = Math.pow(2, 7);
var N23 = Math.pow(2, 14);
var N33 = Math.pow(2, 21);
var N43 = Math.pow(2, 28);
var N53 = Math.pow(2, 35);
var N63 = Math.pow(2, 42);
var N73 = Math.pow(2, 49);
var N83 = Math.pow(2, 56);
var N93 = Math.pow(2, 63);
var length3 = function(value) {
  return value < N13 ? 1 : value < N23 ? 2 : value < N33 ? 3 : value < N43 ? 4 : value < N53 ? 5 : value < N63 ? 6 : value < N73 ? 7 : value < N83 ? 8 : value < N93 ? 9 : 10;
};
var varint3 = {
  encode: encode_13,
  decode: decode11,
  encodingLength: length3
};
var _brrp_varint3 = varint3;
var varint_default3 = _brrp_varint3;

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/varint.js
var decode12 = (data, offset = 0) => {
  const code5 = varint_default3.decode(data, offset);
  return [code5, varint_default3.decode.bytes];
};
var encodeTo3 = (int, target, offset = 0) => {
  varint_default3.encode(int, target, offset);
  return target;
};
var encodingLength3 = (int) => {
  return varint_default3.encodingLength(int);
};

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/hashes/digest.js
var create3 = (code5, digest4) => {
  const size = digest4.byteLength;
  const sizeOffset = encodingLength3(code5);
  const digestOffset = sizeOffset + encodingLength3(size);
  const bytes4 = new Uint8Array(digestOffset + size);
  encodeTo3(code5, bytes4, 0);
  encodeTo3(size, bytes4, sizeOffset);
  bytes4.set(digest4, digestOffset);
  return new Digest3(code5, size, digest4, bytes4);
};
var decode13 = (multihash) => {
  const bytes4 = coerce3(multihash);
  const [code5, sizeOffset] = decode12(bytes4);
  const [size, digestOffset] = decode12(bytes4.subarray(sizeOffset));
  const digest4 = bytes4.subarray(sizeOffset + digestOffset);
  if (digest4.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest3(code5, size, digest4, bytes4);
};
var equals7 = (a, b) => {
  if (a === b) {
    return true;
  } else {
    const data = (
      /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */
      b
    );
    return a.code === data.code && a.size === data.size && data.bytes instanceof Uint8Array && equals6(a.bytes, data.bytes);
  }
};
var Digest3 = class {
  /**
   * Creates a multihash digest.
   *
   * @param {Code} code
   * @param {Size} size
   * @param {Uint8Array} digest
   * @param {Uint8Array} bytes
   */
  constructor(code5, size, digest4, bytes4) {
    this.code = code5;
    this.size = size;
    this.digest = digest4;
    this.bytes = bytes4;
  }
};

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base32.js
var base32_exports3 = {};
__export(base32_exports3, {
  base32: () => base323,
  base32hex: () => base32hex3,
  base32hexpad: () => base32hexpad3,
  base32hexpadupper: () => base32hexpadupper3,
  base32hexupper: () => base32hexupper3,
  base32pad: () => base32pad3,
  base32padupper: () => base32padupper3,
  base32upper: () => base32upper3,
  base32z: () => base32z3
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/vendor/base-x.js
function base4(ALPHABET, name4) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255;
  }
  for (var i = 0; i < ALPHABET.length; i++) {
    var x = ALPHABET.charAt(i);
    var xc = x.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x + " is ambiguous");
    }
    BASE_MAP[xc] = i;
  }
  var BASE2 = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE2) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE2);
  function encode15(source) {
    if (source instanceof Uint8Array)
      ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length5 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i2 = 0;
      for (var it1 = size - 1; (carry !== 0 || i2 < length5) && it1 !== -1; it1--, i2++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE2 >>> 0;
        carry = carry / BASE2 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length5 = i2;
      pbegin++;
    }
    var it2 = size - length5;
    while (it2 !== size && b58[it2] === 0) {
      it2++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it2 < size; ++it2) {
      str += ALPHABET.charAt(b58[it2]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length5 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i2 = 0;
      for (var it3 = size - 1; (carry !== 0 || i2 < length5) && it3 !== -1; it3--, i2++) {
        carry += BASE2 * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length5 = i2;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length5;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j2 = zeroes;
    while (it4 !== size) {
      vch[j2++] = b256[it4++];
    }
    return vch;
  }
  function decode17(string4) {
    var buffer = decodeUnsafe(string4);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name4} character`);
  }
  return {
    encode: encode15,
    decodeUnsafe,
    decode: decode17
  };
}
var src3 = base4;
var _brrp__multiformats_scope_baseX3 = src3;
var base_x_default3 = _brrp__multiformats_scope_baseX3;

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base.js
var Encoder3 = class {
  /**
   * @param {Base} name
   * @param {Prefix} prefix
   * @param {(bytes:Uint8Array) => string} baseEncode
   */
  constructor(name4, prefix, baseEncode) {
    this.name = name4;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  /**
   * @param {Uint8Array} bytes
   * @returns {API.Multibase<Prefix>}
   */
  encode(bytes4) {
    if (bytes4 instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes4)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder3 = class {
  /**
   * @param {Base} name
   * @param {Prefix} prefix
   * @param {(text:string) => Uint8Array} baseDecode
   */
  constructor(name4, prefix, baseDecode) {
    this.name = name4;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = /** @type {number} */
    prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  /**
   * @param {string} text
   */
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  /**
   * @template {string} OtherPrefix
   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder
   * @returns {ComposedDecoder<Prefix|OtherPrefix>}
   */
  or(decoder) {
    return or3(this, decoder);
  }
};
var ComposedDecoder3 = class {
  /**
   * @param {Decoders<Prefix>} decoders
   */
  constructor(decoders) {
    this.decoders = decoders;
  }
  /**
   * @template {string} OtherPrefix
   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder
   * @returns {ComposedDecoder<Prefix|OtherPrefix>}
   */
  or(decoder) {
    return or3(this, decoder);
  }
  /**
   * @param {string} input
   * @returns {Uint8Array}
   */
  decode(input) {
    const prefix = (
      /** @type {Prefix} */
      input[0]
    );
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or3 = (left, right) => new ComposedDecoder3(
  /** @type {Decoders<L|R>} */
  {
    ...left.decoders || { [
      /** @type API.UnibaseDecoder<L> */
      left.prefix
    ]: left },
    ...right.decoders || { [
      /** @type API.UnibaseDecoder<R> */
      right.prefix
    ]: right }
  }
);
var Codec3 = class {
  /**
   * @param {Base} name
   * @param {Prefix} prefix
   * @param {(bytes:Uint8Array) => string} baseEncode
   * @param {(text:string) => Uint8Array} baseDecode
   */
  constructor(name4, prefix, baseEncode, baseDecode) {
    this.name = name4;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder3(name4, prefix, baseEncode);
    this.decoder = new Decoder3(name4, prefix, baseDecode);
  }
  /**
   * @param {Uint8Array} input
   */
  encode(input) {
    return this.encoder.encode(input);
  }
  /**
   * @param {string} input
   */
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from4 = ({ name: name4, prefix, encode: encode15, decode: decode17 }) => new Codec3(name4, prefix, encode15, decode17);
var baseX3 = ({ prefix, name: name4, alphabet: alphabet5 }) => {
  const { encode: encode15, decode: decode17 } = base_x_default3(alphabet5, name4);
  return from4({
    prefix,
    name: name4,
    encode: encode15,
    /**
     * @param {string} text
     */
    decode: (text) => coerce3(decode17(text))
  });
};
var decode14 = (string4, alphabet5, bitsPerChar, name4) => {
  const codes = {};
  for (let i = 0; i < alphabet5.length; ++i) {
    codes[alphabet5[i]] = i;
  }
  let end = string4.length;
  while (string4[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i = 0; i < end; ++i) {
    const value = codes[string4[i]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name4} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode9 = (data, alphabet5, bitsPerChar) => {
  const pad = alphabet5[alphabet5.length - 1] === "=";
  const mask2 = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i = 0; i < data.length; ++i) {
    buffer = buffer << 8 | data[i];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet5[mask2 & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet5[mask2 & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc46483 = ({ name: name4, prefix, bitsPerChar, alphabet: alphabet5 }) => {
  return from4({
    prefix,
    name: name4,
    encode(input) {
      return encode9(input, alphabet5, bitsPerChar);
    },
    decode(input) {
      return decode14(input, alphabet5, bitsPerChar, name4);
    }
  });
};

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base32.js
var base323 = rfc46483({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper3 = rfc46483({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad3 = rfc46483({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper3 = rfc46483({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex3 = rfc46483({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper3 = rfc46483({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad3 = rfc46483({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper3 = rfc46483({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z3 = rfc46483({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base58.js
var base58_exports3 = {};
__export(base58_exports3, {
  base58btc: () => base58btc3,
  base58flickr: () => base58flickr3
});
var base58btc3 = baseX3({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr3 = baseX3({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/cid.js
var format2 = (link, base5) => {
  const { bytes: bytes4, version: version3 } = link;
  switch (version3) {
    case 0:
      return toStringV03(
        bytes4,
        baseCache2(link),
        /** @type {API.MultibaseEncoder<"z">} */
        base5 || base58btc3.encoder
      );
    default:
      return toStringV13(
        bytes4,
        baseCache2(link),
        /** @type {API.MultibaseEncoder<Prefix>} */
        base5 || base323.encoder
      );
  }
};
var cache2 = /* @__PURE__ */ new WeakMap();
var baseCache2 = (cid) => {
  const baseCache3 = cache2.get(cid);
  if (baseCache3 == null) {
    const baseCache4 = /* @__PURE__ */ new Map();
    cache2.set(cid, baseCache4);
    return baseCache4;
  }
  return baseCache3;
};
var CID3 = class _CID {
  /**
   * @param {Version} version - Version of the CID
   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv
   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.
   * @param {Uint8Array} bytes
   */
  constructor(version3, code5, multihash, bytes4) {
    this.code = code5;
    this.version = version3;
    this.multihash = multihash;
    this.bytes = bytes4;
    this["/"] = bytes4;
  }
  /**
   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`
   * please either use `CID.asCID(cid)` or switch to new signalling mechanism
   *
   * @deprecated
   */
  get asCID() {
    return this;
  }
  // ArrayBufferView
  get byteOffset() {
    return this.bytes.byteOffset;
  }
  // ArrayBufferView
  get byteLength() {
    return this.bytes.byteLength;
  }
  /**
   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}
   */
  toV0() {
    switch (this.version) {
      case 0: {
        return (
          /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */
          this
        );
      }
      case 1: {
        const { code: code5, multihash } = this;
        if (code5 !== DAG_PB_CODE3) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE3) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return (
          /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */
          _CID.createV0(
            /** @type {API.MultihashDigest<API.SHA_256>} */
            multihash
          )
        );
      }
      default: {
        throw Error(
          `Can not convert CID version ${this.version} to version 0. This is a bug please report`
        );
      }
    }
  }
  /**
   * @returns {CID<Data, Format, Alg, 1>}
   */
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code5, digest: digest4 } = this.multihash;
        const multihash = create3(code5, digest4);
        return (
          /** @type {CID<Data, Format, Alg, 1>} */
          _CID.createV1(this.code, multihash)
        );
      }
      case 1: {
        return (
          /** @type {CID<Data, Format, Alg, 1>} */
          this
        );
      }
      default: {
        throw Error(
          `Can not convert CID version ${this.version} to version 1. This is a bug please report`
        );
      }
    }
  }
  /**
   * @param {unknown} other
   * @returns {other is CID<Data, Format, Alg, Version>}
   */
  equals(other) {
    return _CID.equals(this, other);
  }
  /**
   * @template {unknown} Data
   * @template {number} Format
   * @template {number} Alg
   * @template {API.Version} Version
   * @param {API.Link<Data, Format, Alg, Version>} self
   * @param {unknown} other
   * @returns {other is CID}
   */
  static equals(self2, other) {
    const unknown = (
      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */
      other
    );
    return unknown && self2.code === unknown.code && self2.version === unknown.version && equals7(self2.multihash, unknown.multihash);
  }
  /**
   * @param {API.MultibaseEncoder<string>} [base]
   * @returns {string}
   */
  toString(base5) {
    return format2(this, base5);
  }
  /**
   * @returns {API.LinkJSON<this>}
   */
  toJSON() {
    return { "/": format2(this) };
  }
  link() {
    return this;
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  // Legacy
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return `CID(${this.toString()})`;
  }
  /**
   * Takes any input `value` and returns a `CID` instance if it was
   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`
   * it will return value back. If `value` is not instance of this CID
   * class, but is compatible CID it will return new instance of this
   * `CID` class. Otherwise returns null.
   *
   * This allows two different incompatible versions of CID library to
   * co-exist and interop as long as binary interface is compatible.
   *
   * @template {unknown} Data
   * @template {number} Format
   * @template {number} Alg
   * @template {API.Version} Version
   * @template {unknown} U
   * @param {API.Link<Data, Format, Alg, Version>|U} input
   * @returns {CID<Data, Format, Alg, Version>|null}
   */
  static asCID(input) {
    if (input == null) {
      return null;
    }
    const value = (
      /** @type {any} */
      input
    );
    if (value instanceof _CID) {
      return value;
    } else if (value["/"] != null && value["/"] === value.bytes || value.asCID === value) {
      const { version: version3, code: code5, multihash, bytes: bytes4 } = value;
      return new _CID(
        version3,
        code5,
        /** @type {API.MultihashDigest<Alg>} */
        multihash,
        bytes4 || encodeCID3(version3, code5, multihash.bytes)
      );
    } else if (value[cidSymbol3] === true) {
      const { version: version3, multihash, code: code5 } = value;
      const digest4 = (
        /** @type {API.MultihashDigest<Alg>} */
        decode13(multihash)
      );
      return _CID.create(version3, code5, digest4);
    } else {
      return null;
    }
  }
  /**
   *
   * @template {unknown} Data
   * @template {number} Format
   * @template {number} Alg
   * @template {API.Version} Version
   * @param {Version} version - Version of the CID
   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv
   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.
   * @returns {CID<Data, Format, Alg, Version>}
   */
  static create(version3, code5, digest4) {
    if (typeof code5 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    if (!(digest4.bytes instanceof Uint8Array)) {
      throw new Error("Invalid digest");
    }
    switch (version3) {
      case 0: {
        if (code5 !== DAG_PB_CODE3) {
          throw new Error(
            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE3}) block encoding`
          );
        } else {
          return new _CID(version3, code5, digest4, digest4.bytes);
        }
      }
      case 1: {
        const bytes4 = encodeCID3(version3, code5, digest4.bytes);
        return new _CID(version3, code5, digest4, bytes4);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  /**
   * Simplified version of `create` for CIDv0.
   *
   * @template {unknown} [T=unknown]
   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.
   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}
   */
  static createV0(digest4) {
    return _CID.create(0, DAG_PB_CODE3, digest4);
  }
  /**
   * Simplified version of `create` for CIDv1.
   *
   * @template {unknown} Data
   * @template {number} Code
   * @template {number} Alg
   * @param {Code} code - Content encoding format code.
   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.
   * @returns {CID<Data, Code, Alg, 1>}
   */
  static createV1(code5, digest4) {
    return _CID.create(1, code5, digest4);
  }
  /**
   * Decoded a CID from its binary representation. The byte array must contain
   * only the CID with no additional bytes.
   *
   * An error will be thrown if the bytes provided do not contain a valid
   * binary representation of a CID.
   *
   * @template {unknown} Data
   * @template {number} Code
   * @template {number} Alg
   * @template {API.Version} Ver
   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes
   * @returns {CID<Data, Code, Alg, Ver>}
   */
  static decode(bytes4) {
    const [cid, remainder] = _CID.decodeFirst(bytes4);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  /**
   * Decoded a CID from its binary representation at the beginning of a byte
   * array.
   *
   * Returns an array with the first element containing the CID and the second
   * element containing the remainder of the original byte array. The remainder
   * will be a zero-length byte array if the provided bytes only contained a
   * binary CID representation.
   *
   * @template {unknown} T
   * @template {number} C
   * @template {number} A
   * @template {API.Version} V
   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes
   * @returns {[CID<T, C, A, V>, Uint8Array]}
   */
  static decodeFirst(bytes4) {
    const specs = _CID.inspectBytes(bytes4);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce3(
      bytes4.subarray(prefixSize, prefixSize + specs.multihashSize)
    );
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(
      specs.multihashSize - specs.digestSize
    );
    const digest4 = new Digest3(
      specs.multihashCode,
      specs.digestSize,
      digestBytes,
      multihashBytes
    );
    const cid = specs.version === 0 ? _CID.createV0(
      /** @type {API.MultihashDigest<API.SHA_256>} */
      digest4
    ) : _CID.createV1(specs.codec, digest4);
    return [
      /** @type {CID<T, C, A, V>} */
      cid,
      bytes4.subarray(specs.size)
    ];
  }
  /**
   * Inspect the initial bytes of a CID to determine its properties.
   *
   * Involves decoding up to 4 varints. Typically this will require only 4 to 6
   * bytes but for larger multicodec code values and larger multihash digest
   * lengths these varints can be quite large. It is recommended that at least
   * 10 bytes be made available in the `initialBytes` argument for a complete
   * inspection.
   *
   * @template {unknown} T
   * @template {number} C
   * @template {number} A
   * @template {API.Version} V
   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes
   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}
   */
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i, length5] = decode12(initialBytes.subarray(offset));
      offset += length5;
      return i;
    };
    let version3 = (
      /** @type {V} */
      next()
    );
    let codec = (
      /** @type {C} */
      DAG_PB_CODE3
    );
    if (
      /** @type {number} */
      version3 === 18
    ) {
      version3 = /** @type {V} */
      0;
      offset = 0;
    } else {
      codec = /** @type {C} */
      next();
    }
    if (version3 !== 0 && version3 !== 1) {
      throw new RangeError(`Invalid CID version ${version3}`);
    }
    const prefixSize = offset;
    const multihashCode = (
      /** @type {A} */
      next()
    );
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return { version: version3, codec, multihashCode, digestSize, multihashSize, size };
  }
  /**
   * Takes cid in a string representation and creates an instance. If `base`
   * decoder is not provided will use a default from the configuration. It will
   * throw an error if encoding of the CID is not compatible with supplied (or
   * a default decoder).
   *
   * @template {string} Prefix
   * @template {unknown} Data
   * @template {number} Code
   * @template {number} Alg
   * @template {API.Version} Ver
   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source
   * @param {API.MultibaseDecoder<Prefix>} [base]
   * @returns {CID<Data, Code, Alg, Ver>}
   */
  static parse(source, base5) {
    const [prefix, bytes4] = parseCIDtoBytes3(source, base5);
    const cid = _CID.decode(bytes4);
    if (cid.version === 0 && source[0] !== "Q") {
      throw Error("Version 0 CID string must not include multibase prefix");
    }
    baseCache2(cid).set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes3 = (source, base5) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base5 || base58btc3;
      return [
        /** @type {Prefix} */
        base58btc3.prefix,
        decoder.decode(`${base58btc3.prefix}${source}`)
      ];
    }
    case base58btc3.prefix: {
      const decoder = base5 || base58btc3;
      return [
        /** @type {Prefix} */
        base58btc3.prefix,
        decoder.decode(source)
      ];
    }
    case base323.prefix: {
      const decoder = base5 || base323;
      return [
        /** @type {Prefix} */
        base323.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base5 == null) {
        throw Error(
          "To parse non base32 or base58btc encoded CID multibase decoder must be provided"
        );
      }
      return [
        /** @type {Prefix} */
        source[0],
        base5.decode(source)
      ];
    }
  }
};
var toStringV03 = (bytes4, cache3, base5) => {
  const { prefix } = base5;
  if (prefix !== base58btc3.prefix) {
    throw Error(`Cannot string encode V0 in ${base5.name} encoding`);
  }
  const cid = cache3.get(prefix);
  if (cid == null) {
    const cid2 = base5.encode(bytes4).slice(1);
    cache3.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV13 = (bytes4, cache3, base5) => {
  const { prefix } = base5;
  const cid = cache3.get(prefix);
  if (cid == null) {
    const cid2 = base5.encode(bytes4);
    cache3.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE3 = 112;
var SHA_256_CODE3 = 18;
var encodeCID3 = (version3, code5, multihash) => {
  const codeOffset = encodingLength3(version3);
  const hashOffset = codeOffset + encodingLength3(code5);
  const bytes4 = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo3(version3, bytes4, 0);
  encodeTo3(code5, bytes4, codeOffset);
  bytes4.set(multihash, hashOffset);
  return bytes4;
};
var cidSymbol3 = Symbol.for("@ipld/js-cid/CID");

// node_modules/.pnpm/ipfs-unixfs@11.1.3/node_modules/ipfs-unixfs/dist/src/index.js
var import_err_code = __toESM(require_err_code(), 1);

// node_modules/.pnpm/uint8arrays@5.0.1/node_modules/uint8arrays/dist/src/util/as-uint8array.js
function asUint8Array2(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/.pnpm/uint8arrays@5.0.1/node_modules/uint8arrays/dist/src/alloc.js
function allocUnsafe2(size = 0) {
  if (globalThis.Buffer?.allocUnsafe != null) {
    return asUint8Array2(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/.pnpm/uint8-varint@2.0.4/node_modules/uint8-varint/dist/src/index.js
var N14 = Math.pow(2, 7);
var N24 = Math.pow(2, 14);
var N34 = Math.pow(2, 21);
var N44 = Math.pow(2, 28);
var N54 = Math.pow(2, 35);
var N64 = Math.pow(2, 42);
var N74 = Math.pow(2, 49);
var MSB4 = 128;
var REST4 = 127;
function encodingLength4(value) {
  if (value < N14) {
    return 1;
  }
  if (value < N24) {
    return 2;
  }
  if (value < N34) {
    return 3;
  }
  if (value < N44) {
    return 4;
  }
  if (value < N54) {
    return 5;
  }
  if (value < N64) {
    return 6;
  }
  if (value < N74) {
    return 7;
  }
  if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {
    throw new RangeError("Could not encode varint");
  }
  return 8;
}
function encodeUint8Array(value, buf, offset = 0) {
  switch (encodingLength4(value)) {
    case 8: {
      buf[offset++] = value & 255 | MSB4;
      value /= 128;
    }
    case 7: {
      buf[offset++] = value & 255 | MSB4;
      value /= 128;
    }
    case 6: {
      buf[offset++] = value & 255 | MSB4;
      value /= 128;
    }
    case 5: {
      buf[offset++] = value & 255 | MSB4;
      value /= 128;
    }
    case 4: {
      buf[offset++] = value & 255 | MSB4;
      value >>>= 7;
    }
    case 3: {
      buf[offset++] = value & 255 | MSB4;
      value >>>= 7;
    }
    case 2: {
      buf[offset++] = value & 255 | MSB4;
      value >>>= 7;
    }
    case 1: {
      buf[offset++] = value & 255;
      value >>>= 7;
      break;
    }
    default:
      throw new Error("unreachable");
  }
  return buf;
}
function decodeUint8Array(buf, offset) {
  let b = buf[offset];
  let res = 0;
  res += b & REST4;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 1];
  res += (b & REST4) << 7;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 2];
  res += (b & REST4) << 14;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 3];
  res += (b & REST4) << 21;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 4];
  res += (b & REST4) * N44;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 5];
  res += (b & REST4) * N54;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 6];
  res += (b & REST4) * N64;
  if (b < MSB4) {
    return res;
  }
  b = buf[offset + 7];
  res += (b & REST4) * N74;
  if (b < MSB4) {
    return res;
  }
  throw new RangeError("Could not decode varint");
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/utils/float.js
var f32 = new Float32Array([-0]);
var f8b = new Uint8Array(f32.buffer);
function writeFloatLE(val, buf, pos) {
  f32[0] = val;
  buf[pos] = f8b[0];
  buf[pos + 1] = f8b[1];
  buf[pos + 2] = f8b[2];
  buf[pos + 3] = f8b[3];
}
function readFloatLE(buf, pos) {
  f8b[0] = buf[pos];
  f8b[1] = buf[pos + 1];
  f8b[2] = buf[pos + 2];
  f8b[3] = buf[pos + 3];
  return f32[0];
}
var f64 = new Float64Array([-0]);
var d8b = new Uint8Array(f64.buffer);
function writeDoubleLE(val, buf, pos) {
  f64[0] = val;
  buf[pos] = d8b[0];
  buf[pos + 1] = d8b[1];
  buf[pos + 2] = d8b[2];
  buf[pos + 3] = d8b[3];
  buf[pos + 4] = d8b[4];
  buf[pos + 5] = d8b[5];
  buf[pos + 6] = d8b[6];
  buf[pos + 7] = d8b[7];
}
function readDoubleLE(buf, pos) {
  d8b[0] = buf[pos];
  d8b[1] = buf[pos + 1];
  d8b[2] = buf[pos + 2];
  d8b[3] = buf[pos + 3];
  d8b[4] = buf[pos + 4];
  d8b[5] = buf[pos + 5];
  d8b[6] = buf[pos + 6];
  d8b[7] = buf[pos + 7];
  return f64[0];
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/utils/longbits.js
var MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);
var MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER);
var LongBits = class _LongBits {
  lo;
  hi;
  constructor(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
  }
  /**
   * Converts this long bits to a possibly unsafe JavaScript number
   */
  toNumber(unsigned = false) {
    if (!unsigned && this.hi >>> 31 > 0) {
      const lo = ~this.lo + 1 >>> 0;
      let hi = ~this.hi >>> 0;
      if (lo === 0) {
        hi = hi + 1 >>> 0;
      }
      return -(lo + hi * 4294967296);
    }
    return this.lo + this.hi * 4294967296;
  }
  /**
   * Converts this long bits to a bigint
   */
  toBigInt(unsigned = false) {
    if (unsigned) {
      return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);
    }
    if (this.hi >>> 31 !== 0) {
      const lo = ~this.lo + 1 >>> 0;
      let hi = ~this.hi >>> 0;
      if (lo === 0) {
        hi = hi + 1 >>> 0;
      }
      return -(BigInt(lo) + (BigInt(hi) << 32n));
    }
    return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);
  }
  /**
   * Converts this long bits to a string
   */
  toString(unsigned = false) {
    return this.toBigInt(unsigned).toString();
  }
  /**
   * Zig-zag encodes this long bits
   */
  zzEncode() {
    const mask2 = this.hi >> 31;
    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask2) >>> 0;
    this.lo = (this.lo << 1 ^ mask2) >>> 0;
    return this;
  }
  /**
   * Zig-zag decodes this long bits
   */
  zzDecode() {
    const mask2 = -(this.lo & 1);
    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask2) >>> 0;
    this.hi = (this.hi >>> 1 ^ mask2) >>> 0;
    return this;
  }
  /**
   * Calculates the length of this longbits when encoded as a varint.
   */
  length() {
    const part0 = this.lo;
    const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0;
    const part2 = this.hi >>> 24;
    return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;
  }
  /**
   * Constructs new long bits from the specified number
   */
  static fromBigInt(value) {
    if (value === 0n) {
      return zero;
    }
    if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {
      return this.fromNumber(Number(value));
    }
    const negative = value < 0n;
    if (negative) {
      value = -value;
    }
    let hi = value >> 32n;
    let lo = value - (hi << 32n);
    if (negative) {
      hi = ~hi | 0n;
      lo = ~lo | 0n;
      if (++lo > TWO_32) {
        lo = 0n;
        if (++hi > TWO_32) {
          hi = 0n;
        }
      }
    }
    return new _LongBits(Number(lo), Number(hi));
  }
  /**
   * Constructs new long bits from the specified number
   */
  static fromNumber(value) {
    if (value === 0) {
      return zero;
    }
    const sign2 = value < 0;
    if (sign2) {
      value = -value;
    }
    let lo = value >>> 0;
    let hi = (value - lo) / 4294967296 >>> 0;
    if (sign2) {
      hi = ~hi >>> 0;
      lo = ~lo >>> 0;
      if (++lo > 4294967295) {
        lo = 0;
        if (++hi > 4294967295) {
          hi = 0;
        }
      }
    }
    return new _LongBits(lo, hi);
  }
  /**
   * Constructs new long bits from a number, long or string
   */
  static from(value) {
    if (typeof value === "number") {
      return _LongBits.fromNumber(value);
    }
    if (typeof value === "bigint") {
      return _LongBits.fromBigInt(value);
    }
    if (typeof value === "string") {
      return _LongBits.fromBigInt(BigInt(value));
    }
    return value.low != null || value.high != null ? new _LongBits(value.low >>> 0, value.high >>> 0) : zero;
  }
};
var zero = new LongBits(0, 0);
zero.toBigInt = function() {
  return 0n;
};
zero.zzEncode = zero.zzDecode = function() {
  return this;
};
zero.length = function() {
  return 1;
};
var TWO_32 = 4294967296n;

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/utils/utf8.js
function length4(string4) {
  let len = 0;
  let c = 0;
  for (let i = 0; i < string4.length; ++i) {
    c = string4.charCodeAt(i);
    if (c < 128) {
      len += 1;
    } else if (c < 2048) {
      len += 2;
    } else if ((c & 64512) === 55296 && (string4.charCodeAt(i + 1) & 64512) === 56320) {
      ++i;
      len += 4;
    } else {
      len += 3;
    }
  }
  return len;
}
function read4(buffer, start, end) {
  const len = end - start;
  if (len < 1) {
    return "";
  }
  let parts;
  const chunk = [];
  let i = 0;
  let t2;
  while (start < end) {
    t2 = buffer[start++];
    if (t2 < 128) {
      chunk[i++] = t2;
    } else if (t2 > 191 && t2 < 224) {
      chunk[i++] = (t2 & 31) << 6 | buffer[start++] & 63;
    } else if (t2 > 239 && t2 < 365) {
      t2 = ((t2 & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 65536;
      chunk[i++] = 55296 + (t2 >> 10);
      chunk[i++] = 56320 + (t2 & 1023);
    } else {
      chunk[i++] = (t2 & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
    }
    if (i > 8191) {
      (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk));
      i = 0;
    }
  }
  if (parts != null) {
    if (i > 0) {
      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
    }
    return parts.join("");
  }
  return String.fromCharCode.apply(String, chunk.slice(0, i));
}
function write(string4, buffer, offset) {
  const start = offset;
  let c1;
  let c2;
  for (let i = 0; i < string4.length; ++i) {
    c1 = string4.charCodeAt(i);
    if (c1 < 128) {
      buffer[offset++] = c1;
    } else if (c1 < 2048) {
      buffer[offset++] = c1 >> 6 | 192;
      buffer[offset++] = c1 & 63 | 128;
    } else if ((c1 & 64512) === 55296 && ((c2 = string4.charCodeAt(i + 1)) & 64512) === 56320) {
      c1 = 65536 + ((c1 & 1023) << 10) + (c2 & 1023);
      ++i;
      buffer[offset++] = c1 >> 18 | 240;
      buffer[offset++] = c1 >> 12 & 63 | 128;
      buffer[offset++] = c1 >> 6 & 63 | 128;
      buffer[offset++] = c1 & 63 | 128;
    } else {
      buffer[offset++] = c1 >> 12 | 224;
      buffer[offset++] = c1 >> 6 & 63 | 128;
      buffer[offset++] = c1 & 63 | 128;
    }
  }
  return offset - start;
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/utils/reader.js
function indexOutOfRange(reader, writeLength) {
  return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`);
}
function readFixed32End(buf, end) {
  return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;
}
var Uint8ArrayReader = class {
  buf;
  pos;
  len;
  _slice = Uint8Array.prototype.subarray;
  constructor(buffer) {
    this.buf = buffer;
    this.pos = 0;
    this.len = buffer.length;
  }
  /**
   * Reads a varint as an unsigned 32 bit value
   */
  uint32() {
    let value = 4294967295;
    value = (this.buf[this.pos] & 127) >>> 0;
    if (this.buf[this.pos++] < 128)
      return value;
    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;
    if (this.buf[this.pos++] < 128)
      return value;
    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;
    if (this.buf[this.pos++] < 128)
      return value;
    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;
    if (this.buf[this.pos++] < 128)
      return value;
    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;
    if (this.buf[this.pos++] < 128)
      return value;
    if ((this.pos += 5) > this.len) {
      this.pos = this.len;
      throw indexOutOfRange(this, 10);
    }
    return value;
  }
  /**
   * Reads a varint as a signed 32 bit value
   */
  int32() {
    return this.uint32() | 0;
  }
  /**
   * Reads a zig-zag encoded varint as a signed 32 bit value
   */
  sint32() {
    const value = this.uint32();
    return value >>> 1 ^ -(value & 1) | 0;
  }
  /**
   * Reads a varint as a boolean
   */
  bool() {
    return this.uint32() !== 0;
  }
  /**
   * Reads fixed 32 bits as an unsigned 32 bit integer
   */
  fixed32() {
    if (this.pos + 4 > this.len) {
      throw indexOutOfRange(this, 4);
    }
    const res = readFixed32End(this.buf, this.pos += 4);
    return res;
  }
  /**
   * Reads fixed 32 bits as a signed 32 bit integer
   */
  sfixed32() {
    if (this.pos + 4 > this.len) {
      throw indexOutOfRange(this, 4);
    }
    const res = readFixed32End(this.buf, this.pos += 4) | 0;
    return res;
  }
  /**
   * Reads a float (32 bit) as a number
   */
  float() {
    if (this.pos + 4 > this.len) {
      throw indexOutOfRange(this, 4);
    }
    const value = readFloatLE(this.buf, this.pos);
    this.pos += 4;
    return value;
  }
  /**
   * Reads a double (64 bit float) as a number
   */
  double() {
    if (this.pos + 8 > this.len) {
      throw indexOutOfRange(this, 4);
    }
    const value = readDoubleLE(this.buf, this.pos);
    this.pos += 8;
    return value;
  }
  /**
   * Reads a sequence of bytes preceded by its length as a varint
   */
  bytes() {
    const length5 = this.uint32();
    const start = this.pos;
    const end = this.pos + length5;
    if (end > this.len) {
      throw indexOutOfRange(this, length5);
    }
    this.pos += length5;
    return start === end ? new Uint8Array(0) : this.buf.subarray(start, end);
  }
  /**
   * Reads a string preceded by its byte length as a varint
   */
  string() {
    const bytes4 = this.bytes();
    return read4(bytes4, 0, bytes4.length);
  }
  /**
   * Skips the specified number of bytes if specified, otherwise skips a varint
   */
  skip(length5) {
    if (typeof length5 === "number") {
      if (this.pos + length5 > this.len) {
        throw indexOutOfRange(this, length5);
      }
      this.pos += length5;
    } else {
      do {
        if (this.pos >= this.len) {
          throw indexOutOfRange(this);
        }
      } while ((this.buf[this.pos++] & 128) !== 0);
    }
    return this;
  }
  /**
   * Skips the next element of the specified wire type
   */
  skipType(wireType) {
    switch (wireType) {
      case 0:
        this.skip();
        break;
      case 1:
        this.skip(8);
        break;
      case 2:
        this.skip(this.uint32());
        break;
      case 3:
        while ((wireType = this.uint32() & 7) !== 4) {
          this.skipType(wireType);
        }
        break;
      case 5:
        this.skip(4);
        break;
      default:
        throw Error(`invalid wire type ${wireType} at offset ${this.pos}`);
    }
    return this;
  }
  readLongVarint() {
    const bits = new LongBits(0, 0);
    let i = 0;
    if (this.len - this.pos > 4) {
      for (; i < 4; ++i) {
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
        if (this.buf[this.pos++] < 128) {
          return bits;
        }
      }
      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
      bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;
      if (this.buf[this.pos++] < 128) {
        return bits;
      }
      i = 0;
    } else {
      for (; i < 3; ++i) {
        if (this.pos >= this.len) {
          throw indexOutOfRange(this);
        }
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
        if (this.buf[this.pos++] < 128) {
          return bits;
        }
      }
      bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
      return bits;
    }
    if (this.len - this.pos > 4) {
      for (; i < 5; ++i) {
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
        if (this.buf[this.pos++] < 128) {
          return bits;
        }
      }
    } else {
      for (; i < 5; ++i) {
        if (this.pos >= this.len) {
          throw indexOutOfRange(this);
        }
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
        if (this.buf[this.pos++] < 128) {
          return bits;
        }
      }
    }
    throw Error("invalid varint encoding");
  }
  readFixed64() {
    if (this.pos + 8 > this.len) {
      throw indexOutOfRange(this, 8);
    }
    const lo = readFixed32End(this.buf, this.pos += 4);
    const hi = readFixed32End(this.buf, this.pos += 4);
    return new LongBits(lo, hi);
  }
  /**
   * Reads a varint as a signed 64 bit value
   */
  int64() {
    return this.readLongVarint().toBigInt();
  }
  /**
   * Reads a varint as a signed 64 bit value returned as a possibly unsafe
   * JavaScript number
   */
  int64Number() {
    return this.readLongVarint().toNumber();
  }
  /**
   * Reads a varint as a signed 64 bit value returned as a string
   */
  int64String() {
    return this.readLongVarint().toString();
  }
  /**
   * Reads a varint as an unsigned 64 bit value
   */
  uint64() {
    return this.readLongVarint().toBigInt(true);
  }
  /**
   * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe
   * JavaScript number
   */
  uint64Number() {
    const value = decodeUint8Array(this.buf, this.pos);
    this.pos += encodingLength4(value);
    return value;
  }
  /**
   * Reads a varint as an unsigned 64 bit value returned as a string
   */
  uint64String() {
    return this.readLongVarint().toString(true);
  }
  /**
   * Reads a zig-zag encoded varint as a signed 64 bit value
   */
  sint64() {
    return this.readLongVarint().zzDecode().toBigInt();
  }
  /**
   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a
   * possibly unsafe JavaScript number
   */
  sint64Number() {
    return this.readLongVarint().zzDecode().toNumber();
  }
  /**
   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a
   * string
   */
  sint64String() {
    return this.readLongVarint().zzDecode().toString();
  }
  /**
   * Reads fixed 64 bits
   */
  fixed64() {
    return this.readFixed64().toBigInt();
  }
  /**
   * Reads fixed 64 bits returned as a possibly unsafe JavaScript number
   */
  fixed64Number() {
    return this.readFixed64().toNumber();
  }
  /**
   * Reads fixed 64 bits returned as a string
   */
  fixed64String() {
    return this.readFixed64().toString();
  }
  /**
   * Reads zig-zag encoded fixed 64 bits
   */
  sfixed64() {
    return this.readFixed64().toBigInt();
  }
  /**
   * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe
   * JavaScript number
   */
  sfixed64Number() {
    return this.readFixed64().toNumber();
  }
  /**
   * Reads zig-zag encoded fixed 64 bits returned as a string
   */
  sfixed64String() {
    return this.readFixed64().toString();
  }
};
function createReader(buf) {
  return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray());
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/decode.js
function decodeMessage(buf, codec, opts) {
  const reader = createReader(buf);
  return codec.decode(reader, void 0, opts);
}

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base10.js
var base10_exports2 = {};
__export(base10_exports2, {
  base10: () => base102
});
var base102 = baseX2({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base16.js
var base16_exports2 = {};
__export(base16_exports2, {
  base16: () => base162,
  base16upper: () => base16upper2
});
var base162 = rfc46482({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper2 = rfc46482({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base2.js
var base2_exports2 = {};
__export(base2_exports2, {
  base2: () => base22
});
var base22 = rfc46482({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base256emoji.js
var base256emoji_exports2 = {};
__export(base256emoji_exports2, {
  base256emoji: () => base256emoji2
});
var alphabet3 = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}");
var alphabetBytesToChars2 = alphabet3.reduce((p, c, i) => {
  p[i] = c;
  return p;
}, []);
var alphabetCharsToBytes2 = alphabet3.reduce((p, c, i) => {
  p[c.codePointAt(0)] = i;
  return p;
}, []);
function encode10(data) {
  return data.reduce((p, c) => {
    p += alphabetBytesToChars2[c];
    return p;
  }, "");
}
function decode15(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes2[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji2 = from3({
  prefix: "\u{1F680}",
  name: "base256emoji",
  encode: encode10,
  decode: decode15
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base36.js
var base36_exports2 = {};
__export(base36_exports2, {
  base36: () => base362,
  base36upper: () => base36upper2
});
var base362 = baseX2({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper2 = baseX2({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base64.js
var base64_exports2 = {};
__export(base64_exports2, {
  base64: () => base642,
  base64pad: () => base64pad2,
  base64url: () => base64url2,
  base64urlpad: () => base64urlpad2
});
var base642 = rfc46482({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad2 = rfc46482({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url2 = rfc46482({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad2 = rfc46482({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/base8.js
var base8_exports2 = {};
__export(base8_exports2, {
  base8: () => base82
});
var base82 = rfc46482({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/bases/identity.js
var identity_exports3 = {};
__export(identity_exports3, {
  identity: () => identity3
});
var identity3 = from3({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString3(buf),
  decode: (str) => fromString3(str)
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/codecs/json.js
var textEncoder4 = new TextEncoder();
var textDecoder3 = new TextDecoder();

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/hashes/identity.js
var identity_exports4 = {};
__export(identity_exports4, {
  identity: () => identity4
});
var code2 = 0;
var name2 = "identity";
var encode11 = coerce2;
function digest2(input) {
  return create2(code2, encode11(input));
}
var identity4 = { code: code2, name: name2, encode: encode11, digest: digest2 };

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/hashes/sha2-browser.js
var sha2_browser_exports2 = {};
__export(sha2_browser_exports2, {
  sha256: () => sha2564,
  sha512: () => sha5123
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/hashes/hasher.js
function from5({ name: name4, code: code5, encode: encode15 }) {
  return new Hasher2(name4, code5, encode15);
}
var Hasher2 = class {
  name;
  code;
  encode;
  constructor(name4, code5, encode15) {
    this.name = name4;
    this.code = code5;
    this.encode = encode15;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create2(this.code, result) : result.then((digest4) => create2(this.code, digest4));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/hashes/sha2-browser.js
function sha2(name4) {
  return async (data) => new Uint8Array(await crypto.subtle.digest(name4, data));
}
var sha2564 = from5({
  name: "sha2-256",
  code: 18,
  encode: sha2("SHA-256")
});
var sha5123 = from5({
  name: "sha2-512",
  code: 19,
  encode: sha2("SHA-512")
});

// node_modules/.pnpm/multiformats@13.0.1/node_modules/multiformats/dist/src/basics.js
var bases2 = { ...identity_exports3, ...base2_exports2, ...base8_exports2, ...base10_exports2, ...base16_exports2, ...base32_exports2, ...base36_exports2, ...base58_exports2, ...base64_exports2, ...base256emoji_exports2 };
var hashes2 = { ...sha2_browser_exports2, ...identity_exports4 };

// node_modules/.pnpm/uint8arrays@5.0.1/node_modules/uint8arrays/dist/src/util/bases.js
function createCodec2(name4, prefix, encode15, decode17) {
  return {
    name: name4,
    prefix,
    encoder: {
      name: name4,
      prefix,
      encode: encode15
    },
    decoder: {
      decode: decode17
    }
  };
}
var string2 = createCodec2("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii2 = createCodec2("ascii", "a", (buf) => {
  let string4 = "a";
  for (let i = 0; i < buf.length; i++) {
    string4 += String.fromCharCode(buf[i]);
  }
  return string4;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe2(str.length);
  for (let i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
var BASES2 = {
  utf8: string2,
  "utf-8": string2,
  hex: bases2.base16,
  latin1: ascii2,
  ascii: ascii2,
  binary: ascii2,
  ...bases2
};
var bases_default2 = BASES2;

// node_modules/.pnpm/uint8arrays@5.0.1/node_modules/uint8arrays/dist/src/from-string.js
function fromString5(string4, encoding = "utf8") {
  const base5 = bases_default2[encoding];
  if (base5 == null) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array2(globalThis.Buffer.from(string4, "utf-8"));
  }
  return base5.decoder.decode(`${base5.prefix}${string4}`);
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/utils/pool.js
function pool(size) {
  const SIZE = size ?? 8192;
  const MAX = SIZE >>> 1;
  let slab;
  let offset = SIZE;
  return function poolAlloc(size2) {
    if (size2 < 1 || size2 > MAX) {
      return allocUnsafe2(size2);
    }
    if (offset + size2 > SIZE) {
      slab = allocUnsafe2(SIZE);
      offset = 0;
    }
    const buf = slab.subarray(offset, offset += size2);
    if ((offset & 7) !== 0) {
      offset = (offset | 7) + 1;
    }
    return buf;
  };
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/utils/writer.js
var Op = class {
  /**
   * Function to call
   */
  fn;
  /**
   * Value byte length
   */
  len;
  /**
   * Next operation
   */
  next;
  /**
   * Value to write
   */
  val;
  constructor(fn, len, val) {
    this.fn = fn;
    this.len = len;
    this.next = void 0;
    this.val = val;
  }
};
function noop() {
}
var State = class {
  /**
   * Current head
   */
  head;
  /**
   * Current tail
   */
  tail;
  /**
   * Current buffer length
   */
  len;
  /**
   * Next state
   */
  next;
  constructor(writer) {
    this.head = writer.head;
    this.tail = writer.tail;
    this.len = writer.len;
    this.next = writer.states;
  }
};
var bufferPool = pool();
function alloc(size) {
  if (globalThis.Buffer != null) {
    return allocUnsafe2(size);
  }
  return bufferPool(size);
}
var Uint8ArrayWriter = class {
  /**
   * Current length
   */
  len;
  /**
   * Operations head
   */
  head;
  /**
   * Operations tail
   */
  tail;
  /**
   * Linked forked states
   */
  states;
  constructor() {
    this.len = 0;
    this.head = new Op(noop, 0, 0);
    this.tail = this.head;
    this.states = null;
  }
  /**
   * Pushes a new operation to the queue
   */
  _push(fn, len, val) {
    this.tail = this.tail.next = new Op(fn, len, val);
    this.len += len;
    return this;
  }
  /**
   * Writes an unsigned 32 bit value as a varint
   */
  uint32(value) {
    this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;
    return this;
  }
  /**
   * Writes a signed 32 bit value as a varint`
   */
  int32(value) {
    return value < 0 ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) : this.uint32(value);
  }
  /**
   * Writes a 32 bit value as a varint, zig-zag encoded
   */
  sint32(value) {
    return this.uint32((value << 1 ^ value >> 31) >>> 0);
  }
  /**
   * Writes an unsigned 64 bit value as a varint
   */
  uint64(value) {
    const bits = LongBits.fromBigInt(value);
    return this._push(writeVarint64, bits.length(), bits);
  }
  /**
   * Writes an unsigned 64 bit value as a varint
   */
  uint64Number(value) {
    return this._push(encodeUint8Array, encodingLength4(value), value);
  }
  /**
   * Writes an unsigned 64 bit value as a varint
   */
  uint64String(value) {
    return this.uint64(BigInt(value));
  }
  /**
   * Writes a signed 64 bit value as a varint
   */
  int64(value) {
    return this.uint64(value);
  }
  /**
   * Writes a signed 64 bit value as a varint
   */
  int64Number(value) {
    return this.uint64Number(value);
  }
  /**
   * Writes a signed 64 bit value as a varint
   */
  int64String(value) {
    return this.uint64String(value);
  }
  /**
   * Writes a signed 64 bit value as a varint, zig-zag encoded
   */
  sint64(value) {
    const bits = LongBits.fromBigInt(value).zzEncode();
    return this._push(writeVarint64, bits.length(), bits);
  }
  /**
   * Writes a signed 64 bit value as a varint, zig-zag encoded
   */
  sint64Number(value) {
    const bits = LongBits.fromNumber(value).zzEncode();
    return this._push(writeVarint64, bits.length(), bits);
  }
  /**
   * Writes a signed 64 bit value as a varint, zig-zag encoded
   */
  sint64String(value) {
    return this.sint64(BigInt(value));
  }
  /**
   * Writes a boolish value as a varint
   */
  bool(value) {
    return this._push(writeByte, 1, value ? 1 : 0);
  }
  /**
   * Writes an unsigned 32 bit value as fixed 32 bits
   */
  fixed32(value) {
    return this._push(writeFixed32, 4, value >>> 0);
  }
  /**
   * Writes a signed 32 bit value as fixed 32 bits
   */
  sfixed32(value) {
    return this.fixed32(value);
  }
  /**
   * Writes an unsigned 64 bit value as fixed 64 bits
   */
  fixed64(value) {
    const bits = LongBits.fromBigInt(value);
    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
  }
  /**
   * Writes an unsigned 64 bit value as fixed 64 bits
   */
  fixed64Number(value) {
    const bits = LongBits.fromNumber(value);
    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
  }
  /**
   * Writes an unsigned 64 bit value as fixed 64 bits
   */
  fixed64String(value) {
    return this.fixed64(BigInt(value));
  }
  /**
   * Writes a signed 64 bit value as fixed 64 bits
   */
  sfixed64(value) {
    return this.fixed64(value);
  }
  /**
   * Writes a signed 64 bit value as fixed 64 bits
   */
  sfixed64Number(value) {
    return this.fixed64Number(value);
  }
  /**
   * Writes a signed 64 bit value as fixed 64 bits
   */
  sfixed64String(value) {
    return this.fixed64String(value);
  }
  /**
   * Writes a float (32 bit)
   */
  float(value) {
    return this._push(writeFloatLE, 4, value);
  }
  /**
   * Writes a double (64 bit float).
   *
   * @function
   * @param {number} value - Value to write
   * @returns {Writer} `this`
   */
  double(value) {
    return this._push(writeDoubleLE, 8, value);
  }
  /**
   * Writes a sequence of bytes
   */
  bytes(value) {
    const len = value.length >>> 0;
    if (len === 0) {
      return this._push(writeByte, 1, 0);
    }
    return this.uint32(len)._push(writeBytes, len, value);
  }
  /**
   * Writes a string
   */
  string(value) {
    const len = length4(value);
    return len !== 0 ? this.uint32(len)._push(write, len, value) : this._push(writeByte, 1, 0);
  }
  /**
   * Forks this writer's state by pushing it to a stack.
   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
   */
  fork() {
    this.states = new State(this);
    this.head = this.tail = new Op(noop, 0, 0);
    this.len = 0;
    return this;
  }
  /**
   * Resets this instance to the last state
   */
  reset() {
    if (this.states != null) {
      this.head = this.states.head;
      this.tail = this.states.tail;
      this.len = this.states.len;
      this.states = this.states.next;
    } else {
      this.head = this.tail = new Op(noop, 0, 0);
      this.len = 0;
    }
    return this;
  }
  /**
   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
   */
  ldelim() {
    const head = this.head;
    const tail = this.tail;
    const len = this.len;
    this.reset().uint32(len);
    if (len !== 0) {
      this.tail.next = head.next;
      this.tail = tail;
      this.len += len;
    }
    return this;
  }
  /**
   * Finishes the write operation
   */
  finish() {
    let head = this.head.next;
    const buf = alloc(this.len);
    let pos = 0;
    while (head != null) {
      head.fn(head.val, buf, pos);
      pos += head.len;
      head = head.next;
    }
    return buf;
  }
};
function writeByte(val, buf, pos) {
  buf[pos] = val & 255;
}
function writeVarint32(val, buf, pos) {
  while (val > 127) {
    buf[pos++] = val & 127 | 128;
    val >>>= 7;
  }
  buf[pos] = val;
}
var VarintOp = class extends Op {
  next;
  constructor(len, val) {
    super(writeVarint32, len, val);
    this.next = void 0;
  }
};
function writeVarint64(val, buf, pos) {
  while (val.hi !== 0) {
    buf[pos++] = val.lo & 127 | 128;
    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
    val.hi >>>= 7;
  }
  while (val.lo > 127) {
    buf[pos++] = val.lo & 127 | 128;
    val.lo = val.lo >>> 7;
  }
  buf[pos++] = val.lo;
}
function writeFixed32(val, buf, pos) {
  buf[pos] = val & 255;
  buf[pos + 1] = val >>> 8 & 255;
  buf[pos + 2] = val >>> 16 & 255;
  buf[pos + 3] = val >>> 24;
}
function writeBytes(val, buf, pos) {
  buf.set(val, pos);
}
if (globalThis.Buffer != null) {
  Uint8ArrayWriter.prototype.bytes = function(value) {
    const len = value.length >>> 0;
    this.uint32(len);
    if (len > 0) {
      this._push(writeBytesBuffer, len, value);
    }
    return this;
  };
  Uint8ArrayWriter.prototype.string = function(value) {
    const len = globalThis.Buffer.byteLength(value);
    this.uint32(len);
    if (len > 0) {
      this._push(writeStringBuffer, len, value);
    }
    return this;
  };
}
function writeBytesBuffer(val, buf, pos) {
  buf.set(val, pos);
}
function writeStringBuffer(val, buf, pos) {
  if (val.length < 40) {
    write(val, buf, pos);
  } else if (buf.utf8Write != null) {
    buf.utf8Write(val, pos);
  } else {
    buf.set(fromString5(val), pos);
  }
}
function createWriter() {
  return new Uint8ArrayWriter();
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/encode.js
function encodeMessage(message2, codec) {
  const w = createWriter();
  codec.encode(message2, w, {
    lengthDelimited: false
  });
  return w.finish();
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/codec.js
var CODEC_TYPES;
(function(CODEC_TYPES2) {
  CODEC_TYPES2[CODEC_TYPES2["VARINT"] = 0] = "VARINT";
  CODEC_TYPES2[CODEC_TYPES2["BIT64"] = 1] = "BIT64";
  CODEC_TYPES2[CODEC_TYPES2["LENGTH_DELIMITED"] = 2] = "LENGTH_DELIMITED";
  CODEC_TYPES2[CODEC_TYPES2["START_GROUP"] = 3] = "START_GROUP";
  CODEC_TYPES2[CODEC_TYPES2["END_GROUP"] = 4] = "END_GROUP";
  CODEC_TYPES2[CODEC_TYPES2["BIT32"] = 5] = "BIT32";
})(CODEC_TYPES || (CODEC_TYPES = {}));
function createCodec3(name4, type, encode15, decode17) {
  return {
    name: name4,
    type,
    encode: encode15,
    decode: decode17
  };
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/codecs/enum.js
function enumeration(v) {
  function findValue(val) {
    if (v[val.toString()] == null) {
      throw new Error("Invalid enum value");
    }
    return v[val];
  }
  const encode15 = function enumEncode(val, writer) {
    const enumValue = findValue(val);
    writer.int32(enumValue);
  };
  const decode17 = function enumDecode(reader) {
    const val = reader.int32();
    return findValue(val);
  };
  return createCodec3("enum", CODEC_TYPES.VARINT, encode15, decode17);
}

// node_modules/.pnpm/protons-runtime@5.4.0/node_modules/protons-runtime/dist/src/codecs/message.js
function message(encode15, decode17) {
  return createCodec3("message", CODEC_TYPES.LENGTH_DELIMITED, encode15, decode17);
}

// node_modules/.pnpm/ipfs-unixfs@11.1.3/node_modules/ipfs-unixfs/dist/src/unixfs.js
var Data;
(function(Data2) {
  let DataType;
  (function(DataType2) {
    DataType2["Raw"] = "Raw";
    DataType2["Directory"] = "Directory";
    DataType2["File"] = "File";
    DataType2["Metadata"] = "Metadata";
    DataType2["Symlink"] = "Symlink";
    DataType2["HAMTShard"] = "HAMTShard";
  })(DataType = Data2.DataType || (Data2.DataType = {}));
  let __DataTypeValues;
  (function(__DataTypeValues2) {
    __DataTypeValues2[__DataTypeValues2["Raw"] = 0] = "Raw";
    __DataTypeValues2[__DataTypeValues2["Directory"] = 1] = "Directory";
    __DataTypeValues2[__DataTypeValues2["File"] = 2] = "File";
    __DataTypeValues2[__DataTypeValues2["Metadata"] = 3] = "Metadata";
    __DataTypeValues2[__DataTypeValues2["Symlink"] = 4] = "Symlink";
    __DataTypeValues2[__DataTypeValues2["HAMTShard"] = 5] = "HAMTShard";
  })(__DataTypeValues || (__DataTypeValues = {}));
  (function(DataType2) {
    DataType2.codec = () => {
      return enumeration(__DataTypeValues);
    };
  })(DataType = Data2.DataType || (Data2.DataType = {}));
  let _codec;
  Data2.codec = () => {
    if (_codec == null) {
      _codec = message((obj, w, opts = {}) => {
        if (opts.lengthDelimited !== false) {
          w.fork();
        }
        if (obj.Type != null) {
          w.uint32(8);
          Data2.DataType.codec().encode(obj.Type, w);
        }
        if (obj.Data != null) {
          w.uint32(18);
          w.bytes(obj.Data);
        }
        if (obj.filesize != null) {
          w.uint32(24);
          w.uint64(obj.filesize);
        }
        if (obj.blocksizes != null) {
          for (const value of obj.blocksizes) {
            w.uint32(32);
            w.uint64(value);
          }
        }
        if (obj.hashType != null) {
          w.uint32(40);
          w.uint64(obj.hashType);
        }
        if (obj.fanout != null) {
          w.uint32(48);
          w.uint64(obj.fanout);
        }
        if (obj.mode != null) {
          w.uint32(56);
          w.uint32(obj.mode);
        }
        if (obj.mtime != null) {
          w.uint32(66);
          UnixTime.codec().encode(obj.mtime, w);
        }
        if (opts.lengthDelimited !== false) {
          w.ldelim();
        }
      }, (reader, length5) => {
        const obj = {
          blocksizes: []
        };
        const end = length5 == null ? reader.len : reader.pos + length5;
        while (reader.pos < end) {
          const tag2 = reader.uint32();
          switch (tag2 >>> 3) {
            case 1:
              obj.Type = Data2.DataType.codec().decode(reader);
              break;
            case 2:
              obj.Data = reader.bytes();
              break;
            case 3:
              obj.filesize = reader.uint64();
              break;
            case 4:
              obj.blocksizes.push(reader.uint64());
              break;
            case 5:
              obj.hashType = reader.uint64();
              break;
            case 6:
              obj.fanout = reader.uint64();
              break;
            case 7:
              obj.mode = reader.uint32();
              break;
            case 8:
              obj.mtime = UnixTime.codec().decode(reader, reader.uint32());
              break;
            default:
              reader.skipType(tag2 & 7);
              break;
          }
        }
        return obj;
      });
    }
    return _codec;
  };
  Data2.encode = (obj) => {
    return encodeMessage(obj, Data2.codec());
  };
  Data2.decode = (buf) => {
    return decodeMessage(buf, Data2.codec());
  };
})(Data || (Data = {}));
var UnixTime;
(function(UnixTime2) {
  let _codec;
  UnixTime2.codec = () => {
    if (_codec == null) {
      _codec = message((obj, w, opts = {}) => {
        if (opts.lengthDelimited !== false) {
          w.fork();
        }
        if (obj.Seconds != null) {
          w.uint32(8);
          w.int64(obj.Seconds);
        }
        if (obj.FractionalNanoseconds != null) {
          w.uint32(21);
          w.fixed32(obj.FractionalNanoseconds);
        }
        if (opts.lengthDelimited !== false) {
          w.ldelim();
        }
      }, (reader, length5) => {
        const obj = {};
        const end = length5 == null ? reader.len : reader.pos + length5;
        while (reader.pos < end) {
          const tag2 = reader.uint32();
          switch (tag2 >>> 3) {
            case 1:
              obj.Seconds = reader.int64();
              break;
            case 2:
              obj.FractionalNanoseconds = reader.fixed32();
              break;
            default:
              reader.skipType(tag2 & 7);
              break;
          }
        }
        return obj;
      });
    }
    return _codec;
  };
  UnixTime2.encode = (obj) => {
    return encodeMessage(obj, UnixTime2.codec());
  };
  UnixTime2.decode = (buf) => {
    return decodeMessage(buf, UnixTime2.codec());
  };
})(UnixTime || (UnixTime = {}));
var Metadata;
(function(Metadata2) {
  let _codec;
  Metadata2.codec = () => {
    if (_codec == null) {
      _codec = message((obj, w, opts = {}) => {
        if (opts.lengthDelimited !== false) {
          w.fork();
        }
        if (obj.MimeType != null) {
          w.uint32(10);
          w.string(obj.MimeType);
        }
        if (opts.lengthDelimited !== false) {
          w.ldelim();
        }
      }, (reader, length5) => {
        const obj = {};
        const end = length5 == null ? reader.len : reader.pos + length5;
        while (reader.pos < end) {
          const tag2 = reader.uint32();
          switch (tag2 >>> 3) {
            case 1:
              obj.MimeType = reader.string();
              break;
            default:
              reader.skipType(tag2 & 7);
              break;
          }
        }
        return obj;
      });
    }
    return _codec;
  };
  Metadata2.encode = (obj) => {
    return encodeMessage(obj, Metadata2.codec());
  };
  Metadata2.decode = (buf) => {
    return decodeMessage(buf, Metadata2.codec());
  };
})(Metadata || (Metadata = {}));

// node_modules/.pnpm/ipfs-unixfs@11.1.3/node_modules/ipfs-unixfs/dist/src/index.js
var DEFAULT_FILE_MODE = parseInt("0644", 8);
var DEFAULT_DIRECTORY_MODE = parseInt("0755", 8);

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_assert.js
function number3(n2) {
  if (!Number.isSafeInteger(n2) || n2 < 0)
    throw new Error(`Wrong positive integer: ${n2}`);
}
function bytes3(b, ...lengths) {
  if (!(b instanceof Uint8Array))
    throw new Error("Expected Uint8Array");
  if (lengths.length > 0 && !lengths.includes(b.length))
    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);
}
function hash2(hash3) {
  if (typeof hash3 !== "function" || typeof hash3.create !== "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  number3(hash3.outputLen);
  number3(hash3.blockLen);
}
function exists3(instance, checkFinished = true) {
  if (instance.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (checkFinished && instance.finished)
    throw new Error("Hash#digest() has already been called");
}
function output3(out, instance) {
  bytes3(out);
  const min2 = instance.outputLen;
  if (out.length < min2) {
    throw new Error(`digestInto() expects output buffer of length at least ${min2}`);
  }
}

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/crypto.js
var crypto3 = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : void 0;

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/utils.js
var u8a2 = (a) => a instanceof Uint8Array;
var u323 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
var createView3 = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
var rotr2 = (word, shift) => word << 32 - shift | word >>> shift;
var isLE3 = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!isLE3)
  throw new Error("Non little-endian hardware is not supported");
function utf8ToBytes4(str) {
  if (typeof str !== "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
  return new Uint8Array(new TextEncoder().encode(str));
}
function toBytes3(data) {
  if (typeof data === "string")
    data = utf8ToBytes4(data);
  if (!u8a2(data))
    throw new Error(`expected Uint8Array, got ${typeof data}`);
  return data;
}
function concatBytes3(...arrays) {
  const r2 = new Uint8Array(arrays.reduce((sum2, a) => sum2 + a.length, 0));
  let pad = 0;
  arrays.forEach((a) => {
    if (!u8a2(a))
      throw new Error("Uint8Array expected");
    r2.set(a, pad);
    pad += a.length;
  });
  return r2;
}
var Hash2 = class {
  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }
};
var toStr2 = {}.toString;
function wrapConstructor2(hashCons) {
  const hashC = (msg) => hashCons().update(toBytes3(msg)).digest();
  const tmp = hashCons();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = () => hashCons();
  return hashC;
}
function wrapXOFConstructorWithOpts2(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes3(msg)).digest();
  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = (opts) => hashCons(opts);
  return hashC;
}
function randomBytes2(bytesLength = 32) {
  if (crypto3 && typeof crypto3.getRandomValues === "function") {
    return crypto3.getRandomValues(new Uint8Array(bytesLength));
  }
  throw new Error("crypto.getRandomValues must be defined");
}

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_sha2.js
function setBigUint643(view, byteOffset, value, isLE4) {
  if (typeof view.setBigUint64 === "function")
    return view.setBigUint64(byteOffset, value, isLE4);
  const _32n3 = BigInt(32);
  const _u32_max = BigInt(4294967295);
  const wh = Number(value >> _32n3 & _u32_max);
  const wl = Number(value & _u32_max);
  const h = isLE4 ? 4 : 0;
  const l = isLE4 ? 0 : 4;
  view.setUint32(byteOffset + h, wh, isLE4);
  view.setUint32(byteOffset + l, wl, isLE4);
}
var SHA22 = class extends Hash2 {
  constructor(blockLen, outputLen, padOffset, isLE4) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.padOffset = padOffset;
    this.isLE = isLE4;
    this.finished = false;
    this.length = 0;
    this.pos = 0;
    this.destroyed = false;
    this.buffer = new Uint8Array(blockLen);
    this.view = createView3(this.buffer);
  }
  update(data) {
    exists3(this);
    const { view, buffer, blockLen } = this;
    data = toBytes3(data);
    const len = data.length;
    for (let pos = 0; pos < len; ) {
      const take = Math.min(blockLen - this.pos, len - pos);
      if (take === blockLen) {
        const dataView = createView3(data);
        for (; blockLen <= len - pos; pos += blockLen)
          this.process(dataView, pos);
        continue;
      }
      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      pos += take;
      if (this.pos === blockLen) {
        this.process(view, 0);
        this.pos = 0;
      }
    }
    this.length += data.length;
    this.roundClean();
    return this;
  }
  digestInto(out) {
    exists3(this);
    output3(out, this);
    this.finished = true;
    const { buffer, view, blockLen, isLE: isLE4 } = this;
    let { pos } = this;
    buffer[pos++] = 128;
    this.buffer.subarray(pos).fill(0);
    if (this.padOffset > blockLen - pos) {
      this.process(view, 0);
      pos = 0;
    }
    for (let i = pos; i < blockLen; i++)
      buffer[i] = 0;
    setBigUint643(view, blockLen - 8, BigInt(this.length * 8), isLE4);
    this.process(view, 0);
    const oview = createView3(out);
    const len = this.outputLen;
    if (len % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const outLen = len / 4;
    const state = this.get();
    if (outLen > state.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let i = 0; i < outLen; i++)
      oview.setUint32(4 * i, state[i], isLE4);
  }
  digest() {
    const { buffer, outputLen } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }
  _cloneInto(to) {
    to || (to = new this.constructor());
    to.set(...this.get());
    const { blockLen, buffer, length: length5, finished, destroyed, pos } = this;
    to.length = length5;
    to.pos = pos;
    to.finished = finished;
    to.destroyed = destroyed;
    if (length5 % blockLen)
      to.buffer.set(buffer);
    return to;
  }
};

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha256.js
var Chi2 = (a, b, c) => a & b ^ ~a & c;
var Maj2 = (a, b, c) => a & b ^ a & c ^ b & c;
var SHA256_K2 = /* @__PURE__ */ new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]);
var IV2 = /* @__PURE__ */ new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]);
var SHA256_W2 = /* @__PURE__ */ new Uint32Array(64);
var SHA2562 = class extends SHA22 {
  constructor() {
    super(64, 32, 8, false);
    this.A = IV2[0] | 0;
    this.B = IV2[1] | 0;
    this.C = IV2[2] | 0;
    this.D = IV2[3] | 0;
    this.E = IV2[4] | 0;
    this.F = IV2[5] | 0;
    this.G = IV2[6] | 0;
    this.H = IV2[7] | 0;
  }
  get() {
    const { A, B, C, D, E, F, G, H } = this;
    return [A, B, C, D, E, F, G, H];
  }
  // prettier-ignore
  set(A, B, C, D, E, F, G, H) {
    this.A = A | 0;
    this.B = B | 0;
    this.C = C | 0;
    this.D = D | 0;
    this.E = E | 0;
    this.F = F | 0;
    this.G = G | 0;
    this.H = H | 0;
  }
  process(view, offset) {
    for (let i = 0; i < 16; i++, offset += 4)
      SHA256_W2[i] = view.getUint32(offset, false);
    for (let i = 16; i < 64; i++) {
      const W15 = SHA256_W2[i - 15];
      const W2 = SHA256_W2[i - 2];
      const s0 = rotr2(W15, 7) ^ rotr2(W15, 18) ^ W15 >>> 3;
      const s1 = rotr2(W2, 17) ^ rotr2(W2, 19) ^ W2 >>> 10;
      SHA256_W2[i] = s1 + SHA256_W2[i - 7] + s0 + SHA256_W2[i - 16] | 0;
    }
    let { A, B, C, D, E, F, G, H } = this;
    for (let i = 0; i < 64; i++) {
      const sigma1 = rotr2(E, 6) ^ rotr2(E, 11) ^ rotr2(E, 25);
      const T1 = H + sigma1 + Chi2(E, F, G) + SHA256_K2[i] + SHA256_W2[i] | 0;
      const sigma0 = rotr2(A, 2) ^ rotr2(A, 13) ^ rotr2(A, 22);
      const T2 = sigma0 + Maj2(A, B, C) | 0;
      H = G;
      G = F;
      F = E;
      E = D + T1 | 0;
      D = C;
      C = B;
      B = A;
      A = T1 + T2 | 0;
    }
    A = A + this.A | 0;
    B = B + this.B | 0;
    C = C + this.C | 0;
    D = D + this.D | 0;
    E = E + this.E | 0;
    F = F + this.F | 0;
    G = G + this.G | 0;
    H = H + this.H | 0;
    this.set(A, B, C, D, E, F, G, H);
  }
  roundClean() {
    SHA256_W2.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0);
    this.buffer.fill(0);
  }
};
var sha2565 = /* @__PURE__ */ wrapConstructor2(() => new SHA2562());

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/_version.js
var version2 = "6.10.0";

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/utils/properties.js
function checkType(value, type, name4) {
  const types = type.split("|").map((t2) => t2.trim());
  for (let i = 0; i < types.length; i++) {
    switch (type) {
      case "any":
        return;
      case "bigint":
      case "boolean":
      case "number":
      case "string":
        if (typeof value === type) {
          return;
        }
    }
  }
  const error = new Error(`invalid value for type ${type}`);
  error.code = "INVALID_ARGUMENT";
  error.argument = `value.${name4}`;
  error.value = value;
  throw error;
}
function defineProperties(target, values, types) {
  for (let key in values) {
    let value = values[key];
    const type = types ? types[key] : null;
    if (type) {
      checkType(value, type, key);
    }
    Object.defineProperty(target, key, { enumerable: true, value, writable: false });
  }
}

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/utils/errors.js
function stringify(value) {
  if (value == null) {
    return "null";
  }
  if (Array.isArray(value)) {
    return "[ " + value.map(stringify).join(", ") + " ]";
  }
  if (value instanceof Uint8Array) {
    const HEX = "0123456789abcdef";
    let result = "0x";
    for (let i = 0; i < value.length; i++) {
      result += HEX[value[i] >> 4];
      result += HEX[value[i] & 15];
    }
    return result;
  }
  if (typeof value === "object" && typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  switch (typeof value) {
    case "boolean":
    case "symbol":
      return value.toString();
    case "bigint":
      return BigInt(value).toString();
    case "number":
      return value.toString();
    case "string":
      return JSON.stringify(value);
    case "object": {
      const keys = Object.keys(value);
      keys.sort();
      return "{ " + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(", ") + " }";
    }
  }
  return `[ COULD NOT SERIALIZE ]`;
}
function makeError(message2, code5, info) {
  let shortMessage = message2;
  {
    const details = [];
    if (info) {
      if ("message" in info || "code" in info || "name" in info) {
        throw new Error(`value will overwrite populated values: ${stringify(info)}`);
      }
      for (const key in info) {
        if (key === "shortMessage") {
          continue;
        }
        const value = info[key];
        details.push(key + "=" + stringify(value));
      }
    }
    details.push(`code=${code5}`);
    details.push(`version=${version2}`);
    if (details.length) {
      message2 += " (" + details.join(", ") + ")";
    }
  }
  let error;
  switch (code5) {
    case "INVALID_ARGUMENT":
      error = new TypeError(message2);
      break;
    case "NUMERIC_FAULT":
    case "BUFFER_OVERRUN":
      error = new RangeError(message2);
      break;
    default:
      error = new Error(message2);
  }
  defineProperties(error, { code: code5 });
  if (info) {
    Object.assign(error, info);
  }
  if (error.shortMessage == null) {
    defineProperties(error, { shortMessage });
  }
  return error;
}
function assert(check, message2, code5, info) {
  if (!check) {
    throw makeError(message2, code5, info);
  }
}
function assertArgument(check, message2, name4, value) {
  assert(check, message2, "INVALID_ARGUMENT", { argument: name4, value });
}
var _normalizeForms = ["NFD", "NFC", "NFKD", "NFKC"].reduce((accum, form) => {
  try {
    if ("test".normalize(form) !== "test") {
      throw new Error("bad");
    }
    ;
    if (form === "NFD") {
      const check = String.fromCharCode(233).normalize("NFD");
      const expected = String.fromCharCode(101, 769);
      if (check !== expected) {
        throw new Error("broken");
      }
    }
    accum.push(form);
  } catch (error) {
  }
  return accum;
}, []);
function assertPrivate(givenGuard, guard, className) {
  if (className == null) {
    className = "";
  }
  if (givenGuard !== guard) {
    let method = className, operation = "new";
    if (className) {
      method += ".";
      operation += " " + className;
    }
    assert(false, `private constructor; use ${method}from* methods`, "UNSUPPORTED_OPERATION", {
      operation
    });
  }
}

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/utils/data.js
function _getBytes(value, name4, copy) {
  if (value instanceof Uint8Array) {
    if (copy) {
      return new Uint8Array(value);
    }
    return value;
  }
  if (typeof value === "string" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {
    const result = new Uint8Array((value.length - 2) / 2);
    let offset = 2;
    for (let i = 0; i < result.length; i++) {
      result[i] = parseInt(value.substring(offset, offset + 2), 16);
      offset += 2;
    }
    return result;
  }
  assertArgument(false, "invalid BytesLike value", name4 || "value", value);
}
function getBytes(value, name4) {
  return _getBytes(value, name4, false);
}
function getBytesCopy(value, name4) {
  return _getBytes(value, name4, true);
}
function isHexString(value, length5) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (typeof length5 === "number" && value.length !== 2 + 2 * length5) {
    return false;
  }
  if (length5 === true && value.length % 2 !== 0) {
    return false;
  }
  return true;
}
var HexCharacters = "0123456789abcdef";
function hexlify(data) {
  const bytes4 = getBytes(data);
  let result = "0x";
  for (let i = 0; i < bytes4.length; i++) {
    const v = bytes4[i];
    result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];
  }
  return result;
}
function concat2(datas) {
  return "0x" + datas.map((d) => hexlify(d).substring(2)).join("");
}
function dataLength(data) {
  if (isHexString(data, true)) {
    return (data.length - 2) / 2;
  }
  return getBytes(data).length;
}
function zeroPad(data, length5, left) {
  const bytes4 = getBytes(data);
  assert(length5 >= bytes4.length, "padding exceeds data length", "BUFFER_OVERRUN", {
    buffer: new Uint8Array(bytes4),
    length: length5,
    offset: length5 + 1
  });
  const result = new Uint8Array(length5);
  result.fill(0);
  if (left) {
    result.set(bytes4, length5 - bytes4.length);
  } else {
    result.set(bytes4, 0);
  }
  return hexlify(result);
}
function zeroPadValue(data, length5) {
  return zeroPad(data, length5, true);
}

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/utils/maths.js
var BN_0 = BigInt(0);
var BN_1 = BigInt(1);
var maxValue = 9007199254740991;
function getBigInt(value, name4) {
  switch (typeof value) {
    case "bigint":
      return value;
    case "number":
      assertArgument(Number.isInteger(value), "underflow", name4 || "value", value);
      assertArgument(value >= -maxValue && value <= maxValue, "overflow", name4 || "value", value);
      return BigInt(value);
    case "string":
      try {
        if (value === "") {
          throw new Error("empty string");
        }
        if (value[0] === "-" && value[1] !== "-") {
          return -BigInt(value.substring(1));
        }
        return BigInt(value);
      } catch (e2) {
        assertArgument(false, `invalid BigNumberish string: ${e2.message}`, name4 || "value", value);
      }
  }
  assertArgument(false, "invalid BigNumberish value", name4 || "value", value);
}
function getUint(value, name4) {
  const result = getBigInt(value, name4);
  assert(result >= BN_0, "unsigned value cannot be negative", "NUMERIC_FAULT", {
    fault: "overflow",
    operation: "getUint",
    value
  });
  return result;
}
function getNumber(value, name4) {
  switch (typeof value) {
    case "bigint":
      assertArgument(value >= -maxValue && value <= maxValue, "overflow", name4 || "value", value);
      return Number(value);
    case "number":
      assertArgument(Number.isInteger(value), "underflow", name4 || "value", value);
      assertArgument(value >= -maxValue && value <= maxValue, "overflow", name4 || "value", value);
      return value;
    case "string":
      try {
        if (value === "") {
          throw new Error("empty string");
        }
        return getNumber(BigInt(value), name4);
      } catch (e2) {
        assertArgument(false, `invalid numeric string: ${e2.message}`, name4 || "value", value);
      }
  }
  assertArgument(false, "invalid numeric value", name4 || "value", value);
}
function toBeHex(_value, _width) {
  const value = getUint(_value, "value");
  let result = value.toString(16);
  if (_width == null) {
    if (result.length % 2) {
      result = "0" + result;
    }
  } else {
    const width = getNumber(_width, "width");
    assert(width * 2 >= result.length, `value exceeds width (${width} bytes)`, "NUMERIC_FAULT", {
      operation: "toBeHex",
      fault: "overflow",
      value: _value
    });
    while (result.length < width * 2) {
      result = "0" + result;
    }
  }
  return "0x" + result;
}
function toBeArray(_value) {
  const value = getUint(_value, "value");
  if (value === BN_0) {
    return new Uint8Array([]);
  }
  let hex = value.toString(16);
  if (hex.length % 2) {
    hex = "0" + hex;
  }
  const result = new Uint8Array(hex.length / 2);
  for (let i = 0; i < result.length; i++) {
    const offset = i * 2;
    result[i] = parseInt(hex.substring(offset, offset + 2), 16);
  }
  return result;
}

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/hmac.js
var HMAC2 = class extends Hash2 {
  constructor(hash3, _key) {
    super();
    this.finished = false;
    this.destroyed = false;
    hash2(hash3);
    const key = toBytes3(_key);
    this.iHash = hash3.create();
    if (typeof this.iHash.update !== "function")
      throw new Error("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen;
    this.outputLen = this.iHash.outputLen;
    const blockLen = this.blockLen;
    const pad = new Uint8Array(blockLen);
    pad.set(key.length > blockLen ? hash3.create().update(key).digest() : key);
    for (let i = 0; i < pad.length; i++)
      pad[i] ^= 54;
    this.iHash.update(pad);
    this.oHash = hash3.create();
    for (let i = 0; i < pad.length; i++)
      pad[i] ^= 54 ^ 92;
    this.oHash.update(pad);
    pad.fill(0);
  }
  update(buf) {
    exists3(this);
    this.iHash.update(buf);
    return this;
  }
  digestInto(out) {
    exists3(this);
    bytes3(out, this.outputLen);
    this.finished = true;
    this.iHash.digestInto(out);
    this.oHash.update(out);
    this.oHash.digestInto(out);
    this.destroy();
  }
  digest() {
    const out = new Uint8Array(this.oHash.outputLen);
    this.digestInto(out);
    return out;
  }
  _cloneInto(to) {
    to || (to = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
    to = to;
    to.finished = finished;
    to.destroyed = destroyed;
    to.blockLen = blockLen;
    to.outputLen = outputLen;
    to.oHash = oHash._cloneInto(to.oHash);
    to.iHash = iHash._cloneInto(to.iHash);
    return to;
  }
  destroy() {
    this.destroyed = true;
    this.oHash.destroy();
    this.iHash.destroy();
  }
};
var hmac2 = (hash3, key, message2) => new HMAC2(hash3, key).update(message2).digest();
hmac2.create = (hash3, key) => new HMAC2(hash3, key);

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_u64.js
var U32_MASK642 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
var _32n2 = /* @__PURE__ */ BigInt(32);
function fromBig2(n2, le = false) {
  if (le)
    return { h: Number(n2 & U32_MASK642), l: Number(n2 >> _32n2 & U32_MASK642) };
  return { h: Number(n2 >> _32n2 & U32_MASK642) | 0, l: Number(n2 & U32_MASK642) | 0 };
}
function split2(lst, le = false) {
  let Ah = new Uint32Array(lst.length);
  let Al = new Uint32Array(lst.length);
  for (let i = 0; i < lst.length; i++) {
    const { h, l } = fromBig2(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }
  return [Ah, Al];
}
var rotlSH2 = (h, l, s) => h << s | l >>> 32 - s;
var rotlSL2 = (h, l, s) => l << s | h >>> 32 - s;
var rotlBH2 = (h, l, s) => l << s - 32 | h >>> 64 - s;
var rotlBL2 = (h, l, s) => h << s - 32 | l >>> 64 - s;

// node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha3.js
var [SHA3_PI2, SHA3_ROTL2, _SHA3_IOTA2] = [[], [], []];
var _0n9 = /* @__PURE__ */ BigInt(0);
var _1n9 = /* @__PURE__ */ BigInt(1);
var _2n8 = /* @__PURE__ */ BigInt(2);
var _7n2 = /* @__PURE__ */ BigInt(7);
var _256n2 = /* @__PURE__ */ BigInt(256);
var _0x71n2 = /* @__PURE__ */ BigInt(113);
for (let round2 = 0, R = _1n9, x = 1, y = 0; round2 < 24; round2++) {
  [x, y] = [y, (2 * x + 3 * y) % 5];
  SHA3_PI2.push(2 * (5 * y + x));
  SHA3_ROTL2.push((round2 + 1) * (round2 + 2) / 2 % 64);
  let t2 = _0n9;
  for (let j = 0; j < 7; j++) {
    R = (R << _1n9 ^ (R >> _7n2) * _0x71n2) % _256n2;
    if (R & _2n8)
      t2 ^= _1n9 << (_1n9 << /* @__PURE__ */ BigInt(j)) - _1n9;
  }
  _SHA3_IOTA2.push(t2);
}
var [SHA3_IOTA_H2, SHA3_IOTA_L2] = /* @__PURE__ */ split2(_SHA3_IOTA2, true);
var rotlH2 = (h, l, s) => s > 32 ? rotlBH2(h, l, s) : rotlSH2(h, l, s);
var rotlL2 = (h, l, s) => s > 32 ? rotlBL2(h, l, s) : rotlSL2(h, l, s);
function keccakP2(s, rounds = 24) {
  const B = new Uint32Array(5 * 2);
  for (let round2 = 24 - rounds; round2 < 24; round2++) {
    for (let x = 0; x < 10; x++)
      B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
    for (let x = 0; x < 10; x += 2) {
      const idx1 = (x + 8) % 10;
      const idx0 = (x + 2) % 10;
      const B0 = B[idx0];
      const B1 = B[idx0 + 1];
      const Th = rotlH2(B0, B1, 1) ^ B[idx1];
      const Tl = rotlL2(B0, B1, 1) ^ B[idx1 + 1];
      for (let y = 0; y < 50; y += 10) {
        s[x + y] ^= Th;
        s[x + y + 1] ^= Tl;
      }
    }
    let curH = s[2];
    let curL = s[3];
    for (let t2 = 0; t2 < 24; t2++) {
      const shift = SHA3_ROTL2[t2];
      const Th = rotlH2(curH, curL, shift);
      const Tl = rotlL2(curH, curL, shift);
      const PI2 = SHA3_PI2[t2];
      curH = s[PI2];
      curL = s[PI2 + 1];
      s[PI2] = Th;
      s[PI2 + 1] = Tl;
    }
    for (let y = 0; y < 50; y += 10) {
      for (let x = 0; x < 10; x++)
        B[x] = s[y + x];
      for (let x = 0; x < 10; x++)
        s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
    }
    s[0] ^= SHA3_IOTA_H2[round2];
    s[1] ^= SHA3_IOTA_L2[round2];
  }
  B.fill(0);
}
var Keccak2 = class _Keccak extends Hash2 {
  // NOTE: we accept arguments in bytes instead of bits here.
  constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
    super();
    this.blockLen = blockLen;
    this.suffix = suffix;
    this.outputLen = outputLen;
    this.enableXOF = enableXOF;
    this.rounds = rounds;
    this.pos = 0;
    this.posOut = 0;
    this.finished = false;
    this.destroyed = false;
    number3(outputLen);
    if (0 >= this.blockLen || this.blockLen >= 200)
      throw new Error("Sha3 supports only keccak-f1600 function");
    this.state = new Uint8Array(200);
    this.state32 = u323(this.state);
  }
  keccak() {
    keccakP2(this.state32, this.rounds);
    this.posOut = 0;
    this.pos = 0;
  }
  update(data) {
    exists3(this);
    const { blockLen, state } = this;
    data = toBytes3(data);
    const len = data.length;
    for (let pos = 0; pos < len; ) {
      const take = Math.min(blockLen - this.pos, len - pos);
      for (let i = 0; i < take; i++)
        state[this.pos++] ^= data[pos++];
      if (this.pos === blockLen)
        this.keccak();
    }
    return this;
  }
  finish() {
    if (this.finished)
      return;
    this.finished = true;
    const { state, suffix, pos, blockLen } = this;
    state[pos] ^= suffix;
    if ((suffix & 128) !== 0 && pos === blockLen - 1)
      this.keccak();
    state[blockLen - 1] ^= 128;
    this.keccak();
  }
  writeInto(out) {
    exists3(this, false);
    bytes3(out);
    this.finish();
    const bufferOut = this.state;
    const { blockLen } = this;
    for (let pos = 0, len = out.length; pos < len; ) {
      if (this.posOut >= blockLen)
        this.keccak();
      const take = Math.min(blockLen - this.posOut, len - pos);
      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
      this.posOut += take;
      pos += take;
    }
    return out;
  }
  xofInto(out) {
    if (!this.enableXOF)
      throw new Error("XOF is not possible for this instance");
    return this.writeInto(out);
  }
  xof(bytes4) {
    number3(bytes4);
    return this.xofInto(new Uint8Array(bytes4));
  }
  digestInto(out) {
    output3(out, this);
    if (this.finished)
      throw new Error("digest() was already called");
    this.writeInto(out);
    this.destroy();
    return out;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
  destroy() {
    this.destroyed = true;
    this.state.fill(0);
  }
  _cloneInto(to) {
    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
    to || (to = new _Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
    to.state32.set(this.state32);
    to.pos = this.pos;
    to.posOut = this.posOut;
    to.finished = this.finished;
    to.rounds = rounds;
    to.suffix = suffix;
    to.outputLen = outputLen;
    to.enableXOF = enableXOF;
    to.destroyed = this.destroyed;
    return to;
  }
};
var gen2 = (suffix, blockLen, outputLen) => wrapConstructor2(() => new Keccak2(blockLen, suffix, outputLen));
var sha3_2242 = /* @__PURE__ */ gen2(6, 144, 224 / 8);
var sha3_2562 = /* @__PURE__ */ gen2(6, 136, 256 / 8);
var sha3_3842 = /* @__PURE__ */ gen2(6, 104, 384 / 8);
var sha3_5122 = /* @__PURE__ */ gen2(6, 72, 512 / 8);
var keccak_2242 = /* @__PURE__ */ gen2(1, 144, 224 / 8);
var keccak_2562 = /* @__PURE__ */ gen2(1, 136, 256 / 8);
var keccak_3842 = /* @__PURE__ */ gen2(1, 104, 384 / 8);
var keccak_5122 = /* @__PURE__ */ gen2(1, 72, 512 / 8);
var genShake2 = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts2((opts = {}) => new Keccak2(blockLen, suffix, opts.dkLen === void 0 ? outputLen : opts.dkLen, true));
var shake1282 = /* @__PURE__ */ genShake2(31, 168, 128 / 8);
var shake2562 = /* @__PURE__ */ genShake2(31, 136, 256 / 8);

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/crypto/keccak.js
var locked = false;
var _keccak256 = function(data) {
  return keccak_2562(data);
};
var __keccak256 = _keccak256;
function keccak256(_data) {
  const data = getBytes(_data, "data");
  return hexlify(__keccak256(data));
}
keccak256._ = _keccak256;
keccak256.lock = function() {
  locked = true;
};
keccak256.register = function(func) {
  if (locked) {
    throw new TypeError("keccak256 is locked");
  }
  __keccak256 = func;
};
Object.freeze(keccak256);

// node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/utils.js
var utils_exports2 = {};
__export(utils_exports2, {
  bitGet: () => bitGet2,
  bitLen: () => bitLen2,
  bitMask: () => bitMask2,
  bitSet: () => bitSet2,
  bytesToHex: () => bytesToHex3,
  bytesToNumberBE: () => bytesToNumberBE2,
  bytesToNumberLE: () => bytesToNumberLE2,
  concatBytes: () => concatBytes4,
  createHmacDrbg: () => createHmacDrbg2,
  ensureBytes: () => ensureBytes3,
  equalBytes: () => equalBytes3,
  hexToBytes: () => hexToBytes3,
  hexToNumber: () => hexToNumber2,
  numberToBytesBE: () => numberToBytesBE2,
  numberToBytesLE: () => numberToBytesLE2,
  numberToHexUnpadded: () => numberToHexUnpadded2,
  numberToVarBytesBE: () => numberToVarBytesBE2,
  utf8ToBytes: () => utf8ToBytes5,
  validateObject: () => validateObject2
});
var _0n10 = BigInt(0);
var _1n10 = BigInt(1);
var _2n9 = BigInt(2);
var u8a3 = (a) => a instanceof Uint8Array;
var hexes2 = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, "0"));
function bytesToHex3(bytes4) {
  if (!u8a3(bytes4))
    throw new Error("Uint8Array expected");
  let hex = "";
  for (let i = 0; i < bytes4.length; i++) {
    hex += hexes2[bytes4[i]];
  }
  return hex;
}
function numberToHexUnpadded2(num) {
  const hex = num.toString(16);
  return hex.length & 1 ? `0${hex}` : hex;
}
function hexToNumber2(hex) {
  if (typeof hex !== "string")
    throw new Error("hex string expected, got " + typeof hex);
  return BigInt(hex === "" ? "0" : `0x${hex}`);
}
function hexToBytes3(hex) {
  if (typeof hex !== "string")
    throw new Error("hex string expected, got " + typeof hex);
  const len = hex.length;
  if (len % 2)
    throw new Error("padded hex string expected, got unpadded hex of length " + len);
  const array = new Uint8Array(len / 2);
  for (let i = 0; i < array.length; i++) {
    const j = i * 2;
    const hexByte = hex.slice(j, j + 2);
    const byte = Number.parseInt(hexByte, 16);
    if (Number.isNaN(byte) || byte < 0)
      throw new Error("Invalid byte sequence");
    array[i] = byte;
  }
  return array;
}
function bytesToNumberBE2(bytes4) {
  return hexToNumber2(bytesToHex3(bytes4));
}
function bytesToNumberLE2(bytes4) {
  if (!u8a3(bytes4))
    throw new Error("Uint8Array expected");
  return hexToNumber2(bytesToHex3(Uint8Array.from(bytes4).reverse()));
}
function numberToBytesBE2(n2, len) {
  return hexToBytes3(n2.toString(16).padStart(len * 2, "0"));
}
function numberToBytesLE2(n2, len) {
  return numberToBytesBE2(n2, len).reverse();
}
function numberToVarBytesBE2(n2) {
  return hexToBytes3(numberToHexUnpadded2(n2));
}
function ensureBytes3(title, hex, expectedLength) {
  let res;
  if (typeof hex === "string") {
    try {
      res = hexToBytes3(hex);
    } catch (e2) {
      throw new Error(`${title} must be valid hex string, got "${hex}". Cause: ${e2}`);
    }
  } else if (u8a3(hex)) {
    res = Uint8Array.from(hex);
  } else {
    throw new Error(`${title} must be hex string or Uint8Array`);
  }
  const len = res.length;
  if (typeof expectedLength === "number" && len !== expectedLength)
    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);
  return res;
}
function concatBytes4(...arrays) {
  const r2 = new Uint8Array(arrays.reduce((sum2, a) => sum2 + a.length, 0));
  let pad = 0;
  arrays.forEach((a) => {
    if (!u8a3(a))
      throw new Error("Uint8Array expected");
    r2.set(a, pad);
    pad += a.length;
  });
  return r2;
}
function equalBytes3(b1, b2) {
  if (b1.length !== b2.length)
    return false;
  for (let i = 0; i < b1.length; i++)
    if (b1[i] !== b2[i])
      return false;
  return true;
}
function utf8ToBytes5(str) {
  if (typeof str !== "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
  return new Uint8Array(new TextEncoder().encode(str));
}
function bitLen2(n2) {
  let len;
  for (len = 0; n2 > _0n10; n2 >>= _1n10, len += 1)
    ;
  return len;
}
function bitGet2(n2, pos) {
  return n2 >> BigInt(pos) & _1n10;
}
var bitSet2 = (n2, pos, value) => {
  return n2 | (value ? _1n10 : _0n10) << BigInt(pos);
};
var bitMask2 = (n2) => (_2n9 << BigInt(n2 - 1)) - _1n10;
var u8n2 = (data) => new Uint8Array(data);
var u8fr2 = (arr) => Uint8Array.from(arr);
function createHmacDrbg2(hashLen, qByteLen, hmacFn) {
  if (typeof hashLen !== "number" || hashLen < 2)
    throw new Error("hashLen must be a number");
  if (typeof qByteLen !== "number" || qByteLen < 2)
    throw new Error("qByteLen must be a number");
  if (typeof hmacFn !== "function")
    throw new Error("hmacFn must be a function");
  let v = u8n2(hashLen);
  let k = u8n2(hashLen);
  let i = 0;
  const reset = () => {
    v.fill(1);
    k.fill(0);
    i = 0;
  };
  const h = (...b) => hmacFn(k, v, ...b);
  const reseed = (seed = u8n2()) => {
    k = h(u8fr2([0]), seed);
    v = h();
    if (seed.length === 0)
      return;
    k = h(u8fr2([1]), seed);
    v = h();
  };
  const gen3 = () => {
    if (i++ >= 1e3)
      throw new Error("drbg: tried 1000 values");
    let len = 0;
    const out = [];
    while (len < qByteLen) {
      v = h();
      const sl = v.slice();
      out.push(sl);
      len += v.length;
    }
    return concatBytes4(...out);
  };
  const genUntil = (seed, pred) => {
    reset();
    reseed(seed);
    let res = void 0;
    while (!(res = pred(gen3())))
      reseed();
    reset();
    return res;
  };
  return genUntil;
}
var validatorFns2 = {
  bigint: (val) => typeof val === "bigint",
  function: (val) => typeof val === "function",
  boolean: (val) => typeof val === "boolean",
  string: (val) => typeof val === "string",
  stringOrUint8Array: (val) => typeof val === "string" || val instanceof Uint8Array,
  isSafeInteger: (val) => Number.isSafeInteger(val),
  array: (val) => Array.isArray(val),
  field: (val, object) => object.Fp.isValid(val),
  hash: (val) => typeof val === "function" && Number.isSafeInteger(val.outputLen)
};
function validateObject2(object, validators, optValidators = {}) {
  const checkField = (fieldName, type, isOptional) => {
    const checkVal = validatorFns2[type];
    if (typeof checkVal !== "function")
      throw new Error(`Invalid validator "${type}", expected function`);
    const val = object[fieldName];
    if (isOptional && val === void 0)
      return;
    if (!checkVal(val, object)) {
      throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);
    }
  };
  for (const [fieldName, type] of Object.entries(validators))
    checkField(fieldName, type, false);
  for (const [fieldName, type] of Object.entries(optValidators))
    checkField(fieldName, type, true);
  return object;
}

// node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/modular.js
var _0n11 = BigInt(0);
var _1n11 = BigInt(1);
var _2n10 = BigInt(2);
var _3n3 = BigInt(3);
var _4n3 = BigInt(4);
var _5n3 = BigInt(5);
var _8n3 = BigInt(8);
var _9n2 = BigInt(9);
var _16n2 = BigInt(16);
function mod2(a, b) {
  const result = a % b;
  return result >= _0n11 ? result : b + result;
}
function pow3(num, power, modulo) {
  if (modulo <= _0n11 || power < _0n11)
    throw new Error("Expected power/modulo > 0");
  if (modulo === _1n11)
    return _0n11;
  let res = _1n11;
  while (power > _0n11) {
    if (power & _1n11)
      res = res * num % modulo;
    num = num * num % modulo;
    power >>= _1n11;
  }
  return res;
}
function pow22(x, power, modulo) {
  let res = x;
  while (power-- > _0n11) {
    res *= res;
    res %= modulo;
  }
  return res;
}
function invert2(number4, modulo) {
  if (number4 === _0n11 || modulo <= _0n11) {
    throw new Error(`invert: expected positive integers, got n=${number4} mod=${modulo}`);
  }
  let a = mod2(number4, modulo);
  let b = modulo;
  let x = _0n11, y = _1n11, u = _1n11, v = _0n11;
  while (a !== _0n11) {
    const q = b / a;
    const r2 = b % a;
    const m = x - u * q;
    const n2 = y - v * q;
    b = a, a = r2, x = u, y = v, u = m, v = n2;
  }
  const gcd2 = b;
  if (gcd2 !== _1n11)
    throw new Error("invert: does not exist");
  return mod2(x, modulo);
}
function tonelliShanks2(P2) {
  const legendreC = (P2 - _1n11) / _2n10;
  let Q, S, Z;
  for (Q = P2 - _1n11, S = 0; Q % _2n10 === _0n11; Q /= _2n10, S++)
    ;
  for (Z = _2n10; Z < P2 && pow3(Z, legendreC, P2) !== P2 - _1n11; Z++)
    ;
  if (S === 1) {
    const p1div4 = (P2 + _1n11) / _4n3;
    return function tonelliFast(Fp5, n2) {
      const root = Fp5.pow(n2, p1div4);
      if (!Fp5.eql(Fp5.sqr(root), n2))
        throw new Error("Cannot find square root");
      return root;
    };
  }
  const Q1div2 = (Q + _1n11) / _2n10;
  return function tonelliSlow(Fp5, n2) {
    if (Fp5.pow(n2, legendreC) === Fp5.neg(Fp5.ONE))
      throw new Error("Cannot find square root");
    let r2 = S;
    let g = Fp5.pow(Fp5.mul(Fp5.ONE, Z), Q);
    let x = Fp5.pow(n2, Q1div2);
    let b = Fp5.pow(n2, Q);
    while (!Fp5.eql(b, Fp5.ONE)) {
      if (Fp5.eql(b, Fp5.ZERO))
        return Fp5.ZERO;
      let m = 1;
      for (let t2 = Fp5.sqr(b); m < r2; m++) {
        if (Fp5.eql(t2, Fp5.ONE))
          break;
        t2 = Fp5.sqr(t2);
      }
      const ge = Fp5.pow(g, _1n11 << BigInt(r2 - m - 1));
      g = Fp5.sqr(ge);
      x = Fp5.mul(x, ge);
      b = Fp5.mul(b, g);
      r2 = m;
    }
    return x;
  };
}
function FpSqrt2(P2) {
  if (P2 % _4n3 === _3n3) {
    const p1div4 = (P2 + _1n11) / _4n3;
    return function sqrt3mod4(Fp5, n2) {
      const root = Fp5.pow(n2, p1div4);
      if (!Fp5.eql(Fp5.sqr(root), n2))
        throw new Error("Cannot find square root");
      return root;
    };
  }
  if (P2 % _8n3 === _5n3) {
    const c1 = (P2 - _5n3) / _8n3;
    return function sqrt5mod8(Fp5, n2) {
      const n22 = Fp5.mul(n2, _2n10);
      const v = Fp5.pow(n22, c1);
      const nv = Fp5.mul(n2, v);
      const i = Fp5.mul(Fp5.mul(nv, _2n10), v);
      const root = Fp5.mul(nv, Fp5.sub(i, Fp5.ONE));
      if (!Fp5.eql(Fp5.sqr(root), n2))
        throw new Error("Cannot find square root");
      return root;
    };
  }
  if (P2 % _16n2 === _9n2) {
  }
  return tonelliShanks2(P2);
}
var FIELD_FIELDS2 = [
  "create",
  "isValid",
  "is0",
  "neg",
  "inv",
  "sqrt",
  "sqr",
  "eql",
  "add",
  "sub",
  "mul",
  "pow",
  "div",
  "addN",
  "subN",
  "mulN",
  "sqrN"
];
function validateField2(field) {
  const initial = {
    ORDER: "bigint",
    MASK: "bigint",
    BYTES: "isSafeInteger",
    BITS: "isSafeInteger"
  };
  const opts = FIELD_FIELDS2.reduce((map, val) => {
    map[val] = "function";
    return map;
  }, initial);
  return validateObject2(field, opts);
}
function FpPow2(f2, num, power) {
  if (power < _0n11)
    throw new Error("Expected power > 0");
  if (power === _0n11)
    return f2.ONE;
  if (power === _1n11)
    return num;
  let p = f2.ONE;
  let d = num;
  while (power > _0n11) {
    if (power & _1n11)
      p = f2.mul(p, d);
    d = f2.sqr(d);
    power >>= _1n11;
  }
  return p;
}
function FpInvertBatch2(f2, nums) {
  const tmp = new Array(nums.length);
  const lastMultiplied = nums.reduce((acc, num, i) => {
    if (f2.is0(num))
      return acc;
    tmp[i] = acc;
    return f2.mul(acc, num);
  }, f2.ONE);
  const inverted = f2.inv(lastMultiplied);
  nums.reduceRight((acc, num, i) => {
    if (f2.is0(num))
      return acc;
    tmp[i] = f2.mul(acc, tmp[i]);
    return f2.mul(acc, num);
  }, inverted);
  return tmp;
}
function nLength2(n2, nBitLength) {
  const _nBitLength = nBitLength !== void 0 ? nBitLength : n2.toString(2).length;
  const nByteLength = Math.ceil(_nBitLength / 8);
  return { nBitLength: _nBitLength, nByteLength };
}
function Field2(ORDER, bitLen3, isLE4 = false, redef = {}) {
  if (ORDER <= _0n11)
    throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);
  const { nBitLength: BITS, nByteLength: BYTES } = nLength2(ORDER, bitLen3);
  if (BYTES > 2048)
    throw new Error("Field lengths over 2048 bytes are not supported");
  const sqrtP = FpSqrt2(ORDER);
  const f2 = Object.freeze({
    ORDER,
    BITS,
    BYTES,
    MASK: bitMask2(BITS),
    ZERO: _0n11,
    ONE: _1n11,
    create: (num) => mod2(num, ORDER),
    isValid: (num) => {
      if (typeof num !== "bigint")
        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);
      return _0n11 <= num && num < ORDER;
    },
    is0: (num) => num === _0n11,
    isOdd: (num) => (num & _1n11) === _1n11,
    neg: (num) => mod2(-num, ORDER),
    eql: (lhs, rhs) => lhs === rhs,
    sqr: (num) => mod2(num * num, ORDER),
    add: (lhs, rhs) => mod2(lhs + rhs, ORDER),
    sub: (lhs, rhs) => mod2(lhs - rhs, ORDER),
    mul: (lhs, rhs) => mod2(lhs * rhs, ORDER),
    pow: (num, power) => FpPow2(f2, num, power),
    div: (lhs, rhs) => mod2(lhs * invert2(rhs, ORDER), ORDER),
    // Same as above, but doesn't normalize
    sqrN: (num) => num * num,
    addN: (lhs, rhs) => lhs + rhs,
    subN: (lhs, rhs) => lhs - rhs,
    mulN: (lhs, rhs) => lhs * rhs,
    inv: (num) => invert2(num, ORDER),
    sqrt: redef.sqrt || ((n2) => sqrtP(f2, n2)),
    invertBatch: (lst) => FpInvertBatch2(f2, lst),
    // TODO: do we really need constant cmov?
    // We don't have const-time bigints anyway, so probably will be not very useful
    cmov: (a, b, c) => c ? b : a,
    toBytes: (num) => isLE4 ? numberToBytesLE2(num, BYTES) : numberToBytesBE2(num, BYTES),
    fromBytes: (bytes4) => {
      if (bytes4.length !== BYTES)
        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes4.length}`);
      return isLE4 ? bytesToNumberLE2(bytes4) : bytesToNumberBE2(bytes4);
    }
  });
  return Object.freeze(f2);
}
function getFieldBytesLength2(fieldOrder) {
  if (typeof fieldOrder !== "bigint")
    throw new Error("field order must be bigint");
  const bitLength = fieldOrder.toString(2).length;
  return Math.ceil(bitLength / 8);
}
function getMinHashLength2(fieldOrder) {
  const length5 = getFieldBytesLength2(fieldOrder);
  return length5 + Math.ceil(length5 / 2);
}
function mapHashToField2(key, fieldOrder, isLE4 = false) {
  const len = key.length;
  const fieldLen = getFieldBytesLength2(fieldOrder);
  const minLen = getMinHashLength2(fieldOrder);
  if (len < 16 || len < minLen || len > 1024)
    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);
  const num = isLE4 ? bytesToNumberBE2(key) : bytesToNumberLE2(key);
  const reduced = mod2(num, fieldOrder - _1n11) + _1n11;
  return isLE4 ? numberToBytesLE2(reduced, fieldLen) : numberToBytesBE2(reduced, fieldLen);
}

// node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/curve.js
var _0n12 = BigInt(0);
var _1n12 = BigInt(1);
function wNAF2(c, bits) {
  const constTimeNegate = (condition, item) => {
    const neg = item.negate();
    return condition ? neg : item;
  };
  const opts = (W) => {
    const windows = Math.ceil(bits / W) + 1;
    const windowSize = 2 ** (W - 1);
    return { windows, windowSize };
  };
  return {
    constTimeNegate,
    // non-const time multiplication ladder
    unsafeLadder(elm, n2) {
      let p = c.ZERO;
      let d = elm;
      while (n2 > _0n12) {
        if (n2 & _1n12)
          p = p.add(d);
        d = d.double();
        n2 >>= _1n12;
      }
      return p;
    },
    /**
     * Creates a wNAF precomputation window. Used for caching.
     * Default window size is set by `utils.precompute()` and is equal to 8.
     * Number of precomputed points depends on the curve size:
     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
     * - 𝑊 is the window size
     * - 𝑛 is the bitlength of the curve order.
     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
     * @returns precomputed point tables flattened to a single array
     */
    precomputeWindow(elm, W) {
      const { windows, windowSize } = opts(W);
      const points = [];
      let p = elm;
      let base5 = p;
      for (let window2 = 0; window2 < windows; window2++) {
        base5 = p;
        points.push(base5);
        for (let i = 1; i < windowSize; i++) {
          base5 = base5.add(p);
          points.push(base5);
        }
        p = base5.double();
      }
      return points;
    },
    /**
     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
     * @param W window size
     * @param precomputes precomputed tables
     * @param n scalar (we don't check here, but should be less than curve order)
     * @returns real and fake (for const-time) points
     */
    wNAF(W, precomputes, n2) {
      const { windows, windowSize } = opts(W);
      let p = c.ZERO;
      let f2 = c.BASE;
      const mask2 = BigInt(2 ** W - 1);
      const maxNumber = 2 ** W;
      const shiftBy = BigInt(W);
      for (let window2 = 0; window2 < windows; window2++) {
        const offset = window2 * windowSize;
        let wbits = Number(n2 & mask2);
        n2 >>= shiftBy;
        if (wbits > windowSize) {
          wbits -= maxNumber;
          n2 += _1n12;
        }
        const offset1 = offset;
        const offset2 = offset + Math.abs(wbits) - 1;
        const cond1 = window2 % 2 !== 0;
        const cond2 = wbits < 0;
        if (wbits === 0) {
          f2 = f2.add(constTimeNegate(cond1, precomputes[offset1]));
        } else {
          p = p.add(constTimeNegate(cond2, precomputes[offset2]));
        }
      }
      return { p, f: f2 };
    },
    wNAFCached(P2, precomputesMap, n2, transform) {
      const W = P2._WINDOW_SIZE || 1;
      let comp = precomputesMap.get(P2);
      if (!comp) {
        comp = this.precomputeWindow(P2, W);
        if (W !== 1) {
          precomputesMap.set(P2, transform(comp));
        }
      }
      return this.wNAF(W, comp, n2);
    }
  };
}
function validateBasic2(curve) {
  validateField2(curve.Fp);
  validateObject2(curve, {
    n: "bigint",
    h: "bigint",
    Gx: "field",
    Gy: "field"
  }, {
    nBitLength: "isSafeInteger",
    nByteLength: "isSafeInteger"
  });
  return Object.freeze({
    ...nLength2(curve.n, curve.nBitLength),
    ...curve,
    ...{ p: curve.Fp.ORDER }
  });
}

// node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/weierstrass.js
function validatePointOpts2(curve) {
  const opts = validateBasic2(curve);
  validateObject2(opts, {
    a: "field",
    b: "field"
  }, {
    allowedPrivateKeyLengths: "array",
    wrapPrivateKey: "boolean",
    isTorsionFree: "function",
    clearCofactor: "function",
    allowInfinityPoint: "boolean",
    fromBytes: "function",
    toBytes: "function"
  });
  const { endo, Fp: Fp5, a } = opts;
  if (endo) {
    if (!Fp5.eql(a, Fp5.ZERO)) {
      throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
    }
    if (typeof endo !== "object" || typeof endo.beta !== "bigint" || typeof endo.splitScalar !== "function") {
      throw new Error("Expected endomorphism with beta: bigint and splitScalar: function");
    }
  }
  return Object.freeze({ ...opts });
}
var { bytesToNumberBE: b2n2, hexToBytes: h2b2 } = utils_exports2;
var DER2 = {
  // asn.1 DER encoding utils
  Err: class DERErr2 extends Error {
    constructor(m = "") {
      super(m);
    }
  },
  _parseInt(data) {
    const { Err: E } = DER2;
    if (data.length < 2 || data[0] !== 2)
      throw new E("Invalid signature integer tag");
    const len = data[1];
    const res = data.subarray(2, len + 2);
    if (!len || res.length !== len)
      throw new E("Invalid signature integer: wrong length");
    if (res[0] & 128)
      throw new E("Invalid signature integer: negative");
    if (res[0] === 0 && !(res[1] & 128))
      throw new E("Invalid signature integer: unnecessary leading zero");
    return { d: b2n2(res), l: data.subarray(len + 2) };
  },
  toSig(hex) {
    const { Err: E } = DER2;
    const data = typeof hex === "string" ? h2b2(hex) : hex;
    if (!(data instanceof Uint8Array))
      throw new Error("ui8a expected");
    let l = data.length;
    if (l < 2 || data[0] != 48)
      throw new E("Invalid signature tag");
    if (data[1] !== l - 2)
      throw new E("Invalid signature: incorrect length");
    const { d: r2, l: sBytes } = DER2._parseInt(data.subarray(2));
    const { d: s, l: rBytesLeft } = DER2._parseInt(sBytes);
    if (rBytesLeft.length)
      throw new E("Invalid signature: left bytes after parsing");
    return { r: r2, s };
  },
  hexFromSig(sig) {
    const slice = (s2) => Number.parseInt(s2[0], 16) & 8 ? "00" + s2 : s2;
    const h = (num) => {
      const hex = num.toString(16);
      return hex.length & 1 ? `0${hex}` : hex;
    };
    const s = slice(h(sig.s));
    const r2 = slice(h(sig.r));
    const shl = s.length / 2;
    const rhl = r2.length / 2;
    const sl = h(shl);
    const rl = h(rhl);
    return `30${h(rhl + shl + 4)}02${rl}${r2}02${sl}${s}`;
  }
};
var _0n13 = BigInt(0);
var _1n13 = BigInt(1);
var _2n11 = BigInt(2);
var _3n4 = BigInt(3);
var _4n4 = BigInt(4);
function weierstrassPoints2(opts) {
  const CURVE = validatePointOpts2(opts);
  const { Fp: Fp5 } = CURVE;
  const toBytes4 = CURVE.toBytes || ((_c, point, _isCompressed) => {
    const a = point.toAffine();
    return concatBytes4(Uint8Array.from([4]), Fp5.toBytes(a.x), Fp5.toBytes(a.y));
  });
  const fromBytes = CURVE.fromBytes || ((bytes4) => {
    const tail = bytes4.subarray(1);
    const x = Fp5.fromBytes(tail.subarray(0, Fp5.BYTES));
    const y = Fp5.fromBytes(tail.subarray(Fp5.BYTES, 2 * Fp5.BYTES));
    return { x, y };
  });
  function weierstrassEquation(x) {
    const { a, b } = CURVE;
    const x2 = Fp5.sqr(x);
    const x3 = Fp5.mul(x2, x);
    return Fp5.add(Fp5.add(x3, Fp5.mul(x, a)), b);
  }
  if (!Fp5.eql(Fp5.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))
    throw new Error("bad generator point: equation left != right");
  function isWithinCurveOrder(num) {
    return typeof num === "bigint" && _0n13 < num && num < CURVE.n;
  }
  function assertGE(num) {
    if (!isWithinCurveOrder(num))
      throw new Error("Expected valid bigint: 0 < bigint < curve.n");
  }
  function normPrivateKeyToScalar(key) {
    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: n2 } = CURVE;
    if (lengths && typeof key !== "bigint") {
      if (key instanceof Uint8Array)
        key = bytesToHex3(key);
      if (typeof key !== "string" || !lengths.includes(key.length))
        throw new Error("Invalid key");
      key = key.padStart(nByteLength * 2, "0");
    }
    let num;
    try {
      num = typeof key === "bigint" ? key : bytesToNumberBE2(ensureBytes3("private key", key, nByteLength));
    } catch (error) {
      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);
    }
    if (wrapPrivateKey)
      num = mod2(num, n2);
    assertGE(num);
    return num;
  }
  const pointPrecomputes = /* @__PURE__ */ new Map();
  function assertPrjPoint(other) {
    if (!(other instanceof Point3))
      throw new Error("ProjectivePoint expected");
  }
  class Point3 {
    constructor(px, py, pz) {
      this.px = px;
      this.py = py;
      this.pz = pz;
      if (px == null || !Fp5.isValid(px))
        throw new Error("x required");
      if (py == null || !Fp5.isValid(py))
        throw new Error("y required");
      if (pz == null || !Fp5.isValid(pz))
        throw new Error("z required");
    }
    // Does not validate if the point is on-curve.
    // Use fromHex instead, or call assertValidity() later.
    static fromAffine(p) {
      const { x, y } = p || {};
      if (!p || !Fp5.isValid(x) || !Fp5.isValid(y))
        throw new Error("invalid affine point");
      if (p instanceof Point3)
        throw new Error("projective point not allowed");
      const is0 = (i) => Fp5.eql(i, Fp5.ZERO);
      if (is0(x) && is0(y))
        return Point3.ZERO;
      return new Point3(x, y, Fp5.ONE);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    /**
     * Takes a bunch of Projective Points but executes only one
     * inversion on all of them. Inversion is very slow operation,
     * so this improves performance massively.
     * Optimization: converts a list of projective points to a list of identical points with Z=1.
     */
    static normalizeZ(points) {
      const toInv = Fp5.invertBatch(points.map((p) => p.pz));
      return points.map((p, i) => p.toAffine(toInv[i])).map(Point3.fromAffine);
    }
    /**
     * Converts hash string or Uint8Array to Point.
     * @param hex short/long ECDSA hex
     */
    static fromHex(hex) {
      const P2 = Point3.fromAffine(fromBytes(ensureBytes3("pointHex", hex)));
      P2.assertValidity();
      return P2;
    }
    // Multiplies generator point by privateKey.
    static fromPrivateKey(privateKey) {
      return Point3.BASE.multiply(normPrivateKeyToScalar(privateKey));
    }
    // "Private method", don't use it directly
    _setWindowSize(windowSize) {
      this._WINDOW_SIZE = windowSize;
      pointPrecomputes.delete(this);
    }
    // A point on curve is valid if it conforms to equation.
    assertValidity() {
      if (this.is0()) {
        if (CURVE.allowInfinityPoint && !Fp5.is0(this.py))
          return;
        throw new Error("bad point: ZERO");
      }
      const { x, y } = this.toAffine();
      if (!Fp5.isValid(x) || !Fp5.isValid(y))
        throw new Error("bad point: x or y not FE");
      const left = Fp5.sqr(y);
      const right = weierstrassEquation(x);
      if (!Fp5.eql(left, right))
        throw new Error("bad point: equation left != right");
      if (!this.isTorsionFree())
        throw new Error("bad point: not in prime-order subgroup");
    }
    hasEvenY() {
      const { y } = this.toAffine();
      if (Fp5.isOdd)
        return !Fp5.isOdd(y);
      throw new Error("Field doesn't support isOdd");
    }
    /**
     * Compare one point to another.
     */
    equals(other) {
      assertPrjPoint(other);
      const { px: X1, py: Y1, pz: Z1 } = this;
      const { px: X2, py: Y2, pz: Z2 } = other;
      const U1 = Fp5.eql(Fp5.mul(X1, Z2), Fp5.mul(X2, Z1));
      const U2 = Fp5.eql(Fp5.mul(Y1, Z2), Fp5.mul(Y2, Z1));
      return U1 && U2;
    }
    /**
     * Flips point to one corresponding to (x, -y) in Affine coordinates.
     */
    negate() {
      return new Point3(this.px, Fp5.neg(this.py), this.pz);
    }
    // Renes-Costello-Batina exception-free doubling formula.
    // There is 30% faster Jacobian formula, but it is not complete.
    // https://eprint.iacr.org/2015/1060, algorithm 3
    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
    double() {
      const { a, b } = CURVE;
      const b3 = Fp5.mul(b, _3n4);
      const { px: X1, py: Y1, pz: Z1 } = this;
      let X3 = Fp5.ZERO, Y3 = Fp5.ZERO, Z3 = Fp5.ZERO;
      let t0 = Fp5.mul(X1, X1);
      let t1 = Fp5.mul(Y1, Y1);
      let t2 = Fp5.mul(Z1, Z1);
      let t3 = Fp5.mul(X1, Y1);
      t3 = Fp5.add(t3, t3);
      Z3 = Fp5.mul(X1, Z1);
      Z3 = Fp5.add(Z3, Z3);
      X3 = Fp5.mul(a, Z3);
      Y3 = Fp5.mul(b3, t2);
      Y3 = Fp5.add(X3, Y3);
      X3 = Fp5.sub(t1, Y3);
      Y3 = Fp5.add(t1, Y3);
      Y3 = Fp5.mul(X3, Y3);
      X3 = Fp5.mul(t3, X3);
      Z3 = Fp5.mul(b3, Z3);
      t2 = Fp5.mul(a, t2);
      t3 = Fp5.sub(t0, t2);
      t3 = Fp5.mul(a, t3);
      t3 = Fp5.add(t3, Z3);
      Z3 = Fp5.add(t0, t0);
      t0 = Fp5.add(Z3, t0);
      t0 = Fp5.add(t0, t2);
      t0 = Fp5.mul(t0, t3);
      Y3 = Fp5.add(Y3, t0);
      t2 = Fp5.mul(Y1, Z1);
      t2 = Fp5.add(t2, t2);
      t0 = Fp5.mul(t2, t3);
      X3 = Fp5.sub(X3, t0);
      Z3 = Fp5.mul(t2, t1);
      Z3 = Fp5.add(Z3, Z3);
      Z3 = Fp5.add(Z3, Z3);
      return new Point3(X3, Y3, Z3);
    }
    // Renes-Costello-Batina exception-free addition formula.
    // There is 30% faster Jacobian formula, but it is not complete.
    // https://eprint.iacr.org/2015/1060, algorithm 1
    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
    add(other) {
      assertPrjPoint(other);
      const { px: X1, py: Y1, pz: Z1 } = this;
      const { px: X2, py: Y2, pz: Z2 } = other;
      let X3 = Fp5.ZERO, Y3 = Fp5.ZERO, Z3 = Fp5.ZERO;
      const a = CURVE.a;
      const b3 = Fp5.mul(CURVE.b, _3n4);
      let t0 = Fp5.mul(X1, X2);
      let t1 = Fp5.mul(Y1, Y2);
      let t2 = Fp5.mul(Z1, Z2);
      let t3 = Fp5.add(X1, Y1);
      let t4 = Fp5.add(X2, Y2);
      t3 = Fp5.mul(t3, t4);
      t4 = Fp5.add(t0, t1);
      t3 = Fp5.sub(t3, t4);
      t4 = Fp5.add(X1, Z1);
      let t5 = Fp5.add(X2, Z2);
      t4 = Fp5.mul(t4, t5);
      t5 = Fp5.add(t0, t2);
      t4 = Fp5.sub(t4, t5);
      t5 = Fp5.add(Y1, Z1);
      X3 = Fp5.add(Y2, Z2);
      t5 = Fp5.mul(t5, X3);
      X3 = Fp5.add(t1, t2);
      t5 = Fp5.sub(t5, X3);
      Z3 = Fp5.mul(a, t4);
      X3 = Fp5.mul(b3, t2);
      Z3 = Fp5.add(X3, Z3);
      X3 = Fp5.sub(t1, Z3);
      Z3 = Fp5.add(t1, Z3);
      Y3 = Fp5.mul(X3, Z3);
      t1 = Fp5.add(t0, t0);
      t1 = Fp5.add(t1, t0);
      t2 = Fp5.mul(a, t2);
      t4 = Fp5.mul(b3, t4);
      t1 = Fp5.add(t1, t2);
      t2 = Fp5.sub(t0, t2);
      t2 = Fp5.mul(a, t2);
      t4 = Fp5.add(t4, t2);
      t0 = Fp5.mul(t1, t4);
      Y3 = Fp5.add(Y3, t0);
      t0 = Fp5.mul(t5, t4);
      X3 = Fp5.mul(t3, X3);
      X3 = Fp5.sub(X3, t0);
      t0 = Fp5.mul(t3, t1);
      Z3 = Fp5.mul(t5, Z3);
      Z3 = Fp5.add(Z3, t0);
      return new Point3(X3, Y3, Z3);
    }
    subtract(other) {
      return this.add(other.negate());
    }
    is0() {
      return this.equals(Point3.ZERO);
    }
    wNAF(n2) {
      return wnaf.wNAFCached(this, pointPrecomputes, n2, (comp) => {
        const toInv = Fp5.invertBatch(comp.map((p) => p.pz));
        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point3.fromAffine);
      });
    }
    /**
     * Non-constant-time multiplication. Uses double-and-add algorithm.
     * It's faster, but should only be used when you don't care about
     * an exposed private key e.g. sig verification, which works over *public* keys.
     */
    multiplyUnsafe(n2) {
      const I = Point3.ZERO;
      if (n2 === _0n13)
        return I;
      assertGE(n2);
      if (n2 === _1n13)
        return this;
      const { endo } = CURVE;
      if (!endo)
        return wnaf.unsafeLadder(this, n2);
      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n2);
      let k1p = I;
      let k2p = I;
      let d = this;
      while (k1 > _0n13 || k2 > _0n13) {
        if (k1 & _1n13)
          k1p = k1p.add(d);
        if (k2 & _1n13)
          k2p = k2p.add(d);
        d = d.double();
        k1 >>= _1n13;
        k2 >>= _1n13;
      }
      if (k1neg)
        k1p = k1p.negate();
      if (k2neg)
        k2p = k2p.negate();
      k2p = new Point3(Fp5.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
      return k1p.add(k2p);
    }
    /**
     * Constant time multiplication.
     * Uses wNAF method. Windowed method may be 10% faster,
     * but takes 2x longer to generate and consumes 2x memory.
     * Uses precomputes when available.
     * Uses endomorphism for Koblitz curves.
     * @param scalar by which the point would be multiplied
     * @returns New point
     */
    multiply(scalar) {
      assertGE(scalar);
      let n2 = scalar;
      let point, fake;
      const { endo } = CURVE;
      if (endo) {
        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n2);
        let { p: k1p, f: f1p } = this.wNAF(k1);
        let { p: k2p, f: f2p } = this.wNAF(k2);
        k1p = wnaf.constTimeNegate(k1neg, k1p);
        k2p = wnaf.constTimeNegate(k2neg, k2p);
        k2p = new Point3(Fp5.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
        point = k1p.add(k2p);
        fake = f1p.add(f2p);
      } else {
        const { p, f: f2 } = this.wNAF(n2);
        point = p;
        fake = f2;
      }
      return Point3.normalizeZ([point, fake])[0];
    }
    /**
     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
     * Not using Strauss-Shamir trick: precomputation tables are faster.
     * The trick could be useful if both P and Q are not G (not in our case).
     * @returns non-zero affine point
     */
    multiplyAndAddUnsafe(Q, a, b) {
      const G = Point3.BASE;
      const mul2 = (P2, a2) => a2 === _0n13 || a2 === _1n13 || !P2.equals(G) ? P2.multiplyUnsafe(a2) : P2.multiply(a2);
      const sum2 = mul2(this, a).add(mul2(Q, b));
      return sum2.is0() ? void 0 : sum2;
    }
    // Converts Projective point to affine (x, y) coordinates.
    // Can accept precomputed Z^-1 - for example, from invertBatch.
    // (x, y, z) ∋ (x=x/z, y=y/z)
    toAffine(iz) {
      const { px: x, py: y, pz: z2 } = this;
      const is0 = this.is0();
      if (iz == null)
        iz = is0 ? Fp5.ONE : Fp5.inv(z2);
      const ax = Fp5.mul(x, iz);
      const ay = Fp5.mul(y, iz);
      const zz = Fp5.mul(z2, iz);
      if (is0)
        return { x: Fp5.ZERO, y: Fp5.ZERO };
      if (!Fp5.eql(zz, Fp5.ONE))
        throw new Error("invZ was invalid");
      return { x: ax, y: ay };
    }
    isTorsionFree() {
      const { h: cofactor, isTorsionFree } = CURVE;
      if (cofactor === _1n13)
        return true;
      if (isTorsionFree)
        return isTorsionFree(Point3, this);
      throw new Error("isTorsionFree() has not been declared for the elliptic curve");
    }
    clearCofactor() {
      const { h: cofactor, clearCofactor } = CURVE;
      if (cofactor === _1n13)
        return this;
      if (clearCofactor)
        return clearCofactor(Point3, this);
      return this.multiplyUnsafe(CURVE.h);
    }
    toRawBytes(isCompressed = true) {
      this.assertValidity();
      return toBytes4(Point3, this, isCompressed);
    }
    toHex(isCompressed = true) {
      return bytesToHex3(this.toRawBytes(isCompressed));
    }
  }
  Point3.BASE = new Point3(CURVE.Gx, CURVE.Gy, Fp5.ONE);
  Point3.ZERO = new Point3(Fp5.ZERO, Fp5.ONE, Fp5.ZERO);
  const _bits = CURVE.nBitLength;
  const wnaf = wNAF2(Point3, CURVE.endo ? Math.ceil(_bits / 2) : _bits);
  return {
    CURVE,
    ProjectivePoint: Point3,
    normPrivateKeyToScalar,
    weierstrassEquation,
    isWithinCurveOrder
  };
}
function validateOpts3(curve) {
  const opts = validateBasic2(curve);
  validateObject2(opts, {
    hash: "hash",
    hmac: "function",
    randomBytes: "function"
  }, {
    bits2int: "function",
    bits2int_modN: "function",
    lowS: "boolean"
  });
  return Object.freeze({ lowS: true, ...opts });
}
function weierstrass2(curveDef) {
  const CURVE = validateOpts3(curveDef);
  const { Fp: Fp5, n: CURVE_ORDER } = CURVE;
  const compressedLen = Fp5.BYTES + 1;
  const uncompressedLen = 2 * Fp5.BYTES + 1;
  function isValidFieldElement(num) {
    return _0n13 < num && num < Fp5.ORDER;
  }
  function modN(a) {
    return mod2(a, CURVE_ORDER);
  }
  function invN(a) {
    return invert2(a, CURVE_ORDER);
  }
  const { ProjectivePoint: Point3, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder } = weierstrassPoints2({
    ...CURVE,
    toBytes(_c, point, isCompressed) {
      const a = point.toAffine();
      const x = Fp5.toBytes(a.x);
      const cat = concatBytes4;
      if (isCompressed) {
        return cat(Uint8Array.from([point.hasEvenY() ? 2 : 3]), x);
      } else {
        return cat(Uint8Array.from([4]), x, Fp5.toBytes(a.y));
      }
    },
    fromBytes(bytes4) {
      const len = bytes4.length;
      const head = bytes4[0];
      const tail = bytes4.subarray(1);
      if (len === compressedLen && (head === 2 || head === 3)) {
        const x = bytesToNumberBE2(tail);
        if (!isValidFieldElement(x))
          throw new Error("Point is not on curve");
        const y2 = weierstrassEquation(x);
        let y = Fp5.sqrt(y2);
        const isYOdd = (y & _1n13) === _1n13;
        const isHeadOdd = (head & 1) === 1;
        if (isHeadOdd !== isYOdd)
          y = Fp5.neg(y);
        return { x, y };
      } else if (len === uncompressedLen && head === 4) {
        const x = Fp5.fromBytes(tail.subarray(0, Fp5.BYTES));
        const y = Fp5.fromBytes(tail.subarray(Fp5.BYTES, 2 * Fp5.BYTES));
        return { x, y };
      } else {
        throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);
      }
    }
  });
  const numToNByteStr = (num) => bytesToHex3(numberToBytesBE2(num, CURVE.nByteLength));
  function isBiggerThanHalfOrder(number4) {
    const HALF = CURVE_ORDER >> _1n13;
    return number4 > HALF;
  }
  function normalizeS(s) {
    return isBiggerThanHalfOrder(s) ? modN(-s) : s;
  }
  const slcNum = (b, from7, to) => bytesToNumberBE2(b.slice(from7, to));
  class Signature2 {
    constructor(r2, s, recovery) {
      this.r = r2;
      this.s = s;
      this.recovery = recovery;
      this.assertValidity();
    }
    // pair (bytes of r, bytes of s)
    static fromCompact(hex) {
      const l = CURVE.nByteLength;
      hex = ensureBytes3("compactSignature", hex, l * 2);
      return new Signature2(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));
    }
    // DER encoded ECDSA signature
    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
    static fromDER(hex) {
      const { r: r2, s } = DER2.toSig(ensureBytes3("DER", hex));
      return new Signature2(r2, s);
    }
    assertValidity() {
      if (!isWithinCurveOrder(this.r))
        throw new Error("r must be 0 < r < CURVE.n");
      if (!isWithinCurveOrder(this.s))
        throw new Error("s must be 0 < s < CURVE.n");
    }
    addRecoveryBit(recovery) {
      return new Signature2(this.r, this.s, recovery);
    }
    recoverPublicKey(msgHash) {
      const { r: r2, s, recovery: rec } = this;
      const h = bits2int_modN(ensureBytes3("msgHash", msgHash));
      if (rec == null || ![0, 1, 2, 3].includes(rec))
        throw new Error("recovery id invalid");
      const radj = rec === 2 || rec === 3 ? r2 + CURVE.n : r2;
      if (radj >= Fp5.ORDER)
        throw new Error("recovery id 2 or 3 invalid");
      const prefix = (rec & 1) === 0 ? "02" : "03";
      const R = Point3.fromHex(prefix + numToNByteStr(radj));
      const ir = invN(radj);
      const u1 = modN(-h * ir);
      const u2 = modN(s * ir);
      const Q = Point3.BASE.multiplyAndAddUnsafe(R, u1, u2);
      if (!Q)
        throw new Error("point at infinify");
      Q.assertValidity();
      return Q;
    }
    // Signatures should be low-s, to prevent malleability.
    hasHighS() {
      return isBiggerThanHalfOrder(this.s);
    }
    normalizeS() {
      return this.hasHighS() ? new Signature2(this.r, modN(-this.s), this.recovery) : this;
    }
    // DER-encoded
    toDERRawBytes() {
      return hexToBytes3(this.toDERHex());
    }
    toDERHex() {
      return DER2.hexFromSig({ r: this.r, s: this.s });
    }
    // padded bytes of r, then padded bytes of s
    toCompactRawBytes() {
      return hexToBytes3(this.toCompactHex());
    }
    toCompactHex() {
      return numToNByteStr(this.r) + numToNByteStr(this.s);
    }
  }
  const utils = {
    isValidPrivateKey(privateKey) {
      try {
        normPrivateKeyToScalar(privateKey);
        return true;
      } catch (error) {
        return false;
      }
    },
    normPrivateKeyToScalar,
    /**
     * Produces cryptographically secure private key from random of size
     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
     */
    randomPrivateKey: () => {
      const length5 = getMinHashLength2(CURVE.n);
      return mapHashToField2(CURVE.randomBytes(length5), CURVE.n);
    },
    /**
     * Creates precompute table for an arbitrary EC point. Makes point "cached".
     * Allows to massively speed-up `point.multiply(scalar)`.
     * @returns cached point
     * @example
     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
     * fast.multiply(privKey); // much faster ECDH now
     */
    precompute(windowSize = 8, point = Point3.BASE) {
      point._setWindowSize(windowSize);
      point.multiply(BigInt(3));
      return point;
    }
  };
  function getPublicKey(privateKey, isCompressed = true) {
    return Point3.fromPrivateKey(privateKey).toRawBytes(isCompressed);
  }
  function isProbPub(item) {
    const arr = item instanceof Uint8Array;
    const str = typeof item === "string";
    const len = (arr || str) && item.length;
    if (arr)
      return len === compressedLen || len === uncompressedLen;
    if (str)
      return len === 2 * compressedLen || len === 2 * uncompressedLen;
    if (item instanceof Point3)
      return true;
    return false;
  }
  function getSharedSecret(privateA, publicB, isCompressed = true) {
    if (isProbPub(privateA))
      throw new Error("first arg must be private key");
    if (!isProbPub(publicB))
      throw new Error("second arg must be public key");
    const b = Point3.fromHex(publicB);
    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);
  }
  const bits2int = CURVE.bits2int || function(bytes4) {
    const num = bytesToNumberBE2(bytes4);
    const delta = bytes4.length * 8 - CURVE.nBitLength;
    return delta > 0 ? num >> BigInt(delta) : num;
  };
  const bits2int_modN = CURVE.bits2int_modN || function(bytes4) {
    return modN(bits2int(bytes4));
  };
  const ORDER_MASK = bitMask2(CURVE.nBitLength);
  function int2octets(num) {
    if (typeof num !== "bigint")
      throw new Error("bigint expected");
    if (!(_0n13 <= num && num < ORDER_MASK))
      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);
    return numberToBytesBE2(num, CURVE.nByteLength);
  }
  function prepSig(msgHash, privateKey, opts = defaultSigOpts) {
    if (["recovered", "canonical"].some((k) => k in opts))
      throw new Error("sign() legacy options not supported");
    const { hash: hash3, randomBytes: randomBytes4 } = CURVE;
    let { lowS, prehash, extraEntropy: ent } = opts;
    if (lowS == null)
      lowS = true;
    msgHash = ensureBytes3("msgHash", msgHash);
    if (prehash)
      msgHash = ensureBytes3("prehashed msgHash", hash3(msgHash));
    const h1int = bits2int_modN(msgHash);
    const d = normPrivateKeyToScalar(privateKey);
    const seedArgs = [int2octets(d), int2octets(h1int)];
    if (ent != null) {
      const e2 = ent === true ? randomBytes4(Fp5.BYTES) : ent;
      seedArgs.push(ensureBytes3("extraEntropy", e2));
    }
    const seed = concatBytes4(...seedArgs);
    const m = h1int;
    function k2sig(kBytes) {
      const k = bits2int(kBytes);
      if (!isWithinCurveOrder(k))
        return;
      const ik = invN(k);
      const q = Point3.BASE.multiply(k).toAffine();
      const r2 = modN(q.x);
      if (r2 === _0n13)
        return;
      const s = modN(ik * modN(m + r2 * d));
      if (s === _0n13)
        return;
      let recovery = (q.x === r2 ? 0 : 2) | Number(q.y & _1n13);
      let normS = s;
      if (lowS && isBiggerThanHalfOrder(s)) {
        normS = normalizeS(s);
        recovery ^= 1;
      }
      return new Signature2(r2, normS, recovery);
    }
    return { seed, k2sig };
  }
  const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };
  const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };
  function sign2(msgHash, privKey, opts = defaultSigOpts) {
    const { seed, k2sig } = prepSig(msgHash, privKey, opts);
    const C = CURVE;
    const drbg = createHmacDrbg2(C.hash.outputLen, C.nByteLength, C.hmac);
    return drbg(seed, k2sig);
  }
  Point3.BASE._setWindowSize(8);
  function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {
    const sg = signature;
    msgHash = ensureBytes3("msgHash", msgHash);
    publicKey = ensureBytes3("publicKey", publicKey);
    if ("strict" in opts)
      throw new Error("options.strict was renamed to lowS");
    const { lowS, prehash } = opts;
    let _sig = void 0;
    let P2;
    try {
      if (typeof sg === "string" || sg instanceof Uint8Array) {
        try {
          _sig = Signature2.fromDER(sg);
        } catch (derError) {
          if (!(derError instanceof DER2.Err))
            throw derError;
          _sig = Signature2.fromCompact(sg);
        }
      } else if (typeof sg === "object" && typeof sg.r === "bigint" && typeof sg.s === "bigint") {
        const { r: r3, s: s2 } = sg;
        _sig = new Signature2(r3, s2);
      } else {
        throw new Error("PARSE");
      }
      P2 = Point3.fromHex(publicKey);
    } catch (error) {
      if (error.message === "PARSE")
        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);
      return false;
    }
    if (lowS && _sig.hasHighS())
      return false;
    if (prehash)
      msgHash = CURVE.hash(msgHash);
    const { r: r2, s } = _sig;
    const h = bits2int_modN(msgHash);
    const is = invN(s);
    const u1 = modN(h * is);
    const u2 = modN(r2 * is);
    const R = Point3.BASE.multiplyAndAddUnsafe(P2, u1, u2)?.toAffine();
    if (!R)
      return false;
    const v = modN(R.x);
    return v === r2;
  }
  return {
    CURVE,
    getPublicKey,
    getSharedSecret,
    sign: sign2,
    verify,
    ProjectivePoint: Point3,
    Signature: Signature2,
    utils
  };
}

// node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/_shortw_utils.js
function getHash2(hash3) {
  return {
    hash: hash3,
    hmac: (key, ...msgs) => hmac2(hash3, key, concatBytes3(...msgs)),
    randomBytes: randomBytes2
  };
}
function createCurve2(curveDef, defHash) {
  const create4 = (hash3) => weierstrass2({ ...curveDef, ...getHash2(hash3) });
  return Object.freeze({ ...create4(defHash), create: create4 });
}

// node_modules/.pnpm/@noble+curves@1.2.0/node_modules/@noble/curves/esm/secp256k1.js
var secp256k1P2 = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f");
var secp256k1N2 = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
var _1n14 = BigInt(1);
var _2n12 = BigInt(2);
var divNearest2 = (a, b) => (a + b / _2n12) / b;
function sqrtMod2(y) {
  const P2 = secp256k1P2;
  const _3n5 = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);
  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);
  const b2 = y * y * y % P2;
  const b3 = b2 * b2 * y % P2;
  const b6 = pow22(b3, _3n5, P2) * b3 % P2;
  const b9 = pow22(b6, _3n5, P2) * b3 % P2;
  const b11 = pow22(b9, _2n12, P2) * b2 % P2;
  const b22 = pow22(b11, _11n, P2) * b11 % P2;
  const b44 = pow22(b22, _22n, P2) * b22 % P2;
  const b88 = pow22(b44, _44n, P2) * b44 % P2;
  const b176 = pow22(b88, _88n, P2) * b88 % P2;
  const b220 = pow22(b176, _44n, P2) * b44 % P2;
  const b223 = pow22(b220, _3n5, P2) * b3 % P2;
  const t1 = pow22(b223, _23n, P2) * b22 % P2;
  const t2 = pow22(t1, _6n, P2) * b2 % P2;
  const root = pow22(t2, _2n12, P2);
  if (!Fp4.eql(Fp4.sqr(root), y))
    throw new Error("Cannot find square root");
  return root;
}
var Fp4 = Field2(secp256k1P2, void 0, void 0, { sqrt: sqrtMod2 });
var secp256k12 = createCurve2({
  a: BigInt(0),
  b: BigInt(7),
  Fp: Fp4,
  n: secp256k1N2,
  // Base point (x, y) aka generator point
  Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
  Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
  h: BigInt(1),
  lowS: true,
  /**
   * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.
   * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.
   * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.
   * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066
   */
  endo: {
    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
    splitScalar: (k) => {
      const n2 = secp256k1N2;
      const a1 = BigInt("0x3086d221a7d46bcde86c90e49284eb15");
      const b1 = -_1n14 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3");
      const a2 = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8");
      const b2 = a1;
      const POW_2_128 = BigInt("0x100000000000000000000000000000000");
      const c1 = divNearest2(b2 * k, n2);
      const c2 = divNearest2(-b1 * k, n2);
      let k1 = mod2(k - c1 * a1 - c2 * a2, n2);
      let k2 = mod2(-c1 * b1 - c2 * b2, n2);
      const k1neg = k1 > POW_2_128;
      const k2neg = k2 > POW_2_128;
      if (k1neg)
        k1 = n2 - k1;
      if (k2neg)
        k2 = n2 - k2;
      if (k1 > POW_2_128 || k2 > POW_2_128) {
        throw new Error("splitScalar: Endomorphism failed, k=" + k);
      }
      return { k1neg, k1, k2neg, k2 };
    }
  }
}, sha2565);
var _0n14 = BigInt(0);
var Point2 = secp256k12.ProjectivePoint;

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/constants/hashes.js
var ZeroHash = "0x0000000000000000000000000000000000000000000000000000000000000000";

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/crypto/signature.js
var BN_02 = BigInt(0);
var BN_12 = BigInt(1);
var BN_2 = BigInt(2);
var BN_27 = BigInt(27);
var BN_28 = BigInt(28);
var BN_35 = BigInt(35);
var _guard = {};
function toUint256(value) {
  return zeroPadValue(toBeArray(value), 32);
}
var Signature = class _Signature {
  #r;
  #s;
  #v;
  #networkV;
  /**
   *  The ``r`` value for a signautre.
   *
   *  This represents the ``x`` coordinate of a "reference" or
   *  challenge point, from which the ``y`` can be computed.
   */
  get r() {
    return this.#r;
  }
  set r(value) {
    assertArgument(dataLength(value) === 32, "invalid r", "value", value);
    this.#r = hexlify(value);
  }
  /**
   *  The ``s`` value for a signature.
   */
  get s() {
    return this.#s;
  }
  set s(_value) {
    assertArgument(dataLength(_value) === 32, "invalid s", "value", _value);
    const value = hexlify(_value);
    assertArgument(parseInt(value.substring(0, 3)) < 8, "non-canonical s", "value", value);
    this.#s = value;
  }
  /**
   *  The ``v`` value for a signature.
   *
   *  Since a given ``x`` value for ``r`` has two possible values for
   *  its correspondin ``y``, the ``v`` indicates which of the two ``y``
   *  values to use.
   *
   *  It is normalized to the values ``27`` or ``28`` for legacy
   *  purposes.
   */
  get v() {
    return this.#v;
  }
  set v(value) {
    const v = getNumber(value, "value");
    assertArgument(v === 27 || v === 28, "invalid v", "v", value);
    this.#v = v;
  }
  /**
   *  The EIP-155 ``v`` for legacy transactions. For non-legacy
   *  transactions, this value is ``null``.
   */
  get networkV() {
    return this.#networkV;
  }
  /**
   *  The chain ID for EIP-155 legacy transactions. For non-legacy
   *  transactions, this value is ``null``.
   */
  get legacyChainId() {
    const v = this.networkV;
    if (v == null) {
      return null;
    }
    return _Signature.getChainId(v);
  }
  /**
   *  The ``yParity`` for the signature.
   *
   *  See ``v`` for more details on how this value is used.
   */
  get yParity() {
    return this.v === 27 ? 0 : 1;
  }
  /**
   *  The [[link-eip-2098]] compact representation of the ``yParity``
   *  and ``s`` compacted into a single ``bytes32``.
   */
  get yParityAndS() {
    const yParityAndS = getBytes(this.s);
    if (this.yParity) {
      yParityAndS[0] |= 128;
    }
    return hexlify(yParityAndS);
  }
  /**
   *  The [[link-eip-2098]] compact representation.
   */
  get compactSerialized() {
    return concat2([this.r, this.yParityAndS]);
  }
  /**
   *  The serialized representation.
   */
  get serialized() {
    return concat2([this.r, this.s, this.yParity ? "0x1c" : "0x1b"]);
  }
  /**
   *  @private
   */
  constructor(guard, r2, s, v) {
    assertPrivate(guard, _guard, "Signature");
    this.#r = r2;
    this.#s = s;
    this.#v = v;
    this.#networkV = null;
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return `Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`;
  }
  /**
   *  Returns a new identical [[Signature]].
   */
  clone() {
    const clone2 = new _Signature(_guard, this.r, this.s, this.v);
    if (this.networkV) {
      clone2.#networkV = this.networkV;
    }
    return clone2;
  }
  /**
   *  Returns a representation that is compatible with ``JSON.stringify``.
   */
  toJSON() {
    const networkV = this.networkV;
    return {
      _type: "signature",
      networkV: networkV != null ? networkV.toString() : null,
      r: this.r,
      s: this.s,
      v: this.v
    };
  }
  /**
   *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.
   *
   *  @example:
   *    Signature.getChainId(45)
   *    //_result:
   *
   *    Signature.getChainId(46)
   *    //_result:
   */
  static getChainId(v) {
    const bv = getBigInt(v, "v");
    if (bv == BN_27 || bv == BN_28) {
      return BN_02;
    }
    assertArgument(bv >= BN_35, "invalid EIP-155 v", "v", v);
    return (bv - BN_35) / BN_2;
  }
  /**
   *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.
   *
   *  Legacy transactions which use [[link-eip-155]] hijack the ``v``
   *  property to include the chain ID.
   *
   *  @example:
   *    Signature.getChainIdV(5, 27)
   *    //_result:
   *
   *    Signature.getChainIdV(5, 28)
   *    //_result:
   *
   */
  static getChainIdV(chainId, v) {
    return getBigInt(chainId) * BN_2 + BigInt(35 + v - 27);
  }
  /**
   *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,
   *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.
   *
   *  @example:
   *    // The values 0 and 1 imply v is actually yParity
   *    Signature.getNormalizedV(0)
   *    //_result:
   *
   *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)
   *    Signature.getNormalizedV(27)
   *    //_result:
   *
   *    // Legacy EIP-155 transaction (i.e. >= 35)
   *    Signature.getNormalizedV(46)
   *    //_result:
   *
   *    // Invalid values throw
   *    Signature.getNormalizedV(5)
   *    //_error:
   */
  static getNormalizedV(v) {
    const bv = getBigInt(v);
    if (bv === BN_02 || bv === BN_27) {
      return 27;
    }
    if (bv === BN_12 || bv === BN_28) {
      return 28;
    }
    assertArgument(bv >= BN_35, "invalid v", "v", v);
    return bv & BN_12 ? 27 : 28;
  }
  /**
   *  Creates a new [[Signature]].
   *
   *  If no %%sig%% is provided, a new [[Signature]] is created
   *  with default values.
   *
   *  If %%sig%% is a string, it is parsed.
   */
  static from(sig) {
    function assertError2(check, message2) {
      assertArgument(check, message2, "signature", sig);
    }
    ;
    if (sig == null) {
      return new _Signature(_guard, ZeroHash, ZeroHash, 27);
    }
    if (typeof sig === "string") {
      const bytes4 = getBytes(sig, "signature");
      if (bytes4.length === 64) {
        const r3 = hexlify(bytes4.slice(0, 32));
        const s2 = bytes4.slice(32, 64);
        const v2 = s2[0] & 128 ? 28 : 27;
        s2[0] &= 127;
        return new _Signature(_guard, r3, hexlify(s2), v2);
      }
      if (bytes4.length === 65) {
        const r3 = hexlify(bytes4.slice(0, 32));
        const s2 = bytes4.slice(32, 64);
        assertError2((s2[0] & 128) === 0, "non-canonical s");
        const v2 = _Signature.getNormalizedV(bytes4[64]);
        return new _Signature(_guard, r3, hexlify(s2), v2);
      }
      assertError2(false, "invalid raw signature length");
    }
    if (sig instanceof _Signature) {
      return sig.clone();
    }
    const _r = sig.r;
    assertError2(_r != null, "missing r");
    const r2 = toUint256(_r);
    const s = function(s2, yParityAndS) {
      if (s2 != null) {
        return toUint256(s2);
      }
      if (yParityAndS != null) {
        assertError2(isHexString(yParityAndS, 32), "invalid yParityAndS");
        const bytes4 = getBytes(yParityAndS);
        bytes4[0] &= 127;
        return hexlify(bytes4);
      }
      assertError2(false, "missing s");
    }(sig.s, sig.yParityAndS);
    assertError2((getBytes(s)[0] & 128) == 0, "non-canonical s");
    const { networkV, v } = function(_v, yParityAndS, yParity) {
      if (_v != null) {
        const v2 = getBigInt(_v);
        return {
          networkV: v2 >= BN_35 ? v2 : void 0,
          v: _Signature.getNormalizedV(v2)
        };
      }
      if (yParityAndS != null) {
        assertError2(isHexString(yParityAndS, 32), "invalid yParityAndS");
        return { v: getBytes(yParityAndS)[0] & 128 ? 28 : 27 };
      }
      if (yParity != null) {
        switch (getNumber(yParity, "sig.yParity")) {
          case 0:
            return { v: 27 };
          case 1:
            return { v: 28 };
        }
        assertError2(false, "invalid yParity");
      }
      assertError2(false, "missing v");
    }(sig.v, sig.yParityAndS, sig.yParity);
    const result = new _Signature(_guard, r2, s, v);
    if (networkV) {
      result.#networkV = networkV;
    }
    assertError2(sig.yParity == null || getNumber(sig.yParity, "sig.yParity") === result.yParity, "yParity mismatch");
    assertError2(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, "yParityAndS mismatch");
    return result;
  }
};

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/crypto/signing-key.js
var SigningKey = class _SigningKey {
  #privateKey;
  /**
   *  Creates a new **SigningKey** for %%privateKey%%.
   */
  constructor(privateKey) {
    assertArgument(dataLength(privateKey) === 32, "invalid private key", "privateKey", "[REDACTED]");
    this.#privateKey = hexlify(privateKey);
  }
  /**
   *  The private key.
   */
  get privateKey() {
    return this.#privateKey;
  }
  /**
   *  The uncompressed public key.
   *
   * This will always begin with the prefix ``0x04`` and be 132
   * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).
   */
  get publicKey() {
    return _SigningKey.computePublicKey(this.#privateKey);
  }
  /**
   *  The compressed public key.
   *
   *  This will always begin with either the prefix ``0x02`` or ``0x03``
   *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal
   *  nibbles)
   */
  get compressedPublicKey() {
    return _SigningKey.computePublicKey(this.#privateKey, true);
  }
  /**
   *  Return the signature of the signed %%digest%%.
   */
  sign(digest4) {
    assertArgument(dataLength(digest4) === 32, "invalid digest length", "digest", digest4);
    const sig = secp256k12.sign(getBytesCopy(digest4), getBytesCopy(this.#privateKey), {
      lowS: true
    });
    return Signature.from({
      r: toBeHex(sig.r, 32),
      s: toBeHex(sig.s, 32),
      v: sig.recovery ? 28 : 27
    });
  }
  /**
   *  Returns the [[link-wiki-ecdh]] shared secret between this
   *  private key and the %%other%% key.
   *
   *  The %%other%% key may be any type of key, a raw public key,
   *  a compressed/uncompressed pubic key or aprivate key.
   *
   *  Best practice is usually to use a cryptographic hash on the
   *  returned value before using it as a symetric secret.
   *
   *  @example:
   *    sign1 = new SigningKey(id("some-secret-1"))
   *    sign2 = new SigningKey(id("some-secret-2"))
   *
   *    // Notice that privA.computeSharedSecret(pubB)...
   *    sign1.computeSharedSecret(sign2.publicKey)
   *    //_result:
   *
   *    // ...is equal to privB.computeSharedSecret(pubA).
   *    sign2.computeSharedSecret(sign1.publicKey)
   *    //_result:
   */
  computeSharedSecret(other) {
    const pubKey = _SigningKey.computePublicKey(other);
    return hexlify(secp256k12.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));
  }
  /**
   *  Compute the public key for %%key%%, optionally %%compressed%%.
   *
   *  The %%key%% may be any type of key, a raw public key, a
   *  compressed/uncompressed public key or private key.
   *
   *  @example:
   *    sign = new SigningKey(id("some-secret"));
   *
   *    // Compute the uncompressed public key for a private key
   *    SigningKey.computePublicKey(sign.privateKey)
   *    //_result:
   *
   *    // Compute the compressed public key for a private key
   *    SigningKey.computePublicKey(sign.privateKey, true)
   *    //_result:
   *
   *    // Compute the uncompressed public key
   *    SigningKey.computePublicKey(sign.publicKey, false);
   *    //_result:
   *
   *    // Compute the Compressed a public key
   *    SigningKey.computePublicKey(sign.publicKey, true);
   *    //_result:
   */
  static computePublicKey(key, compressed) {
    let bytes4 = getBytes(key, "key");
    if (bytes4.length === 32) {
      const pubKey = secp256k12.getPublicKey(bytes4, !!compressed);
      return hexlify(pubKey);
    }
    if (bytes4.length === 64) {
      const pub = new Uint8Array(65);
      pub[0] = 4;
      pub.set(bytes4, 1);
      bytes4 = pub;
    }
    const point = secp256k12.ProjectivePoint.fromHex(bytes4);
    return hexlify(point.toRawBytes(compressed));
  }
  /**
   *  Returns the public key for the private key which produced the
   *  %%signature%% for the given %%digest%%.
   *
   *  @example:
   *    key = new SigningKey(id("some-secret"))
   *    digest = id("hello world")
   *    sig = key.sign(digest)
   *
   *    // Notice the signer public key...
   *    key.publicKey
   *    //_result:
   *
   *    // ...is equal to the recovered public key
   *    SigningKey.recoverPublicKey(digest, sig)
   *    //_result:
   *
   */
  static recoverPublicKey(digest4, signature) {
    assertArgument(dataLength(digest4) === 32, "invalid digest length", "digest", digest4);
    const sig = Signature.from(signature);
    let secpSig = secp256k12.Signature.fromCompact(getBytesCopy(concat2([sig.r, sig.s])));
    secpSig = secpSig.addRecoveryBit(sig.yParity);
    const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest4));
    assertArgument(pubKey != null, "invalid signautre for digest", "signature", signature);
    return "0x" + pubKey.toHex(false);
  }
  /**
   *  Returns the point resulting from adding the ellipic curve points
   *  %%p0%% and %%p1%%.
   *
   *  This is not a common function most developers should require, but
   *  can be useful for certain privacy-specific techniques.
   *
   *  For example, it is used by [[HDNodeWallet]] to compute child
   *  addresses from parent public keys and chain codes.
   */
  static addPoints(p0, p1, compressed) {
    const pub0 = secp256k12.ProjectivePoint.fromHex(_SigningKey.computePublicKey(p0).substring(2));
    const pub1 = secp256k12.ProjectivePoint.fromHex(_SigningKey.computePublicKey(p1).substring(2));
    return "0x" + pub0.add(pub1).toHex(!!compressed);
  }
};

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/address/address.js
var BN_03 = BigInt(0);
var BN_36 = BigInt(36);
function getChecksumAddress(address) {
  address = address.toLowerCase();
  const chars = address.substring(2).split("");
  const expanded = new Uint8Array(40);
  for (let i = 0; i < 40; i++) {
    expanded[i] = chars[i].charCodeAt(0);
  }
  const hashed = getBytes(keccak256(expanded));
  for (let i = 0; i < 40; i += 2) {
    if (hashed[i >> 1] >> 4 >= 8) {
      chars[i] = chars[i].toUpperCase();
    }
    if ((hashed[i >> 1] & 15) >= 8) {
      chars[i + 1] = chars[i + 1].toUpperCase();
    }
  }
  return "0x" + chars.join("");
}
var ibanLookup = {};
for (let i = 0; i < 10; i++) {
  ibanLookup[String(i)] = String(i);
}
for (let i = 0; i < 26; i++) {
  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
var safeDigits = 15;
function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  let expanded = address.split("").map((c) => {
    return ibanLookup[c];
  }).join("");
  while (expanded.length >= safeDigits) {
    let block2 = expanded.substring(0, safeDigits);
    expanded = parseInt(block2, 10) % 97 + expanded.substring(block2.length);
  }
  let checksum = String(98 - parseInt(expanded, 10) % 97);
  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }
  return checksum;
}
var Base36 = function() {
  ;
  const result = {};
  for (let i = 0; i < 36; i++) {
    const key = "0123456789abcdefghijklmnopqrstuvwxyz"[i];
    result[key] = BigInt(i);
  }
  return result;
}();
function fromBase36(value) {
  value = value.toLowerCase();
  let result = BN_03;
  for (let i = 0; i < value.length; i++) {
    result = result * BN_36 + Base36[value[i]];
  }
  return result;
}
function getAddress(address) {
  assertArgument(typeof address === "string", "invalid address", "address", address);
  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    if (!address.startsWith("0x")) {
      address = "0x" + address;
    }
    const result = getChecksumAddress(address);
    assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, "bad address checksum", "address", address);
    return result;
  }
  if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    assertArgument(address.substring(2, 4) === ibanChecksum(address), "bad icap checksum", "address", address);
    let result = fromBase36(address.substring(4)).toString(16);
    while (result.length < 40) {
      result = "0" + result;
    }
    return getChecksumAddress("0x" + result);
  }
  assertArgument(false, "invalid address", "address", address);
}

// node_modules/.pnpm/ethers@6.10.0/node_modules/ethers/lib.esm/transaction/address.js
function computeAddress(key) {
  let pubkey;
  if (typeof key === "string") {
    pubkey = SigningKey.computePublicKey(key, false);
  } else {
    pubkey = key.publicKey;
  }
  return getAddress(keccak256("0x" + pubkey.substring(4)).substring(26));
}

// node_modules/.pnpm/@veramo+utils@5.5.4-next.22/node_modules/@veramo/utils/build/did-utils.js
var import_debug = __toESM(require_browser(), 1);

// node_modules/.pnpm/uint8arrays@4.0.10/node_modules/uint8arrays/dist/src/util/as-uint8array.js
function asUint8Array3(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/.pnpm/uint8arrays@4.0.10/node_modules/uint8arrays/dist/src/alloc.js
function allocUnsafe3(size = 0) {
  if (globalThis.Buffer?.allocUnsafe != null) {
    return asUint8Array3(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base10.js
var base10_exports3 = {};
__export(base10_exports3, {
  base10: () => base103
});
var base103 = baseX3({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base16.js
var base16_exports3 = {};
__export(base16_exports3, {
  base16: () => base163,
  base16upper: () => base16upper3
});
var base163 = rfc46483({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper3 = rfc46483({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base2.js
var base2_exports3 = {};
__export(base2_exports3, {
  base2: () => base23
});
var base23 = rfc46483({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base256emoji.js
var base256emoji_exports3 = {};
__export(base256emoji_exports3, {
  base256emoji: () => base256emoji3
});
var alphabet4 = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}");
var alphabetBytesToChars3 = (
  /** @type {string[]} */
  alphabet4.reduce(
    (p, c, i) => {
      p[i] = c;
      return p;
    },
    /** @type {string[]} */
    []
  )
);
var alphabetCharsToBytes3 = (
  /** @type {number[]} */
  alphabet4.reduce(
    (p, c, i) => {
      p[
        /** @type {number} */
        c.codePointAt(0)
      ] = i;
      return p;
    },
    /** @type {number[]} */
    []
  )
);
function encode13(data) {
  return data.reduce((p, c) => {
    p += alphabetBytesToChars3[c];
    return p;
  }, "");
}
function decode16(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes3[
      /** @type {number} */
      char.codePointAt(0)
    ];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji3 = from4({
  prefix: "\u{1F680}",
  name: "base256emoji",
  encode: encode13,
  decode: decode16
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base36.js
var base36_exports3 = {};
__export(base36_exports3, {
  base36: () => base363,
  base36upper: () => base36upper3
});
var base363 = baseX3({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper3 = baseX3({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base64.js
var base64_exports3 = {};
__export(base64_exports3, {
  base64: () => base643,
  base64pad: () => base64pad3,
  base64url: () => base64url3,
  base64urlpad: () => base64urlpad3
});
var base643 = rfc46483({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad3 = rfc46483({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url3 = rfc46483({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad3 = rfc46483({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/base8.js
var base8_exports3 = {};
__export(base8_exports3, {
  base8: () => base83
});
var base83 = rfc46483({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/bases/identity.js
var identity_exports5 = {};
__export(identity_exports5, {
  identity: () => identity5
});
var identity5 = from4({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString4(buf),
  decode: (str) => fromString4(str)
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/codecs/json.js
var textEncoder5 = new TextEncoder();
var textDecoder4 = new TextDecoder();

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/hashes/identity.js
var identity_exports6 = {};
__export(identity_exports6, {
  identity: () => identity6
});
var code4 = 0;
var name3 = "identity";
var encode14 = coerce3;
var digest3 = (input) => create3(code4, encode14(input));
var identity6 = { code: code4, name: name3, encode: encode14, digest: digest3 };

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/hashes/sha2-browser.js
var sha2_browser_exports3 = {};
__export(sha2_browser_exports3, {
  sha256: () => sha2567,
  sha512: () => sha5125
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/hashes/hasher.js
var from6 = ({ name: name4, code: code5, encode: encode15 }) => new Hasher3(name4, code5, encode15);
var Hasher3 = class {
  /**
   *
   * @param {Name} name
   * @param {Code} code
   * @param {(input: Uint8Array) => Await<Uint8Array>} encode
   */
  constructor(name4, code5, encode15) {
    this.name = name4;
    this.code = code5;
    this.encode = encode15;
  }
  /**
   * @param {Uint8Array} input
   * @returns {Await<Digest.Digest<Code, number>>}
   */
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create3(this.code, result) : result.then((digest4) => create3(this.code, digest4));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/hashes/sha2-browser.js
var sha3 = (name4) => (
  /**
   * @param {Uint8Array} data
   */
  async (data) => new Uint8Array(await crypto.subtle.digest(name4, data))
);
var sha2567 = from6({
  name: "sha2-256",
  code: 18,
  encode: sha3("SHA-256")
});
var sha5125 = from6({
  name: "sha2-512",
  code: 19,
  encode: sha3("SHA-512")
});

// node_modules/.pnpm/multiformats@12.1.3/node_modules/multiformats/src/basics.js
var bases3 = { ...identity_exports5, ...base2_exports3, ...base8_exports3, ...base10_exports3, ...base16_exports3, ...base32_exports3, ...base36_exports3, ...base58_exports3, ...base64_exports3, ...base256emoji_exports3 };
var hashes3 = { ...sha2_browser_exports3, ...identity_exports6 };

// node_modules/.pnpm/uint8arrays@4.0.10/node_modules/uint8arrays/dist/src/util/bases.js
function createCodec4(name4, prefix, encode15, decode17) {
  return {
    name: name4,
    prefix,
    encoder: {
      name: name4,
      prefix,
      encode: encode15
    },
    decoder: {
      decode: decode17
    }
  };
}
var string3 = createCodec4("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii3 = createCodec4("ascii", "a", (buf) => {
  let string4 = "a";
  for (let i = 0; i < buf.length; i++) {
    string4 += String.fromCharCode(buf[i]);
  }
  return string4;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe3(str.length);
  for (let i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
var BASES3 = {
  utf8: string3,
  "utf-8": string3,
  hex: bases3.base16,
  latin1: ascii3,
  ascii: ascii3,
  binary: ascii3,
  ...bases3
};

// node_modules/.pnpm/@veramo+utils@5.5.4-next.22/node_modules/@veramo/utils/build/did-utils.js
var debug = (0, import_debug.default)("veramo:utils");
function getEthereumAddress(verificationMethod) {
  let vmEthAddr = verificationMethod.ethereumAddress?.toLowerCase();
  if (!vmEthAddr) {
    if (verificationMethod.blockchainAccountId?.includes("@eip155")) {
      vmEthAddr = verificationMethod.blockchainAccountId?.split("@eip155")[0].toLowerCase();
    } else if (verificationMethod.blockchainAccountId?.startsWith("eip155")) {
      vmEthAddr = verificationMethod.blockchainAccountId.split(":")[2]?.toLowerCase();
    } else if (verificationMethod.publicKeyHex || verificationMethod.publicKeyBase58 || verificationMethod.publicKeyBase64 || verificationMethod.publicKeyJwk) {
      const pbBytes = extractPublicKeyBytes(verificationMethod);
      const pbHex = SigningKey.computePublicKey(pbBytes, false);
      vmEthAddr = computeAddress(pbHex).toLowerCase();
    }
  }
  return vmEthAddr;
}

// src/Icon.tsx
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var Icon = ({ small }) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
    "svg",
    {
      width: small ? "16" : "32",
      height: small ? "14" : "29",
      viewBox: "0 0 44 29",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M29.8889 9.06558C29.7188 9.23851 29.4385 9.12011 29.4385 8.87751C29.4385 8.65607 29.4385 8.41187 29.428 8.18133C29.1658 -1.39378 14.8334 -1.39378 14.5712 8.18133C14.5652 8.41187 14.5622 8.64393 14.5622 8.87751C14.5622 9.11174 14.2776 9.231 14.1118 9.06558C13.9491 8.90329 13.7804 8.73797 13.6146 8.58023C6.69848 1.99611 -3.42947 12.2082 3.10858 19.1564C3.26726 19.3242 3.42845 19.4911 3.59215 19.6569C11.4808 27.5993 21.9978 27.6 21.9996 27.6C21.9996 27.6 21.9997 27.6 21.9996 27.6C22.0014 27.6 32.5199 27.5993 40.4086 19.6569C40.5733 19.4921 40.7345 19.3252 40.8921 19.1564C47.4302 12.2007 37.2962 1.99611 30.3861 8.58023C30.2189 8.73797 30.0486 8.90026 29.8889 9.06558Z", fill: "currentColor", stroke: "currentColor", "stroke-width": "1.65481", "stroke-miterlimit": "10" }),
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M28.0929 16.2621C27.8709 16.2621 27.7942 16.5849 27.9357 16.7559C28.1863 17.0586 28.337 17.448 28.337 17.8729C28.337 18.837 27.5607 19.6186 26.6031 19.6186C25.6454 19.6186 24.8691 18.837 24.8691 17.8729C24.8691 17.8213 24.8023 17.7957 24.7721 17.8375C24.4987 18.2156 24.3141 18.6401 24.2383 19.0859C24.1956 19.3369 23.993 19.5447 23.7384 19.5447H23.5977C23.2653 19.5447 22.9911 19.2734 23.0402 18.9447C23.3764 16.6923 25.5814 15.0586 28.0929 15.0586C30.6044 15.0586 32.8094 16.6923 33.1457 18.9447C33.1947 19.2734 32.9206 19.5447 32.5882 19.5447C32.2559 19.5447 31.9927 19.2721 31.9205 18.9477C31.5917 17.4712 30.0678 16.2621 28.0929 16.2621ZM12.6953 17.8729C12.6953 17.8049 12.6077 17.7684 12.5665 17.8225C12.2742 18.2065 12.0751 18.6414 11.9908 19.0998C11.9411 19.3705 11.7224 19.5955 11.4471 19.5955H11.3437C11.0114 19.5955 10.7372 19.3242 10.7862 18.9955C11.1223 16.7418 13.3275 15.1094 15.839 15.1094C18.3505 15.1094 20.5557 16.7418 20.8918 18.9955C20.9408 19.3242 20.6666 19.5955 20.3343 19.5955C20.002 19.5955 19.7388 19.3229 19.6666 18.9985C19.3381 17.5211 17.8142 16.3129 15.839 16.3129C15.6594 16.3129 15.5936 16.5669 15.7139 16.7004C15.9931 17.0102 16.1632 17.4216 16.1632 17.8729C16.1632 18.837 15.3869 19.6186 14.4292 19.6186C13.4716 19.6186 12.6953 18.837 12.6953 17.8729ZM24.8181 21.8928C24.5264 21.7334 24.1634 21.8477 23.9286 22.0828C23.4758 22.536 22.7894 22.8457 21.995 22.8457C21.1985 22.8457 20.5129 22.5391 20.0611 22.0856C19.8265 21.8502 19.4641 21.7345 19.1719 21.8928C18.8797 22.0511 18.7677 22.4207 18.9771 22.6788C19.6625 23.5234 20.7733 24.0492 21.995 24.0492C23.2174 24.0492 24.3257 23.5179 25.0102 22.6795C25.2204 22.422 25.1097 22.0521 24.8181 21.8928Z", fill: "#3D4B41" })
      ]
    }
  );
};

// node_modules/.pnpm/@lens-protocol+storage@0.7.5-alpha.8/node_modules/@lens-protocol/storage/dist/asyncToGenerator-0859ab5c.esm.js
function _regeneratorRuntime() {
  _regeneratorRuntime = function() {
    return e2;
  };
  var t2, e2 = {}, r2 = Object.prototype, n2 = r2.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r3) {
    t3[e3] = r3.value;
  }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
  function define(t3, e3, r3) {
    return Object.defineProperty(t3, e3, {
      value: r3,
      enumerable: true,
      configurable: true,
      writable: true
    }), t3[e3];
  }
  try {
    define({}, "");
  } catch (t3) {
    define = function(t4, e3, r3) {
      return t4[e3] = r3;
    };
  }
  function wrap2(t3, e3, r3, n3) {
    var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
    return o2(a2, "_invoke", {
      value: makeInvokeMethod(t3, r3, c2)
    }), a2;
  }
  function tryCatch(t3, e3, r3) {
    try {
      return {
        type: "normal",
        arg: t3.call(e3, r3)
      };
    } catch (t4) {
      return {
        type: "throw",
        arg: t4
      };
    }
  }
  e2.wrap = wrap2;
  var h = "suspendedStart", l = "suspendedYield", f2 = "executing", s = "completed", y = {};
  function Generator() {
  }
  function GeneratorFunction() {
  }
  function GeneratorFunctionPrototype() {
  }
  var p = {};
  define(p, a, function() {
    return this;
  });
  var d = Object.getPrototypeOf, v = d && d(d(values([])));
  v && v !== r2 && n2.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t3) {
    ["next", "throw", "return"].forEach(function(e3) {
      define(t3, e3, function(t4) {
        return this._invoke(e3, t4);
      });
    });
  }
  function AsyncIterator(t3, e3) {
    function invoke(r4, o3, i2, a2) {
      var c2 = tryCatch(t3[r4], t3, o3);
      if ("throw" !== c2.type) {
        var u2 = c2.arg, h2 = u2.value;
        return h2 && "object" == typeof h2 && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
          invoke("next", t4, i2, a2);
        }, function(t4) {
          invoke("throw", t4, i2, a2);
        }) : e3.resolve(h2).then(function(t4) {
          u2.value = t4, i2(u2);
        }, function(t4) {
          return invoke("throw", t4, i2, a2);
        });
      }
      a2(c2.arg);
    }
    var r3;
    o2(this, "_invoke", {
      value: function(t4, n3) {
        function callInvokeWithMethodAndArg() {
          return new e3(function(e4, r4) {
            invoke(t4, n3, e4, r4);
          });
        }
        return r3 = r3 ? r3.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e3, r3, n3) {
    var o3 = h;
    return function(i2, a2) {
      if (o3 === f2)
        throw new Error("Generator is already running");
      if (o3 === s) {
        if ("throw" === i2)
          throw a2;
        return {
          value: t2,
          done: true
        };
      }
      for (n3.method = i2, n3.arg = a2; ; ) {
        var c2 = n3.delegate;
        if (c2) {
          var u2 = maybeInvokeDelegate(c2, n3);
          if (u2) {
            if (u2 === y)
              continue;
            return u2;
          }
        }
        if ("next" === n3.method)
          n3.sent = n3._sent = n3.arg;
        else if ("throw" === n3.method) {
          if (o3 === h)
            throw o3 = s, n3.arg;
          n3.dispatchException(n3.arg);
        } else
          "return" === n3.method && n3.abrupt("return", n3.arg);
        o3 = f2;
        var p2 = tryCatch(e3, r3, n3);
        if ("normal" === p2.type) {
          if (o3 = n3.done ? s : l, p2.arg === y)
            continue;
          return {
            value: p2.arg,
            done: n3.done
          };
        }
        "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
      }
    };
  }
  function maybeInvokeDelegate(e3, r3) {
    var n3 = r3.method, o3 = e3.iterator[n3];
    if (o3 === t2)
      return r3.delegate = null, "throw" === n3 && e3.iterator.return && (r3.method = "return", r3.arg = t2, maybeInvokeDelegate(e3, r3), "throw" === r3.method) || "return" !== n3 && (r3.method = "throw", r3.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
    var i2 = tryCatch(o3, e3.iterator, r3.arg);
    if ("throw" === i2.type)
      return r3.method = "throw", r3.arg = i2.arg, r3.delegate = null, y;
    var a2 = i2.arg;
    return a2 ? a2.done ? (r3[e3.resultName] = a2.value, r3.next = e3.nextLoc, "return" !== r3.method && (r3.method = "next", r3.arg = t2), r3.delegate = null, y) : a2 : (r3.method = "throw", r3.arg = new TypeError("iterator result is not an object"), r3.delegate = null, y);
  }
  function pushTryEntry(t3) {
    var e3 = {
      tryLoc: t3[0]
    };
    1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
  }
  function resetTryEntry(t3) {
    var e3 = t3.completion || {};
    e3.type = "normal", delete e3.arg, t3.completion = e3;
  }
  function Context(t3) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t3.forEach(pushTryEntry, this), this.reset(true);
  }
  function values(e3) {
    if (e3 || "" === e3) {
      var r3 = e3[a];
      if (r3)
        return r3.call(e3);
      if ("function" == typeof e3.next)
        return e3;
      if (!isNaN(e3.length)) {
        var o3 = -1, i2 = function next() {
          for (; ++o3 < e3.length; )
            if (n2.call(e3, o3))
              return next.value = e3[o3], next.done = false, next;
          return next.value = t2, next.done = true, next;
        };
        return i2.next = i2;
      }
    }
    throw new TypeError(typeof e3 + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: true
  }), o2(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: true
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
    var e3 = "function" == typeof t3 && t3.constructor;
    return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
  }, e2.mark = function(t3) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
  }, e2.awrap = function(t3) {
    return {
      __await: t3
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
    return this;
  }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r3, n3, o3, i2) {
    void 0 === i2 && (i2 = Promise);
    var a2 = new AsyncIterator(wrap2(t3, r3, n3, o3), i2);
    return e2.isGeneratorFunction(r3) ? a2 : a2.next().then(function(t4) {
      return t4.done ? t4.value : a2.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
    return this;
  }), define(g, "toString", function() {
    return "[object Generator]";
  }), e2.keys = function(t3) {
    var e3 = Object(t3), r3 = [];
    for (var n3 in e3)
      r3.push(n3);
    return r3.reverse(), function next() {
      for (; r3.length; ) {
        var t4 = r3.pop();
        if (t4 in e3)
          return next.value = t4, next.done = false, next;
      }
      return next.done = true, next;
    };
  }, e2.values = values, Context.prototype = {
    constructor: Context,
    reset: function(e3) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3)
        for (var r3 in this)
          "t" === r3.charAt(0) && n2.call(this, r3) && !isNaN(+r3.slice(1)) && (this[r3] = t2);
    },
    stop: function() {
      this.done = true;
      var t3 = this.tryEntries[0].completion;
      if ("throw" === t3.type)
        throw t3.arg;
      return this.rval;
    },
    dispatchException: function(e3) {
      if (this.done)
        throw e3;
      var r3 = this;
      function handle(n3, o4) {
        return a2.type = "throw", a2.arg = e3, r3.next = n3, o4 && (r3.method = "next", r3.arg = t2), !!o4;
      }
      for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
        var i2 = this.tryEntries[o3], a2 = i2.completion;
        if ("root" === i2.tryLoc)
          return handle("end");
        if (i2.tryLoc <= this.prev) {
          var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
          if (c2 && u2) {
            if (this.prev < i2.catchLoc)
              return handle(i2.catchLoc, true);
            if (this.prev < i2.finallyLoc)
              return handle(i2.finallyLoc);
          } else if (c2) {
            if (this.prev < i2.catchLoc)
              return handle(i2.catchLoc, true);
          } else {
            if (!u2)
              throw new Error("try statement without catch or finally");
            if (this.prev < i2.finallyLoc)
              return handle(i2.finallyLoc);
          }
        }
      }
    },
    abrupt: function(t3, e3) {
      for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
        var o3 = this.tryEntries[r3];
        if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
          var i2 = o3;
          break;
        }
      }
      i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
      var a2 = i2 ? i2.completion : {};
      return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
    },
    complete: function(t3, e3) {
      if ("throw" === t3.type)
        throw t3.arg;
      return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
    },
    finish: function(t3) {
      for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
        var r3 = this.tryEntries[e3];
        if (r3.finallyLoc === t3)
          return this.complete(r3.completion, r3.afterLoc), resetTryEntry(r3), y;
      }
    },
    catch: function(t3) {
      for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
        var r3 = this.tryEntries[e3];
        if (r3.tryLoc === t3) {
          var n3 = r3.completion;
          if ("throw" === n3.type) {
            var o3 = n3.arg;
            resetTryEntry(r3);
          }
          return o3;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function(e3, r3, n3) {
      return this.delegate = {
        iterator: values(e3),
        resultName: r3,
        nextLoc: n3
      }, "next" === this.method && (this.arg = t2), y;
    }
  }, e2;
}
function asyncGeneratorStep(gen3, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen3[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self2 = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen3 = fn.apply(self2, args);
      function _next(value) {
        asyncGeneratorStep(gen3, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen3, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}

// node_modules/.pnpm/decimal.js@10.4.3/node_modules/decimal.js/decimal.mjs
var EXP_LIMIT = 9e15;
var MAX_DIGITS = 1e9;
var NUMERALS = "0123456789abcdef";
var LN10 = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
var PI = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
var DEFAULTS = {
  // These values must be integers within the stated ranges (inclusive).
  // Most of these values can be changed at run-time using the `Decimal.config` method.
  // The maximum number of significant digits of the result of a calculation or base conversion.
  // E.g. `Decimal.config({ precision: 20 });`
  precision: 20,
  // 1 to MAX_DIGITS
  // The rounding mode used when rounding to `precision`.
  //
  // ROUND_UP         0 Away from zero.
  // ROUND_DOWN       1 Towards zero.
  // ROUND_CEIL       2 Towards +Infinity.
  // ROUND_FLOOR      3 Towards -Infinity.
  // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
  // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
  // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
  // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
  // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
  //
  // E.g.
  // `Decimal.rounding = 4;`
  // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
  rounding: 4,
  // 0 to 8
  // The modulo mode used when calculating the modulus: a mod n.
  // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
  // The remainder (r) is calculated as: r = a - n * q.
  //
  // UP         0 The remainder is positive if the dividend is negative, else is negative.
  // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
  // FLOOR      3 The remainder has the same sign as the divisor (Python %).
  // HALF_EVEN  6 The IEEE 754 remainder function.
  // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
  //
  // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
  // division (9) are commonly used for the modulus operation. The other rounding modes can also
  // be used, but they may not give useful results.
  modulo: 1,
  // 0 to 9
  // The exponent value at and beneath which `toString` returns exponential notation.
  // JavaScript numbers: -7
  toExpNeg: -7,
  // 0 to -EXP_LIMIT
  // The exponent value at and above which `toString` returns exponential notation.
  // JavaScript numbers: 21
  toExpPos: 21,
  // 0 to EXP_LIMIT
  // The minimum exponent value, beneath which underflow to zero occurs.
  // JavaScript numbers: -324  (5e-324)
  minE: -EXP_LIMIT,
  // -1 to -EXP_LIMIT
  // The maximum exponent value, above which overflow to Infinity occurs.
  // JavaScript numbers: 308  (1.7976931348623157e+308)
  maxE: EXP_LIMIT,
  // 1 to EXP_LIMIT
  // Whether to use cryptographically-secure random number generation, if available.
  crypto: false
  // true/false
};
var inexact;
var quadrant;
var external = true;
var decimalError = "[DecimalError] ";
var invalidArgument = decimalError + "Invalid argument: ";
var precisionLimitExceeded = decimalError + "Precision limit exceeded";
var cryptoUnavailable = decimalError + "crypto unavailable";
var tag = "[object Decimal]";
var mathfloor = Math.floor;
var mathpow = Math.pow;
var isBinary = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
var isHex = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
var isOctal = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
var isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
var BASE = 1e7;
var LOG_BASE = 7;
var MAX_SAFE_INTEGER = 9007199254740991;
var LN10_PRECISION = LN10.length - 1;
var PI_PRECISION = PI.length - 1;
var P = { toStringTag: tag };
P.absoluteValue = P.abs = function() {
  var x = new this.constructor(this);
  if (x.s < 0)
    x.s = 1;
  return finalise(x);
};
P.ceil = function() {
  return finalise(new this.constructor(this), this.e + 1, 2);
};
P.clampedTo = P.clamp = function(min2, max2) {
  var k, x = this, Ctor = x.constructor;
  min2 = new Ctor(min2);
  max2 = new Ctor(max2);
  if (!min2.s || !max2.s)
    return new Ctor(NaN);
  if (min2.gt(max2))
    throw Error(invalidArgument + max2);
  k = x.cmp(min2);
  return k < 0 ? min2 : x.cmp(max2) > 0 ? max2 : new Ctor(x);
};
P.comparedTo = P.cmp = function(y) {
  var i, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;
  if (!xd || !yd) {
    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
  }
  if (!xd[0] || !yd[0])
    return xd[0] ? xs : yd[0] ? -ys : 0;
  if (xs !== ys)
    return xs;
  if (x.e !== y.e)
    return x.e > y.e ^ xs < 0 ? 1 : -1;
  xdL = xd.length;
  ydL = yd.length;
  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {
    if (xd[i] !== yd[i])
      return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;
  }
  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
};
P.cosine = P.cos = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.d)
    return new Ctor(NaN);
  if (!x.d[0])
    return new Ctor(1);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
  Ctor.rounding = 1;
  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);
};
P.cubeRoot = P.cbrt = function() {
  var e2, m, n2, r2, rep, s, sd, t2, t3, t3plusx, x = this, Ctor = x.constructor;
  if (!x.isFinite() || x.isZero())
    return new Ctor(x);
  external = false;
  s = x.s * mathpow(x.s * x, 1 / 3);
  if (!s || Math.abs(s) == 1 / 0) {
    n2 = digitsToString(x.d);
    e2 = x.e;
    if (s = (e2 - n2.length + 1) % 3)
      n2 += s == 1 || s == -2 ? "0" : "00";
    s = mathpow(n2, 1 / 3);
    e2 = mathfloor((e2 + 1) / 3) - (e2 % 3 == (e2 < 0 ? -1 : 2));
    if (s == 1 / 0) {
      n2 = "5e" + e2;
    } else {
      n2 = s.toExponential();
      n2 = n2.slice(0, n2.indexOf("e") + 1) + e2;
    }
    r2 = new Ctor(n2);
    r2.s = x.s;
  } else {
    r2 = new Ctor(s.toString());
  }
  sd = (e2 = Ctor.precision) + 3;
  for (; ; ) {
    t2 = r2;
    t3 = t2.times(t2).times(t2);
    t3plusx = t3.plus(x);
    r2 = divide(t3plusx.plus(x).times(t2), t3plusx.plus(t3), sd + 2, 1);
    if (digitsToString(t2.d).slice(0, sd) === (n2 = digitsToString(r2.d)).slice(0, sd)) {
      n2 = n2.slice(sd - 3, sd + 1);
      if (n2 == "9999" || !rep && n2 == "4999") {
        if (!rep) {
          finalise(t2, e2 + 1, 0);
          if (t2.times(t2).times(t2).eq(x)) {
            r2 = t2;
            break;
          }
        }
        sd += 4;
        rep = 1;
      } else {
        if (!+n2 || !+n2.slice(1) && n2.charAt(0) == "5") {
          finalise(r2, e2 + 1, 1);
          m = !r2.times(r2).times(r2).eq(x);
        }
        break;
      }
    }
  }
  external = true;
  return finalise(r2, e2, Ctor.rounding, m);
};
P.decimalPlaces = P.dp = function() {
  var w, d = this.d, n2 = NaN;
  if (d) {
    w = d.length - 1;
    n2 = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;
    w = d[w];
    if (w)
      for (; w % 10 == 0; w /= 10)
        n2--;
    if (n2 < 0)
      n2 = 0;
  }
  return n2;
};
P.dividedBy = P.div = function(y) {
  return divide(this, new this.constructor(y));
};
P.dividedToIntegerBy = P.divToInt = function(y) {
  var x = this, Ctor = x.constructor;
  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
};
P.equals = P.eq = function(y) {
  return this.cmp(y) === 0;
};
P.floor = function() {
  return finalise(new this.constructor(this), this.e + 1, 3);
};
P.greaterThan = P.gt = function(y) {
  return this.cmp(y) > 0;
};
P.greaterThanOrEqualTo = P.gte = function(y) {
  var k = this.cmp(y);
  return k == 1 || k === 0;
};
P.hyperbolicCosine = P.cosh = function() {
  var k, n2, pr, rm, len, x = this, Ctor = x.constructor, one = new Ctor(1);
  if (!x.isFinite())
    return new Ctor(x.s ? 1 / 0 : NaN);
  if (x.isZero())
    return one;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
  Ctor.rounding = 1;
  len = x.d.length;
  if (len < 32) {
    k = Math.ceil(len / 3);
    n2 = (1 / tinyPow(4, k)).toString();
  } else {
    k = 16;
    n2 = "2.3283064365386962890625e-10";
  }
  x = taylorSeries(Ctor, 1, x.times(n2), new Ctor(1), true);
  var cosh2_x, i = k, d8 = new Ctor(8);
  for (; i--; ) {
    cosh2_x = x.times(x);
    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
  }
  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);
};
P.hyperbolicSine = P.sinh = function() {
  var k, pr, rm, len, x = this, Ctor = x.constructor;
  if (!x.isFinite() || x.isZero())
    return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
  Ctor.rounding = 1;
  len = x.d.length;
  if (len < 3) {
    x = taylorSeries(Ctor, 2, x, x, true);
  } else {
    k = 1.4 * Math.sqrt(len);
    k = k > 16 ? 16 : k | 0;
    x = x.times(1 / tinyPow(5, k));
    x = taylorSeries(Ctor, 2, x, x, true);
    var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
    for (; k--; ) {
      sinh2_x = x.times(x);
      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
    }
  }
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(x, pr, rm, true);
};
P.hyperbolicTangent = P.tanh = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite())
    return new Ctor(x.s);
  if (x.isZero())
    return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + 7;
  Ctor.rounding = 1;
  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
};
P.inverseCosine = P.acos = function() {
  var halfPi, x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;
  if (k !== -1) {
    return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);
  }
  if (x.isZero())
    return getPi(Ctor, pr + 4, rm).times(0.5);
  Ctor.precision = pr + 6;
  Ctor.rounding = 1;
  x = x.asin();
  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return halfPi.minus(x);
};
P.inverseHyperbolicCosine = P.acosh = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (x.lte(1))
    return new Ctor(x.eq(1) ? 0 : NaN);
  if (!x.isFinite())
    return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
  Ctor.rounding = 1;
  external = false;
  x = x.times(x).minus(1).sqrt().plus(x);
  external = true;
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.ln();
};
P.inverseHyperbolicSine = P.asinh = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite() || x.isZero())
    return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
  Ctor.rounding = 1;
  external = false;
  x = x.times(x).plus(1).sqrt().plus(x);
  external = true;
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.ln();
};
P.inverseHyperbolicTangent = P.atanh = function() {
  var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;
  if (!x.isFinite())
    return new Ctor(NaN);
  if (x.e >= 0)
    return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  xsd = x.sd();
  if (Math.max(xsd, pr) < 2 * -x.e - 1)
    return finalise(new Ctor(x), pr, rm, true);
  Ctor.precision = wpr = xsd - x.e;
  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);
  Ctor.precision = pr + 4;
  Ctor.rounding = 1;
  x = x.ln();
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.times(0.5);
};
P.inverseSine = P.asin = function() {
  var halfPi, k, pr, rm, x = this, Ctor = x.constructor;
  if (x.isZero())
    return new Ctor(x);
  k = x.abs().cmp(1);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (k !== -1) {
    if (k === 0) {
      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
      halfPi.s = x.s;
      return halfPi;
    }
    return new Ctor(NaN);
  }
  Ctor.precision = pr + 6;
  Ctor.rounding = 1;
  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.times(2);
};
P.inverseTangent = P.atan = function() {
  var i, j, k, n2, px, t2, r2, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;
  if (!x.isFinite()) {
    if (!x.s)
      return new Ctor(NaN);
    if (pr + 4 <= PI_PRECISION) {
      r2 = getPi(Ctor, pr + 4, rm).times(0.5);
      r2.s = x.s;
      return r2;
    }
  } else if (x.isZero()) {
    return new Ctor(x);
  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {
    r2 = getPi(Ctor, pr + 4, rm).times(0.25);
    r2.s = x.s;
    return r2;
  }
  Ctor.precision = wpr = pr + 10;
  Ctor.rounding = 1;
  k = Math.min(28, wpr / LOG_BASE + 2 | 0);
  for (i = k; i; --i)
    x = x.div(x.times(x).plus(1).sqrt().plus(1));
  external = false;
  j = Math.ceil(wpr / LOG_BASE);
  n2 = 1;
  x2 = x.times(x);
  r2 = new Ctor(x);
  px = x;
  for (; i !== -1; ) {
    px = px.times(x2);
    t2 = r2.minus(px.div(n2 += 2));
    px = px.times(x2);
    r2 = t2.plus(px.div(n2 += 2));
    if (r2.d[j] !== void 0)
      for (i = j; r2.d[i] === t2.d[i] && i--; )
        ;
  }
  if (k)
    r2 = r2.times(2 << k - 1);
  external = true;
  return finalise(r2, Ctor.precision = pr, Ctor.rounding = rm, true);
};
P.isFinite = function() {
  return !!this.d;
};
P.isInteger = P.isInt = function() {
  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;
};
P.isNaN = function() {
  return !this.s;
};
P.isNegative = P.isNeg = function() {
  return this.s < 0;
};
P.isPositive = P.isPos = function() {
  return this.s > 0;
};
P.isZero = function() {
  return !!this.d && this.d[0] === 0;
};
P.lessThan = P.lt = function(y) {
  return this.cmp(y) < 0;
};
P.lessThanOrEqualTo = P.lte = function(y) {
  return this.cmp(y) < 1;
};
P.logarithm = P.log = function(base5) {
  var isBase10, d, denominator, k, inf, num, sd, r2, arg = this, Ctor = arg.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard = 5;
  if (base5 == null) {
    base5 = new Ctor(10);
    isBase10 = true;
  } else {
    base5 = new Ctor(base5);
    d = base5.d;
    if (base5.s < 0 || !d || !d[0] || base5.eq(1))
      return new Ctor(NaN);
    isBase10 = base5.eq(10);
  }
  d = arg.d;
  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {
    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);
  }
  if (isBase10) {
    if (d.length > 1) {
      inf = true;
    } else {
      for (k = d[0]; k % 10 === 0; )
        k /= 10;
      inf = k !== 1;
    }
  }
  external = false;
  sd = pr + guard;
  num = naturalLogarithm(arg, sd);
  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base5, sd);
  r2 = divide(num, denominator, sd, 1);
  if (checkRoundingDigits(r2.d, k = pr, rm)) {
    do {
      sd += 10;
      num = naturalLogarithm(arg, sd);
      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base5, sd);
      r2 = divide(num, denominator, sd, 1);
      if (!inf) {
        if (+digitsToString(r2.d).slice(k + 1, k + 15) + 1 == 1e14) {
          r2 = finalise(r2, pr + 1, 0);
        }
        break;
      }
    } while (checkRoundingDigits(r2.d, k += 10, rm));
  }
  external = true;
  return finalise(r2, pr, rm);
};
P.minus = P.sub = function(y) {
  var d, e2, i, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;
  y = new Ctor(y);
  if (!x.d || !y.d) {
    if (!x.s || !y.s)
      y = new Ctor(NaN);
    else if (x.d)
      y.s = -y.s;
    else
      y = new Ctor(y.d || x.s !== y.s ? x : NaN);
    return y;
  }
  if (x.s != y.s) {
    y.s = -y.s;
    return x.plus(y);
  }
  xd = x.d;
  yd = y.d;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (!xd[0] || !yd[0]) {
    if (yd[0])
      y.s = -y.s;
    else if (xd[0])
      y = new Ctor(x);
    else
      return new Ctor(rm === 3 ? -0 : 0);
    return external ? finalise(y, pr, rm) : y;
  }
  e2 = mathfloor(y.e / LOG_BASE);
  xe = mathfloor(x.e / LOG_BASE);
  xd = xd.slice();
  k = xe - e2;
  if (k) {
    xLTy = k < 0;
    if (xLTy) {
      d = xd;
      k = -k;
      len = yd.length;
    } else {
      d = yd;
      e2 = xe;
      len = xd.length;
    }
    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
    if (k > i) {
      k = i;
      d.length = 1;
    }
    d.reverse();
    for (i = k; i--; )
      d.push(0);
    d.reverse();
  } else {
    i = xd.length;
    len = yd.length;
    xLTy = i < len;
    if (xLTy)
      len = i;
    for (i = 0; i < len; i++) {
      if (xd[i] != yd[i]) {
        xLTy = xd[i] < yd[i];
        break;
      }
    }
    k = 0;
  }
  if (xLTy) {
    d = xd;
    xd = yd;
    yd = d;
    y.s = -y.s;
  }
  len = xd.length;
  for (i = yd.length - len; i > 0; --i)
    xd[len++] = 0;
  for (i = yd.length; i > k; ) {
    if (xd[--i] < yd[i]) {
      for (j = i; j && xd[--j] === 0; )
        xd[j] = BASE - 1;
      --xd[j];
      xd[i] += BASE;
    }
    xd[i] -= yd[i];
  }
  for (; xd[--len] === 0; )
    xd.pop();
  for (; xd[0] === 0; xd.shift())
    --e2;
  if (!xd[0])
    return new Ctor(rm === 3 ? -0 : 0);
  y.d = xd;
  y.e = getBase10Exponent(xd, e2);
  return external ? finalise(y, pr, rm) : y;
};
P.modulo = P.mod = function(y) {
  var q, x = this, Ctor = x.constructor;
  y = new Ctor(y);
  if (!x.d || !y.s || y.d && !y.d[0])
    return new Ctor(NaN);
  if (!y.d || x.d && !x.d[0]) {
    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);
  }
  external = false;
  if (Ctor.modulo == 9) {
    q = divide(x, y.abs(), 0, 3, 1);
    q.s *= y.s;
  } else {
    q = divide(x, y, 0, Ctor.modulo, 1);
  }
  q = q.times(y);
  external = true;
  return x.minus(q);
};
P.naturalExponential = P.exp = function() {
  return naturalExponential(this);
};
P.naturalLogarithm = P.ln = function() {
  return naturalLogarithm(this);
};
P.negated = P.neg = function() {
  var x = new this.constructor(this);
  x.s = -x.s;
  return finalise(x);
};
P.plus = P.add = function(y) {
  var carry, d, e2, i, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;
  y = new Ctor(y);
  if (!x.d || !y.d) {
    if (!x.s || !y.s)
      y = new Ctor(NaN);
    else if (!x.d)
      y = new Ctor(y.d || x.s === y.s ? x : NaN);
    return y;
  }
  if (x.s != y.s) {
    y.s = -y.s;
    return x.minus(y);
  }
  xd = x.d;
  yd = y.d;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (!xd[0] || !yd[0]) {
    if (!yd[0])
      y = new Ctor(x);
    return external ? finalise(y, pr, rm) : y;
  }
  k = mathfloor(x.e / LOG_BASE);
  e2 = mathfloor(y.e / LOG_BASE);
  xd = xd.slice();
  i = k - e2;
  if (i) {
    if (i < 0) {
      d = xd;
      i = -i;
      len = yd.length;
    } else {
      d = yd;
      e2 = k;
      len = xd.length;
    }
    k = Math.ceil(pr / LOG_BASE);
    len = k > len ? k + 1 : len + 1;
    if (i > len) {
      i = len;
      d.length = 1;
    }
    d.reverse();
    for (; i--; )
      d.push(0);
    d.reverse();
  }
  len = xd.length;
  i = yd.length;
  if (len - i < 0) {
    i = len;
    d = yd;
    yd = xd;
    xd = d;
  }
  for (carry = 0; i; ) {
    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;
    xd[i] %= BASE;
  }
  if (carry) {
    xd.unshift(carry);
    ++e2;
  }
  for (len = xd.length; xd[--len] == 0; )
    xd.pop();
  y.d = xd;
  y.e = getBase10Exponent(xd, e2);
  return external ? finalise(y, pr, rm) : y;
};
P.precision = P.sd = function(z2) {
  var k, x = this;
  if (z2 !== void 0 && z2 !== !!z2 && z2 !== 1 && z2 !== 0)
    throw Error(invalidArgument + z2);
  if (x.d) {
    k = getPrecision(x.d);
    if (z2 && x.e + 1 > k)
      k = x.e + 1;
  } else {
    k = NaN;
  }
  return k;
};
P.round = function() {
  var x = this, Ctor = x.constructor;
  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);
};
P.sine = P.sin = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite())
    return new Ctor(NaN);
  if (x.isZero())
    return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
  Ctor.rounding = 1;
  x = sine(Ctor, toLessThanHalfPi(Ctor, x));
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);
};
P.squareRoot = P.sqrt = function() {
  var m, n2, sd, r2, rep, t2, x = this, d = x.d, e2 = x.e, s = x.s, Ctor = x.constructor;
  if (s !== 1 || !d || !d[0]) {
    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);
  }
  external = false;
  s = Math.sqrt(+x);
  if (s == 0 || s == 1 / 0) {
    n2 = digitsToString(d);
    if ((n2.length + e2) % 2 == 0)
      n2 += "0";
    s = Math.sqrt(n2);
    e2 = mathfloor((e2 + 1) / 2) - (e2 < 0 || e2 % 2);
    if (s == 1 / 0) {
      n2 = "5e" + e2;
    } else {
      n2 = s.toExponential();
      n2 = n2.slice(0, n2.indexOf("e") + 1) + e2;
    }
    r2 = new Ctor(n2);
  } else {
    r2 = new Ctor(s.toString());
  }
  sd = (e2 = Ctor.precision) + 3;
  for (; ; ) {
    t2 = r2;
    r2 = t2.plus(divide(x, t2, sd + 2, 1)).times(0.5);
    if (digitsToString(t2.d).slice(0, sd) === (n2 = digitsToString(r2.d)).slice(0, sd)) {
      n2 = n2.slice(sd - 3, sd + 1);
      if (n2 == "9999" || !rep && n2 == "4999") {
        if (!rep) {
          finalise(t2, e2 + 1, 0);
          if (t2.times(t2).eq(x)) {
            r2 = t2;
            break;
          }
        }
        sd += 4;
        rep = 1;
      } else {
        if (!+n2 || !+n2.slice(1) && n2.charAt(0) == "5") {
          finalise(r2, e2 + 1, 1);
          m = !r2.times(r2).eq(x);
        }
        break;
      }
    }
  }
  external = true;
  return finalise(r2, e2, Ctor.rounding, m);
};
P.tangent = P.tan = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite())
    return new Ctor(NaN);
  if (x.isZero())
    return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + 10;
  Ctor.rounding = 1;
  x = x.sin();
  x.s = 1;
  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);
};
P.times = P.mul = function(y) {
  var carry, e2, i, k, r2, rL, t2, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
  y.s *= x.s;
  if (!xd || !xd[0] || !yd || !yd[0]) {
    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);
  }
  e2 = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);
  xdL = xd.length;
  ydL = yd.length;
  if (xdL < ydL) {
    r2 = xd;
    xd = yd;
    yd = r2;
    rL = xdL;
    xdL = ydL;
    ydL = rL;
  }
  r2 = [];
  rL = xdL + ydL;
  for (i = rL; i--; )
    r2.push(0);
  for (i = ydL; --i >= 0; ) {
    carry = 0;
    for (k = xdL + i; k > i; ) {
      t2 = r2[k] + yd[i] * xd[k - i - 1] + carry;
      r2[k--] = t2 % BASE | 0;
      carry = t2 / BASE | 0;
    }
    r2[k] = (r2[k] + carry) % BASE | 0;
  }
  for (; !r2[--rL]; )
    r2.pop();
  if (carry)
    ++e2;
  else
    r2.shift();
  y.d = r2;
  y.e = getBase10Exponent(r2, e2);
  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;
};
P.toBinary = function(sd, rm) {
  return toStringBinary(this, 2, sd, rm);
};
P.toDecimalPlaces = P.toDP = function(dp, rm) {
  var x = this, Ctor = x.constructor;
  x = new Ctor(x);
  if (dp === void 0)
    return x;
  checkInt32(dp, 0, MAX_DIGITS);
  if (rm === void 0)
    rm = Ctor.rounding;
  else
    checkInt32(rm, 0, 8);
  return finalise(x, dp + x.e + 1, rm);
};
P.toExponential = function(dp, rm) {
  var str, x = this, Ctor = x.constructor;
  if (dp === void 0) {
    str = finiteToString(x, true);
  } else {
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    x = finalise(new Ctor(x), dp + 1, rm);
    str = finiteToString(x, true, dp + 1);
  }
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.toFixed = function(dp, rm) {
  var str, y, x = this, Ctor = x.constructor;
  if (dp === void 0) {
    str = finiteToString(x);
  } else {
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    y = finalise(new Ctor(x), dp + x.e + 1, rm);
    str = finiteToString(y, false, dp + y.e + 1);
  }
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.toFraction = function(maxD) {
  var d, d0, d1, d2, e2, k, n2, n0, n1, pr, q, r2, x = this, xd = x.d, Ctor = x.constructor;
  if (!xd)
    return new Ctor(x);
  n1 = d0 = new Ctor(1);
  d1 = n0 = new Ctor(0);
  d = new Ctor(d1);
  e2 = d.e = getPrecision(xd) - x.e - 1;
  k = e2 % LOG_BASE;
  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);
  if (maxD == null) {
    maxD = e2 > 0 ? d : n1;
  } else {
    n2 = new Ctor(maxD);
    if (!n2.isInt() || n2.lt(n1))
      throw Error(invalidArgument + n2);
    maxD = n2.gt(d) ? e2 > 0 ? d : n1 : n2;
  }
  external = false;
  n2 = new Ctor(digitsToString(xd));
  pr = Ctor.precision;
  Ctor.precision = e2 = xd.length * LOG_BASE * 2;
  for (; ; ) {
    q = divide(n2, d, 0, 1, 1);
    d2 = d0.plus(q.times(d1));
    if (d2.cmp(maxD) == 1)
      break;
    d0 = d1;
    d1 = d2;
    d2 = n1;
    n1 = n0.plus(q.times(d2));
    n0 = d2;
    d2 = d;
    d = n2.minus(q.times(d2));
    n2 = d2;
  }
  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);
  n0 = n0.plus(d2.times(n1));
  d0 = d0.plus(d2.times(d1));
  n0.s = n1.s = x.s;
  r2 = divide(n1, d1, e2, 1).minus(x).abs().cmp(divide(n0, d0, e2, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
  Ctor.precision = pr;
  external = true;
  return r2;
};
P.toHexadecimal = P.toHex = function(sd, rm) {
  return toStringBinary(this, 16, sd, rm);
};
P.toNearest = function(y, rm) {
  var x = this, Ctor = x.constructor;
  x = new Ctor(x);
  if (y == null) {
    if (!x.d)
      return x;
    y = new Ctor(1);
    rm = Ctor.rounding;
  } else {
    y = new Ctor(y);
    if (rm === void 0) {
      rm = Ctor.rounding;
    } else {
      checkInt32(rm, 0, 8);
    }
    if (!x.d)
      return y.s ? x : y;
    if (!y.d) {
      if (y.s)
        y.s = x.s;
      return y;
    }
  }
  if (y.d[0]) {
    external = false;
    x = divide(x, y, 0, rm, 1).times(y);
    external = true;
    finalise(x);
  } else {
    y.s = x.s;
    x = y;
  }
  return x;
};
P.toNumber = function() {
  return +this;
};
P.toOctal = function(sd, rm) {
  return toStringBinary(this, 8, sd, rm);
};
P.toPower = P.pow = function(y) {
  var e2, k, pr, r2, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));
  if (!x.d || !y.d || !x.d[0] || !y.d[0])
    return new Ctor(mathpow(+x, yn));
  x = new Ctor(x);
  if (x.eq(1))
    return x;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (y.eq(1))
    return finalise(x, pr, rm);
  e2 = mathfloor(y.e / LOG_BASE);
  if (e2 >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
    r2 = intPow(Ctor, x, k, pr);
    return y.s < 0 ? new Ctor(1).div(r2) : finalise(r2, pr, rm);
  }
  s = x.s;
  if (s < 0) {
    if (e2 < y.d.length - 1)
      return new Ctor(NaN);
    if ((y.d[e2] & 1) == 0)
      s = 1;
    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {
      x.s = s;
      return x;
    }
  }
  k = mathpow(+x, yn);
  e2 = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log("0." + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + "").e;
  if (e2 > Ctor.maxE + 1 || e2 < Ctor.minE - 1)
    return new Ctor(e2 > 0 ? s / 0 : 0);
  external = false;
  Ctor.rounding = x.s = 1;
  k = Math.min(12, (e2 + "").length);
  r2 = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);
  if (r2.d) {
    r2 = finalise(r2, pr + 5, 1);
    if (checkRoundingDigits(r2.d, pr, rm)) {
      e2 = pr + 10;
      r2 = finalise(naturalExponential(y.times(naturalLogarithm(x, e2 + k)), e2), e2 + 5, 1);
      if (+digitsToString(r2.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
        r2 = finalise(r2, pr + 1, 0);
      }
    }
  }
  r2.s = s;
  external = true;
  Ctor.rounding = rm;
  return finalise(r2, pr, rm);
};
P.toPrecision = function(sd, rm) {
  var str, x = this, Ctor = x.constructor;
  if (sd === void 0) {
    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
  } else {
    checkInt32(sd, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
    x = finalise(new Ctor(x), sd, rm);
    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
  }
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.toSignificantDigits = P.toSD = function(sd, rm) {
  var x = this, Ctor = x.constructor;
  if (sd === void 0) {
    sd = Ctor.precision;
    rm = Ctor.rounding;
  } else {
    checkInt32(sd, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
  }
  return finalise(new Ctor(x), sd, rm);
};
P.toString = function() {
  var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.truncated = P.trunc = function() {
  return finalise(new this.constructor(this), this.e + 1, 1);
};
P.valueOf = P.toJSON = function() {
  var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
  return x.isNeg() ? "-" + str : str;
};
function digitsToString(d) {
  var i, k, ws, indexOfLastWord = d.length - 1, str = "", w = d[0];
  if (indexOfLastWord > 0) {
    str += w;
    for (i = 1; i < indexOfLastWord; i++) {
      ws = d[i] + "";
      k = LOG_BASE - ws.length;
      if (k)
        str += getZeroString(k);
      str += ws;
    }
    w = d[i];
    ws = w + "";
    k = LOG_BASE - ws.length;
    if (k)
      str += getZeroString(k);
  } else if (w === 0) {
    return "0";
  }
  for (; w % 10 === 0; )
    w /= 10;
  return str + w;
}
function checkInt32(i, min2, max2) {
  if (i !== ~~i || i < min2 || i > max2) {
    throw Error(invalidArgument + i);
  }
}
function checkRoundingDigits(d, i, rm, repeating) {
  var di, k, r2, rd;
  for (k = d[0]; k >= 10; k /= 10)
    --i;
  if (--i < 0) {
    i += LOG_BASE;
    di = 0;
  } else {
    di = Math.ceil((i + 1) / LOG_BASE);
    i %= LOG_BASE;
  }
  k = mathpow(10, LOG_BASE - i);
  rd = d[di] % k | 0;
  if (repeating == null) {
    if (i < 3) {
      if (i == 0)
        rd = rd / 100 | 0;
      else if (i == 1)
        rd = rd / 10 | 0;
      r2 = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;
    } else {
      r2 = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;
    }
  } else {
    if (i < 4) {
      if (i == 0)
        rd = rd / 1e3 | 0;
      else if (i == 1)
        rd = rd / 100 | 0;
      else if (i == 2)
        rd = rd / 10 | 0;
      r2 = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
    } else {
      r2 = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i - 3) - 1;
    }
  }
  return r2;
}
function convertBase(str, baseIn, baseOut) {
  var j, arr = [0], arrL, i = 0, strL = str.length;
  for (; i < strL; ) {
    for (arrL = arr.length; arrL--; )
      arr[arrL] *= baseIn;
    arr[0] += NUMERALS.indexOf(str.charAt(i++));
    for (j = 0; j < arr.length; j++) {
      if (arr[j] > baseOut - 1) {
        if (arr[j + 1] === void 0)
          arr[j + 1] = 0;
        arr[j + 1] += arr[j] / baseOut | 0;
        arr[j] %= baseOut;
      }
    }
  }
  return arr.reverse();
}
function cosine(Ctor, x) {
  var k, len, y;
  if (x.isZero())
    return x;
  len = x.d.length;
  if (len < 32) {
    k = Math.ceil(len / 3);
    y = (1 / tinyPow(4, k)).toString();
  } else {
    k = 16;
    y = "2.3283064365386962890625e-10";
  }
  Ctor.precision += k;
  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));
  for (var i = k; i--; ) {
    var cos2x = x.times(x);
    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
  }
  Ctor.precision -= k;
  return x;
}
var divide = /* @__PURE__ */ function() {
  function multiplyInteger(x, k, base5) {
    var temp, carry = 0, i = x.length;
    for (x = x.slice(); i--; ) {
      temp = x[i] * k + carry;
      x[i] = temp % base5 | 0;
      carry = temp / base5 | 0;
    }
    if (carry)
      x.unshift(carry);
    return x;
  }
  function compare3(a, b, aL, bL) {
    var i, r2;
    if (aL != bL) {
      r2 = aL > bL ? 1 : -1;
    } else {
      for (i = r2 = 0; i < aL; i++) {
        if (a[i] != b[i]) {
          r2 = a[i] > b[i] ? 1 : -1;
          break;
        }
      }
    }
    return r2;
  }
  function subtract(a, b, aL, base5) {
    var i = 0;
    for (; aL--; ) {
      a[aL] -= i;
      i = a[aL] < b[aL] ? 1 : 0;
      a[aL] = i * base5 + a[aL] - b[aL];
    }
    for (; !a[0] && a.length > 1; )
      a.shift();
  }
  return function(x, y, pr, rm, dp, base5) {
    var cmp, e2, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t2, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign2 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
    if (!xd || !xd[0] || !yd || !yd[0]) {
      return new Ctor(
        // Return NaN if either NaN, or both Infinity or 0.
        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : (
          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.
          xd && xd[0] == 0 || !yd ? sign2 * 0 : sign2 / 0
        )
      );
    }
    if (base5) {
      logBase = 1;
      e2 = x.e - y.e;
    } else {
      base5 = BASE;
      logBase = LOG_BASE;
      e2 = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);
    }
    yL = yd.length;
    xL = xd.length;
    q = new Ctor(sign2);
    qd = q.d = [];
    for (i = 0; yd[i] == (xd[i] || 0); i++)
      ;
    if (yd[i] > (xd[i] || 0))
      e2--;
    if (pr == null) {
      sd = pr = Ctor.precision;
      rm = Ctor.rounding;
    } else if (dp) {
      sd = pr + (x.e - y.e) + 1;
    } else {
      sd = pr;
    }
    if (sd < 0) {
      qd.push(1);
      more = true;
    } else {
      sd = sd / logBase + 2 | 0;
      i = 0;
      if (yL == 1) {
        k = 0;
        yd = yd[0];
        sd++;
        for (; (i < xL || k) && sd--; i++) {
          t2 = k * base5 + (xd[i] || 0);
          qd[i] = t2 / yd | 0;
          k = t2 % yd | 0;
        }
        more = k || i < xL;
      } else {
        k = base5 / (yd[0] + 1) | 0;
        if (k > 1) {
          yd = multiplyInteger(yd, k, base5);
          xd = multiplyInteger(xd, k, base5);
          yL = yd.length;
          xL = xd.length;
        }
        xi = yL;
        rem = xd.slice(0, yL);
        remL = rem.length;
        for (; remL < yL; )
          rem[remL++] = 0;
        yz = yd.slice();
        yz.unshift(0);
        yd0 = yd[0];
        if (yd[1] >= base5 / 2)
          ++yd0;
        do {
          k = 0;
          cmp = compare3(yd, rem, yL, remL);
          if (cmp < 0) {
            rem0 = rem[0];
            if (yL != remL)
              rem0 = rem0 * base5 + (rem[1] || 0);
            k = rem0 / yd0 | 0;
            if (k > 1) {
              if (k >= base5)
                k = base5 - 1;
              prod = multiplyInteger(yd, k, base5);
              prodL = prod.length;
              remL = rem.length;
              cmp = compare3(prod, rem, prodL, remL);
              if (cmp == 1) {
                k--;
                subtract(prod, yL < prodL ? yz : yd, prodL, base5);
              }
            } else {
              if (k == 0)
                cmp = k = 1;
              prod = yd.slice();
            }
            prodL = prod.length;
            if (prodL < remL)
              prod.unshift(0);
            subtract(rem, prod, remL, base5);
            if (cmp == -1) {
              remL = rem.length;
              cmp = compare3(yd, rem, yL, remL);
              if (cmp < 1) {
                k++;
                subtract(rem, yL < remL ? yz : yd, remL, base5);
              }
            }
            remL = rem.length;
          } else if (cmp === 0) {
            k++;
            rem = [0];
          }
          qd[i++] = k;
          if (cmp && rem[0]) {
            rem[remL++] = xd[xi] || 0;
          } else {
            rem = [xd[xi]];
            remL = 1;
          }
        } while ((xi++ < xL || rem[0] !== void 0) && sd--);
        more = rem[0] !== void 0;
      }
      if (!qd[0])
        qd.shift();
    }
    if (logBase == 1) {
      q.e = e2;
      inexact = more;
    } else {
      for (i = 1, k = qd[0]; k >= 10; k /= 10)
        i++;
      q.e = i + e2 * logBase - 1;
      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);
    }
    return q;
  };
}();
function finalise(x, sd, rm, isTruncated) {
  var digits, i, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;
  out:
    if (sd != null) {
      xd = x.d;
      if (!xd)
        return x;
      for (digits = 1, k = xd[0]; k >= 10; k /= 10)
        digits++;
      i = sd - digits;
      if (i < 0) {
        i += LOG_BASE;
        j = sd;
        w = xd[xdi = 0];
        rd = w / mathpow(10, digits - j - 1) % 10 | 0;
      } else {
        xdi = Math.ceil((i + 1) / LOG_BASE);
        k = xd.length;
        if (xdi >= k) {
          if (isTruncated) {
            for (; k++ <= xdi; )
              xd.push(0);
            w = rd = 0;
            digits = 1;
            i %= LOG_BASE;
            j = i - LOG_BASE + 1;
          } else {
            break out;
          }
        } else {
          w = k = xd[xdi];
          for (digits = 1; k >= 10; k /= 10)
            digits++;
          i %= LOG_BASE;
          j = i - LOG_BASE + digits;
          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;
        }
      }
      isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));
      roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
      (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
      if (sd < 1 || !xd[0]) {
        xd.length = 0;
        if (roundUp) {
          sd -= x.e + 1;
          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
          x.e = -sd || 0;
        } else {
          xd[0] = x.e = 0;
        }
        return x;
      }
      if (i == 0) {
        xd.length = xdi;
        k = 1;
        xdi--;
      } else {
        xd.length = xdi + 1;
        k = mathpow(10, LOG_BASE - i);
        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;
      }
      if (roundUp) {
        for (; ; ) {
          if (xdi == 0) {
            for (i = 1, j = xd[0]; j >= 10; j /= 10)
              i++;
            j = xd[0] += k;
            for (k = 1; j >= 10; j /= 10)
              k++;
            if (i != k) {
              x.e++;
              if (xd[0] == BASE)
                xd[0] = 1;
            }
            break;
          } else {
            xd[xdi] += k;
            if (xd[xdi] != BASE)
              break;
            xd[xdi--] = 0;
            k = 1;
          }
        }
      }
      for (i = xd.length; xd[--i] === 0; )
        xd.pop();
    }
  if (external) {
    if (x.e > Ctor.maxE) {
      x.d = null;
      x.e = NaN;
    } else if (x.e < Ctor.minE) {
      x.e = 0;
      x.d = [0];
    }
  }
  return x;
}
function finiteToString(x, isExp, sd) {
  if (!x.isFinite())
    return nonFiniteToString(x);
  var k, e2 = x.e, str = digitsToString(x.d), len = str.length;
  if (isExp) {
    if (sd && (k = sd - len) > 0) {
      str = str.charAt(0) + "." + str.slice(1) + getZeroString(k);
    } else if (len > 1) {
      str = str.charAt(0) + "." + str.slice(1);
    }
    str = str + (x.e < 0 ? "e" : "e+") + x.e;
  } else if (e2 < 0) {
    str = "0." + getZeroString(-e2 - 1) + str;
    if (sd && (k = sd - len) > 0)
      str += getZeroString(k);
  } else if (e2 >= len) {
    str += getZeroString(e2 + 1 - len);
    if (sd && (k = sd - e2 - 1) > 0)
      str = str + "." + getZeroString(k);
  } else {
    if ((k = e2 + 1) < len)
      str = str.slice(0, k) + "." + str.slice(k);
    if (sd && (k = sd - len) > 0) {
      if (e2 + 1 === len)
        str += ".";
      str += getZeroString(k);
    }
  }
  return str;
}
function getBase10Exponent(digits, e2) {
  var w = digits[0];
  for (e2 *= LOG_BASE; w >= 10; w /= 10)
    e2++;
  return e2;
}
function getLn10(Ctor, sd, pr) {
  if (sd > LN10_PRECISION) {
    external = true;
    if (pr)
      Ctor.precision = pr;
    throw Error(precisionLimitExceeded);
  }
  return finalise(new Ctor(LN10), sd, 1, true);
}
function getPi(Ctor, sd, rm) {
  if (sd > PI_PRECISION)
    throw Error(precisionLimitExceeded);
  return finalise(new Ctor(PI), sd, rm, true);
}
function getPrecision(digits) {
  var w = digits.length - 1, len = w * LOG_BASE + 1;
  w = digits[w];
  if (w) {
    for (; w % 10 == 0; w /= 10)
      len--;
    for (w = digits[0]; w >= 10; w /= 10)
      len++;
  }
  return len;
}
function getZeroString(k) {
  var zs = "";
  for (; k--; )
    zs += "0";
  return zs;
}
function intPow(Ctor, x, n2, pr) {
  var isTruncated, r2 = new Ctor(1), k = Math.ceil(pr / LOG_BASE + 4);
  external = false;
  for (; ; ) {
    if (n2 % 2) {
      r2 = r2.times(x);
      if (truncate(r2.d, k))
        isTruncated = true;
    }
    n2 = mathfloor(n2 / 2);
    if (n2 === 0) {
      n2 = r2.d.length - 1;
      if (isTruncated && r2.d[n2] === 0)
        ++r2.d[n2];
      break;
    }
    x = x.times(x);
    truncate(x.d, k);
  }
  external = true;
  return r2;
}
function isOdd(n2) {
  return n2.d[n2.d.length - 1] & 1;
}
function maxOrMin(Ctor, args, ltgt) {
  var y, x = new Ctor(args[0]), i = 0;
  for (; ++i < args.length; ) {
    y = new Ctor(args[i]);
    if (!y.s) {
      x = y;
      break;
    } else if (x[ltgt](y)) {
      x = y;
    }
  }
  return x;
}
function naturalExponential(x, sd) {
  var denominator, guard, j, pow5, sum2, t2, wpr, rep = 0, i = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
  if (!x.d || !x.d[0] || x.e > 17) {
    return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);
  }
  if (sd == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd;
  }
  t2 = new Ctor(0.03125);
  while (x.e > -2) {
    x = x.times(t2);
    k += 5;
  }
  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
  wpr += guard;
  denominator = pow5 = sum2 = new Ctor(1);
  Ctor.precision = wpr;
  for (; ; ) {
    pow5 = finalise(pow5.times(x), wpr, 1);
    denominator = denominator.times(++i);
    t2 = sum2.plus(divide(pow5, denominator, wpr, 1));
    if (digitsToString(t2.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
      j = k;
      while (j--)
        sum2 = finalise(sum2.times(sum2), wpr, 1);
      if (sd == null) {
        if (rep < 3 && checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {
          Ctor.precision = wpr += 10;
          denominator = pow5 = t2 = new Ctor(1);
          i = 0;
          rep++;
        } else {
          return finalise(sum2, Ctor.precision = pr, rm, external = true);
        }
      } else {
        Ctor.precision = pr;
        return sum2;
      }
    }
    sum2 = t2;
  }
}
function naturalLogarithm(y, sd) {
  var c, c0, denominator, e2, numerator, rep, sum2, t2, wpr, x1, x2, n2 = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
  }
  if (sd == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd;
  }
  Ctor.precision = wpr += guard;
  c = digitsToString(xd);
  c0 = c.charAt(0);
  if (Math.abs(e2 = x.e) < 15e14) {
    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
      x = x.times(y);
      c = digitsToString(x.d);
      c0 = c.charAt(0);
      n2++;
    }
    e2 = x.e;
    if (c0 > 1) {
      x = new Ctor("0." + c);
      e2++;
    } else {
      x = new Ctor(c0 + "." + c.slice(1));
    }
  } else {
    t2 = getLn10(Ctor, wpr + 2, pr).times(e2 + "");
    x = naturalLogarithm(new Ctor(c0 + "." + c.slice(1)), wpr - guard).plus(t2);
    Ctor.precision = pr;
    return sd == null ? finalise(x, pr, rm, external = true) : x;
  }
  x1 = x;
  sum2 = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);
  x2 = finalise(x.times(x), wpr, 1);
  denominator = 3;
  for (; ; ) {
    numerator = finalise(numerator.times(x2), wpr, 1);
    t2 = sum2.plus(divide(numerator, new Ctor(denominator), wpr, 1));
    if (digitsToString(t2.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
      sum2 = sum2.times(2);
      if (e2 !== 0)
        sum2 = sum2.plus(getLn10(Ctor, wpr + 2, pr).times(e2 + ""));
      sum2 = divide(sum2, new Ctor(n2), wpr, 1);
      if (sd == null) {
        if (checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {
          Ctor.precision = wpr += guard;
          t2 = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);
          x2 = finalise(x.times(x), wpr, 1);
          denominator = rep = 1;
        } else {
          return finalise(sum2, Ctor.precision = pr, rm, external = true);
        }
      } else {
        Ctor.precision = pr;
        return sum2;
      }
    }
    sum2 = t2;
    denominator += 2;
  }
}
function nonFiniteToString(x) {
  return String(x.s * x.s / 0);
}
function parseDecimal(x, str) {
  var e2, i, len;
  if ((e2 = str.indexOf(".")) > -1)
    str = str.replace(".", "");
  if ((i = str.search(/e/i)) > 0) {
    if (e2 < 0)
      e2 = i;
    e2 += +str.slice(i + 1);
    str = str.substring(0, i);
  } else if (e2 < 0) {
    e2 = str.length;
  }
  for (i = 0; str.charCodeAt(i) === 48; i++)
    ;
  for (len = str.length; str.charCodeAt(len - 1) === 48; --len)
    ;
  str = str.slice(i, len);
  if (str) {
    len -= i;
    x.e = e2 = e2 - i - 1;
    x.d = [];
    i = (e2 + 1) % LOG_BASE;
    if (e2 < 0)
      i += LOG_BASE;
    if (i < len) {
      if (i)
        x.d.push(+str.slice(0, i));
      for (len -= LOG_BASE; i < len; )
        x.d.push(+str.slice(i, i += LOG_BASE));
      str = str.slice(i);
      i = LOG_BASE - str.length;
    } else {
      i -= len;
    }
    for (; i--; )
      str += "0";
    x.d.push(+str);
    if (external) {
      if (x.e > x.constructor.maxE) {
        x.d = null;
        x.e = NaN;
      } else if (x.e < x.constructor.minE) {
        x.e = 0;
        x.d = [0];
      }
    }
  } else {
    x.e = 0;
    x.d = [0];
  }
  return x;
}
function parseOther(x, str) {
  var base5, Ctor, divisor, i, isFloat, len, p, xd, xe;
  if (str.indexOf("_") > -1) {
    str = str.replace(/(\d)_(?=\d)/g, "$1");
    if (isDecimal.test(str))
      return parseDecimal(x, str);
  } else if (str === "Infinity" || str === "NaN") {
    if (!+str)
      x.s = NaN;
    x.e = NaN;
    x.d = null;
    return x;
  }
  if (isHex.test(str)) {
    base5 = 16;
    str = str.toLowerCase();
  } else if (isBinary.test(str)) {
    base5 = 2;
  } else if (isOctal.test(str)) {
    base5 = 8;
  } else {
    throw Error(invalidArgument + str);
  }
  i = str.search(/p/i);
  if (i > 0) {
    p = +str.slice(i + 1);
    str = str.substring(2, i);
  } else {
    str = str.slice(2);
  }
  i = str.indexOf(".");
  isFloat = i >= 0;
  Ctor = x.constructor;
  if (isFloat) {
    str = str.replace(".", "");
    len = str.length;
    i = len - i;
    divisor = intPow(Ctor, new Ctor(base5), i, i * 2);
  }
  xd = convertBase(str, base5, BASE);
  xe = xd.length - 1;
  for (i = xe; xd[i] === 0; --i)
    xd.pop();
  if (i < 0)
    return new Ctor(x.s * 0);
  x.e = getBase10Exponent(xd, xe);
  x.d = xd;
  external = false;
  if (isFloat)
    x = divide(x, divisor, len * 4);
  if (p)
    x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));
  external = true;
  return x;
}
function sine(Ctor, x) {
  var k, len = x.d.length;
  if (len < 3) {
    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);
  }
  k = 1.4 * Math.sqrt(len);
  k = k > 16 ? 16 : k | 0;
  x = x.times(1 / tinyPow(5, k));
  x = taylorSeries(Ctor, 2, x, x);
  var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
  for (; k--; ) {
    sin2_x = x.times(x);
    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
  }
  return x;
}
function taylorSeries(Ctor, n2, x, y, isHyperbolic) {
  var j, t2, u, x2, i = 1, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE);
  external = false;
  x2 = x.times(x);
  u = new Ctor(y);
  for (; ; ) {
    t2 = divide(u.times(x2), new Ctor(n2++ * n2++), pr, 1);
    u = isHyperbolic ? y.plus(t2) : y.minus(t2);
    y = divide(t2.times(x2), new Ctor(n2++ * n2++), pr, 1);
    t2 = u.plus(y);
    if (t2.d[k] !== void 0) {
      for (j = k; t2.d[j] === u.d[j] && j--; )
        ;
      if (j == -1)
        break;
    }
    j = u;
    u = y;
    y = t2;
    t2 = j;
    i++;
  }
  external = true;
  t2.d.length = k + 1;
  return t2;
}
function tinyPow(b, e2) {
  var n2 = b;
  while (--e2)
    n2 *= b;
  return n2;
}
function toLessThanHalfPi(Ctor, x) {
  var t2, isNeg = x.s < 0, pi = getPi(Ctor, Ctor.precision, 1), halfPi = pi.times(0.5);
  x = x.abs();
  if (x.lte(halfPi)) {
    quadrant = isNeg ? 4 : 1;
    return x;
  }
  t2 = x.divToInt(pi);
  if (t2.isZero()) {
    quadrant = isNeg ? 3 : 2;
  } else {
    x = x.minus(t2.times(pi));
    if (x.lte(halfPi)) {
      quadrant = isOdd(t2) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;
      return x;
    }
    quadrant = isOdd(t2) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;
  }
  return x.minus(pi).abs();
}
function toStringBinary(x, baseOut, sd, rm) {
  var base5, e2, i, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;
  if (isExp) {
    checkInt32(sd, 1, MAX_DIGITS);
    if (rm === void 0)
      rm = Ctor.rounding;
    else
      checkInt32(rm, 0, 8);
  } else {
    sd = Ctor.precision;
    rm = Ctor.rounding;
  }
  if (!x.isFinite()) {
    str = nonFiniteToString(x);
  } else {
    str = finiteToString(x);
    i = str.indexOf(".");
    if (isExp) {
      base5 = 2;
      if (baseOut == 16) {
        sd = sd * 4 - 3;
      } else if (baseOut == 8) {
        sd = sd * 3 - 2;
      }
    } else {
      base5 = baseOut;
    }
    if (i >= 0) {
      str = str.replace(".", "");
      y = new Ctor(1);
      y.e = str.length - i;
      y.d = convertBase(finiteToString(y), 10, base5);
      y.e = y.d.length;
    }
    xd = convertBase(str, 10, base5);
    e2 = len = xd.length;
    for (; xd[--len] == 0; )
      xd.pop();
    if (!xd[0]) {
      str = isExp ? "0p+0" : "0";
    } else {
      if (i < 0) {
        e2--;
      } else {
        x = new Ctor(x);
        x.d = xd;
        x.e = e2;
        x = divide(x, y, sd, rm, 0, base5);
        xd = x.d;
        e2 = x.e;
        roundUp = inexact;
      }
      i = xd[sd];
      k = base5 / 2;
      roundUp = roundUp || xd[sd + 1] !== void 0;
      roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));
      xd.length = sd;
      if (roundUp) {
        for (; ++xd[--sd] > base5 - 1; ) {
          xd[sd] = 0;
          if (!sd) {
            ++e2;
            xd.unshift(1);
          }
        }
      }
      for (len = xd.length; !xd[len - 1]; --len)
        ;
      for (i = 0, str = ""; i < len; i++)
        str += NUMERALS.charAt(xd[i]);
      if (isExp) {
        if (len > 1) {
          if (baseOut == 16 || baseOut == 8) {
            i = baseOut == 16 ? 4 : 3;
            for (--len; len % i; len++)
              str += "0";
            xd = convertBase(str, base5, baseOut);
            for (len = xd.length; !xd[len - 1]; --len)
              ;
            for (i = 1, str = "1."; i < len; i++)
              str += NUMERALS.charAt(xd[i]);
          } else {
            str = str.charAt(0) + "." + str.slice(1);
          }
        }
        str = str + (e2 < 0 ? "p" : "p+") + e2;
      } else if (e2 < 0) {
        for (; ++e2; )
          str = "0" + str;
        str = "0." + str;
      } else {
        if (++e2 > len)
          for (e2 -= len; e2--; )
            str += "0";
        else if (e2 < len)
          str = str.slice(0, e2) + "." + str.slice(e2);
      }
    }
    str = (baseOut == 16 ? "0x" : baseOut == 2 ? "0b" : baseOut == 8 ? "0o" : "") + str;
  }
  return x.s < 0 ? "-" + str : str;
}
function truncate(arr, len) {
  if (arr.length > len) {
    arr.length = len;
    return true;
  }
}
function abs(x) {
  return new this(x).abs();
}
function acos(x) {
  return new this(x).acos();
}
function acosh(x) {
  return new this(x).acosh();
}
function add2(x, y) {
  return new this(x).plus(y);
}
function asin(x) {
  return new this(x).asin();
}
function asinh(x) {
  return new this(x).asinh();
}
function atan(x) {
  return new this(x).atan();
}
function atanh(x) {
  return new this(x).atanh();
}
function atan2(y, x) {
  y = new this(y);
  x = new this(x);
  var r2, pr = this.precision, rm = this.rounding, wpr = pr + 4;
  if (!y.s || !x.s) {
    r2 = new this(NaN);
  } else if (!y.d && !x.d) {
    r2 = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
    r2.s = y.s;
  } else if (!x.d || y.isZero()) {
    r2 = x.s < 0 ? getPi(this, pr, rm) : new this(0);
    r2.s = y.s;
  } else if (!y.d || x.isZero()) {
    r2 = getPi(this, wpr, 1).times(0.5);
    r2.s = y.s;
  } else if (x.s < 0) {
    this.precision = wpr;
    this.rounding = 1;
    r2 = this.atan(divide(y, x, wpr, 1));
    x = getPi(this, wpr, 1);
    this.precision = pr;
    this.rounding = rm;
    r2 = y.s < 0 ? r2.minus(x) : r2.plus(x);
  } else {
    r2 = this.atan(divide(y, x, wpr, 1));
  }
  return r2;
}
function cbrt(x) {
  return new this(x).cbrt();
}
function ceil(x) {
  return finalise(x = new this(x), x.e + 1, 2);
}
function clamp(x, min2, max2) {
  return new this(x).clamp(min2, max2);
}
function config(obj) {
  if (!obj || typeof obj !== "object")
    throw Error(decimalError + "Object expected");
  var i, p, v, useDefaults = obj.defaults === true, ps = [
    "precision",
    1,
    MAX_DIGITS,
    "rounding",
    0,
    8,
    "toExpNeg",
    -EXP_LIMIT,
    0,
    "toExpPos",
    0,
    EXP_LIMIT,
    "maxE",
    0,
    EXP_LIMIT,
    "minE",
    -EXP_LIMIT,
    0,
    "modulo",
    0,
    9
  ];
  for (i = 0; i < ps.length; i += 3) {
    if (p = ps[i], useDefaults)
      this[p] = DEFAULTS[p];
    if ((v = obj[p]) !== void 0) {
      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2])
        this[p] = v;
      else
        throw Error(invalidArgument + p + ": " + v);
    }
  }
  if (p = "crypto", useDefaults)
    this[p] = DEFAULTS[p];
  if ((v = obj[p]) !== void 0) {
    if (v === true || v === false || v === 0 || v === 1) {
      if (v) {
        if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
          this[p] = true;
        } else {
          throw Error(cryptoUnavailable);
        }
      } else {
        this[p] = false;
      }
    } else {
      throw Error(invalidArgument + p + ": " + v);
    }
  }
  return this;
}
function cos(x) {
  return new this(x).cos();
}
function cosh(x) {
  return new this(x).cosh();
}
function clone(obj) {
  var i, p, ps;
  function Decimal2(v) {
    var e2, i2, t2, x = this;
    if (!(x instanceof Decimal2))
      return new Decimal2(v);
    x.constructor = Decimal2;
    if (isDecimalInstance(v)) {
      x.s = v.s;
      if (external) {
        if (!v.d || v.e > Decimal2.maxE) {
          x.e = NaN;
          x.d = null;
        } else if (v.e < Decimal2.minE) {
          x.e = 0;
          x.d = [0];
        } else {
          x.e = v.e;
          x.d = v.d.slice();
        }
      } else {
        x.e = v.e;
        x.d = v.d ? v.d.slice() : v.d;
      }
      return;
    }
    t2 = typeof v;
    if (t2 === "number") {
      if (v === 0) {
        x.s = 1 / v < 0 ? -1 : 1;
        x.e = 0;
        x.d = [0];
        return;
      }
      if (v < 0) {
        v = -v;
        x.s = -1;
      } else {
        x.s = 1;
      }
      if (v === ~~v && v < 1e7) {
        for (e2 = 0, i2 = v; i2 >= 10; i2 /= 10)
          e2++;
        if (external) {
          if (e2 > Decimal2.maxE) {
            x.e = NaN;
            x.d = null;
          } else if (e2 < Decimal2.minE) {
            x.e = 0;
            x.d = [0];
          } else {
            x.e = e2;
            x.d = [v];
          }
        } else {
          x.e = e2;
          x.d = [v];
        }
        return;
      } else if (v * 0 !== 0) {
        if (!v)
          x.s = NaN;
        x.e = NaN;
        x.d = null;
        return;
      }
      return parseDecimal(x, v.toString());
    } else if (t2 !== "string") {
      throw Error(invalidArgument + v);
    }
    if ((i2 = v.charCodeAt(0)) === 45) {
      v = v.slice(1);
      x.s = -1;
    } else {
      if (i2 === 43)
        v = v.slice(1);
      x.s = 1;
    }
    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);
  }
  Decimal2.prototype = P;
  Decimal2.ROUND_UP = 0;
  Decimal2.ROUND_DOWN = 1;
  Decimal2.ROUND_CEIL = 2;
  Decimal2.ROUND_FLOOR = 3;
  Decimal2.ROUND_HALF_UP = 4;
  Decimal2.ROUND_HALF_DOWN = 5;
  Decimal2.ROUND_HALF_EVEN = 6;
  Decimal2.ROUND_HALF_CEIL = 7;
  Decimal2.ROUND_HALF_FLOOR = 8;
  Decimal2.EUCLID = 9;
  Decimal2.config = Decimal2.set = config;
  Decimal2.clone = clone;
  Decimal2.isDecimal = isDecimalInstance;
  Decimal2.abs = abs;
  Decimal2.acos = acos;
  Decimal2.acosh = acosh;
  Decimal2.add = add2;
  Decimal2.asin = asin;
  Decimal2.asinh = asinh;
  Decimal2.atan = atan;
  Decimal2.atanh = atanh;
  Decimal2.atan2 = atan2;
  Decimal2.cbrt = cbrt;
  Decimal2.ceil = ceil;
  Decimal2.clamp = clamp;
  Decimal2.cos = cos;
  Decimal2.cosh = cosh;
  Decimal2.div = div;
  Decimal2.exp = exp;
  Decimal2.floor = floor;
  Decimal2.hypot = hypot;
  Decimal2.ln = ln;
  Decimal2.log = log;
  Decimal2.log10 = log10;
  Decimal2.log2 = log2;
  Decimal2.max = max;
  Decimal2.min = min;
  Decimal2.mod = mod3;
  Decimal2.mul = mul;
  Decimal2.pow = pow4;
  Decimal2.random = random;
  Decimal2.round = round;
  Decimal2.sign = sign;
  Decimal2.sin = sin;
  Decimal2.sinh = sinh;
  Decimal2.sqrt = sqrt;
  Decimal2.sub = sub;
  Decimal2.sum = sum;
  Decimal2.tan = tan;
  Decimal2.tanh = tanh;
  Decimal2.trunc = trunc;
  if (obj === void 0)
    obj = {};
  if (obj) {
    if (obj.defaults !== true) {
      ps = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"];
      for (i = 0; i < ps.length; )
        if (!obj.hasOwnProperty(p = ps[i++]))
          obj[p] = this[p];
    }
  }
  Decimal2.config(obj);
  return Decimal2;
}
function div(x, y) {
  return new this(x).div(y);
}
function exp(x) {
  return new this(x).exp();
}
function floor(x) {
  return finalise(x = new this(x), x.e + 1, 3);
}
function hypot() {
  var i, n2, t2 = new this(0);
  external = false;
  for (i = 0; i < arguments.length; ) {
    n2 = new this(arguments[i++]);
    if (!n2.d) {
      if (n2.s) {
        external = true;
        return new this(1 / 0);
      }
      t2 = n2;
    } else if (t2.d) {
      t2 = t2.plus(n2.times(n2));
    }
  }
  external = true;
  return t2.sqrt();
}
function isDecimalInstance(obj) {
  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;
}
function ln(x) {
  return new this(x).ln();
}
function log(x, y) {
  return new this(x).log(y);
}
function log2(x) {
  return new this(x).log(2);
}
function log10(x) {
  return new this(x).log(10);
}
function max() {
  return maxOrMin(this, arguments, "lt");
}
function min() {
  return maxOrMin(this, arguments, "gt");
}
function mod3(x, y) {
  return new this(x).mod(y);
}
function mul(x, y) {
  return new this(x).mul(y);
}
function pow4(x, y) {
  return new this(x).pow(y);
}
function random(sd) {
  var d, e2, k, n2, i = 0, r2 = new this(1), rd = [];
  if (sd === void 0)
    sd = this.precision;
  else
    checkInt32(sd, 1, MAX_DIGITS);
  k = Math.ceil(sd / LOG_BASE);
  if (!this.crypto) {
    for (; i < k; )
      rd[i++] = Math.random() * 1e7 | 0;
  } else if (crypto.getRandomValues) {
    d = crypto.getRandomValues(new Uint32Array(k));
    for (; i < k; ) {
      n2 = d[i];
      if (n2 >= 429e7) {
        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];
      } else {
        rd[i++] = n2 % 1e7;
      }
    }
  } else if (crypto.randomBytes) {
    d = crypto.randomBytes(k *= 4);
    for (; i < k; ) {
      n2 = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);
      if (n2 >= 214e7) {
        crypto.randomBytes(4).copy(d, i);
      } else {
        rd.push(n2 % 1e7);
        i += 4;
      }
    }
    i = k / 4;
  } else {
    throw Error(cryptoUnavailable);
  }
  k = rd[--i];
  sd %= LOG_BASE;
  if (k && sd) {
    n2 = mathpow(10, LOG_BASE - sd);
    rd[i] = (k / n2 | 0) * n2;
  }
  for (; rd[i] === 0; i--)
    rd.pop();
  if (i < 0) {
    e2 = 0;
    rd = [0];
  } else {
    e2 = -1;
    for (; rd[0] === 0; e2 -= LOG_BASE)
      rd.shift();
    for (k = 1, n2 = rd[0]; n2 >= 10; n2 /= 10)
      k++;
    if (k < LOG_BASE)
      e2 -= LOG_BASE - k;
  }
  r2.e = e2;
  r2.d = rd;
  return r2;
}
function round(x) {
  return finalise(x = new this(x), x.e + 1, this.rounding);
}
function sign(x) {
  x = new this(x);
  return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;
}
function sin(x) {
  return new this(x).sin();
}
function sinh(x) {
  return new this(x).sinh();
}
function sqrt(x) {
  return new this(x).sqrt();
}
function sub(x, y) {
  return new this(x).sub(y);
}
function sum() {
  var i = 0, args = arguments, x = new this(args[i]);
  external = false;
  for (; x.s && ++i < args.length; )
    x = x.plus(args[i]);
  external = true;
  return finalise(x, this.precision, this.rounding);
}
function tan(x) {
  return new this(x).tan();
}
function tanh(x) {
  return new this(x).tanh();
}
function trunc(x) {
  return finalise(x = new this(x), x.e + 1, 1);
}
P[Symbol.for("nodejs.util.inspect.custom")] = P.toString;
P[Symbol.toStringTag] = "Decimal";
var Decimal = P.constructor = clone(DEFAULTS);
LN10 = new Decimal(LN10);
PI = new Decimal(PI);
var decimal_default = Decimal;

// node_modules/.pnpm/@lens-protocol+shared-kernel@0.11.0-alpha.9/node_modules/@lens-protocol/shared-kernel/dist/Amount-5b0c3806.esm.js
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _setPrototypeOf(o2, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf4(o3, p2) {
    o3.__proto__ = p2;
    return o3;
  };
  return _setPrototypeOf(o2, p);
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o2) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf4(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf(o2);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _possibleConstructorReturn(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _isNativeFunction(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e2) {
    return typeof fn === "function";
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct4(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper4(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var InvariantError = /* @__PURE__ */ function(_Error) {
  _inherits(InvariantError2, _Error);
  var _super = _createSuper(InvariantError2);
  function InvariantError2() {
    var _this;
    _classCallCheck(this, InvariantError2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "name", "InvariantError");
    return _this;
  }
  return _createClass(InvariantError2);
}(/* @__PURE__ */ _wrapNativeSuper(Error));
function invariant(condition, message2) {
  if (!condition) {
    throw new InvariantError(message2);
  }
}
var BigDecimal = /* @__PURE__ */ function(_DecimalJS$clone) {
  _inherits(BigDecimal2, _DecimalJS$clone);
  var _super = _createSuper(BigDecimal2);
  function BigDecimal2() {
    _classCallCheck(this, BigDecimal2);
    return _super.apply(this, arguments);
  }
  _createClass(BigDecimal2, null, [{
    key: "from",
    value: (
      /**
       * Syntactic sugar over new BigDecimal
       *
       * @internal
       */
      function from7(value) {
        return new BigDecimal2(value);
      }
    )
    /**
     * Computes the mean of the given values
     *
     * @internal
     */
  }, {
    key: "mean",
    value: function mean(values) {
      invariant(values.length > 1, "2+ values must be provided");
      return values.reduce(function(total, value) {
        return total.add(value);
      }).div(values.length);
    }
    /**
     * Rescales the given value by the given power of 10
     *
     * @internal
     */
  }, {
    key: "rescale",
    value: function rescale(value, powerOfTen) {
      return value.mul(BigDecimal2.pow(10, powerOfTen));
    }
  }]);
  return BigDecimal2;
}(decimal_default.clone({
  precision: 32,
  toExpPos: 18,
  // use fixed-point notation up to 10^+18 (included)
  toExpNeg: -19,
  // use fixed-point notation up to 10^-18 (included)
  rounding: decimal_default.ROUND_HALF_CEIL
}));
function _typeof(o2) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof(o2);
}
var ChainType = /* @__PURE__ */ function(ChainType2) {
  ChainType2["ETHEREUM"] = "ethereum";
  ChainType2["POLYGON"] = "polygon";
  return ChainType2;
}({});
var Kind = /* @__PURE__ */ function(Kind3) {
  Kind3[Kind3["NATIVE"] = 0] = "NATIVE";
  Kind3[Kind3["ERC20"] = 1] = "ERC20";
  Kind3[Kind3["FIAT"] = 2] = "FIAT";
  return Kind3;
}({});
var WellKnownSymbols = /* @__PURE__ */ function(WellKnownSymbols2) {
  WellKnownSymbols2["ETH"] = "ETH";
  WellKnownSymbols2["MATIC"] = "MATIC";
  WellKnownSymbols2["USD"] = "USD";
  WellKnownSymbols2["USDC"] = "USDC";
  return WellKnownSymbols2;
}({});
var NativeType = /* @__PURE__ */ function(NativeType2) {
  NativeType2[NativeType2["ETHER"] = 0] = "ETHER";
  NativeType2[NativeType2["MATIC"] = 1] = "MATIC";
  return NativeType2;
}({});
var Fiat = /* @__PURE__ */ function() {
  function Fiat2(name4, symbol) {
    _classCallCheck(this, Fiat2);
    _defineProperty(this, "kind", Kind.FIAT);
    _defineProperty(this, "decimals", 2);
    this.name = name4;
    this.symbol = symbol;
  }
  _createClass(Fiat2, [{
    key: "hash",
    get: function get() {
      return this.symbol;
    }
  }, {
    key: "isErc20",
    value: function isErc20() {
      return false;
    }
  }, {
    key: "isFiat",
    value: function isFiat() {
      return true;
    }
  }, {
    key: "toString",
    value: function toString6() {
      return this.symbol;
    }
  }]);
  return Fiat2;
}();
var Ether = /* @__PURE__ */ function() {
  function Ether2() {
    _classCallCheck(this, Ether2);
    _defineProperty(this, "kind", Kind.NATIVE);
    _defineProperty(this, "type", NativeType.ETHER);
    _defineProperty(this, "name", "Ethereum");
    _defineProperty(this, "decimals", 18);
    _defineProperty(this, "symbol", WellKnownSymbols.ETH);
    _defineProperty(this, "chainType", ChainType.ETHEREUM);
  }
  _createClass(Ether2, [{
    key: "hash",
    get: (
      /** @internal */
      function get() {
        return this.type.toString();
      }
    )
  }, {
    key: "isErc20",
    value: function isErc20() {
      return false;
    }
  }, {
    key: "isNativeToken",
    value: function isNativeToken() {
      return true;
    }
  }, {
    key: "isFiat",
    value: function isFiat() {
      return false;
    }
  }, {
    key: "toString",
    value: function toString6() {
      return this.symbol;
    }
  }]);
  return Ether2;
}();
var Matic = /* @__PURE__ */ function() {
  function Matic2() {
    _classCallCheck(this, Matic2);
    _defineProperty(this, "kind", Kind.NATIVE);
    _defineProperty(this, "type", NativeType.MATIC);
    _defineProperty(this, "name", "Matic");
    _defineProperty(this, "decimals", 18);
    _defineProperty(this, "symbol", WellKnownSymbols.MATIC);
    _defineProperty(this, "chainType", ChainType.POLYGON);
  }
  _createClass(Matic2, [{
    key: "hash",
    get: (
      /** @internal */
      function get() {
        return this.type.toString();
      }
    )
  }, {
    key: "isErc20",
    value: function isErc20() {
      return false;
    }
  }, {
    key: "isNativeToken",
    value: function isNativeToken() {
      return true;
    }
  }, {
    key: "isFiat",
    value: function isFiat() {
      return false;
    }
  }, {
    key: "toString",
    value: function toString6() {
      return this.symbol;
    }
  }]);
  return Matic2;
}();
var instances = /* @__PURE__ */ new Map();
function immutable(key, asset) {
  if (instances.has(key)) {
    return instances.get(key);
  }
  instances.set(key, asset);
  return asset;
}
function matic() {
  var asset = new Matic();
  return immutable(asset.hash, asset);
}
function ether() {
  var asset = new Ether();
  return immutable(asset.hash, asset);
}
function usd() {
  var asset = new Fiat("United States dollar", WellKnownSymbols.USD);
  return immutable(asset.hash, asset);
}
var _Symbol$toStringTag;
_Symbol$toStringTag = Symbol.toStringTag;
var Amount = /* @__PURE__ */ function() {
  function Amount2(asset, value) {
    _classCallCheck(this, Amount2);
    this.asset = asset;
    this.value = value;
  }
  _createClass(Amount2, [{
    key: "convert",
    value: function convert(rate) {
      return new Amount2(rate.asset, this.value.mul(rate.value));
    }
    /**
     * Equality check for Amounts of the same {@link Asset}.
     *
     * @returns `true` if this Amount is equal to the `amount` parameter.
     */
  }, {
    key: "eq",
    value: function eq(amount) {
      return amount.asset === this.asset && amount.value.eq(this.value);
    }
    /**
     * Greater than check for Amounts of the same {@link Asset}.
     *
     * @returns `true` if this Amount is greater than the `amount` parameter.
     */
  }, {
    key: "gt",
    value: function gt(amount) {
      invariant(this.asset === amount.asset, "Cannot compare ".concat(this.asset.symbol, " Amount with ").concat(amount.asset.symbol, " Amount"));
      return this.value.gt(amount.value);
    }
    /**
     * Greater than or equal check for Amounts of the same {@link Asset}.
     *
     * @returns `true` if this Amount is greater than or equal to the `amount` parameter.
     */
  }, {
    key: "gte",
    value: function gte(amount) {
      invariant(this.asset === amount.asset, "Cannot compare ".concat(this.asset.symbol, " Amount with ").concat(amount.asset.symbol, " Amount"));
      return this.value.gte(amount.value);
    }
    /**
     * Less than check for Amounts of the same {@link Asset}.
     *
     * @returns `true` if this Amount is less than the `amount` parameter.
     */
  }, {
    key: "lt",
    value: function lt(amount) {
      return !this.gte(amount);
    }
    /**
     * Less than or equal check for Amounts of the same {@link Asset}.
     *
     * @returns `true` if this Amount is less than or equal to the `amount` parameter.
     */
  }, {
    key: "lte",
    value: function lte(amount) {
      return !this.gt(amount);
    }
    /**
     * Sum of two Amounts of the same {@link Asset}.
     *
     * @returns a new Amount that is the sum of this Amount and the `amount` parameter.
     */
  }, {
    key: "add",
    value: function add3(amount) {
      invariant(this.asset === amount.asset, "Cannot add ".concat(this.asset.symbol, " Amount with ").concat(amount.asset.symbol, " Amount"));
      return new Amount2(this.asset, this.value.add(amount.value));
    }
    /**
     * Difference of two Amounts of the same {@link Asset}.
     *
     * @returns a new Amount that is the difference of this Amount and the `amount` parameter.
     */
  }, {
    key: "sub",
    value: function sub2(amount) {
      invariant(this.asset === amount.asset, "Cannot subtract ".concat(this.asset.symbol, " Amount with ").concat(amount.asset.symbol, " Amount"));
      return new Amount2(this.asset, this.value.sub(amount.value));
    }
    /**
     * Product of an Amount and a scalar factor.
     *
     * @returns a new Amount that is the product of this Amount and the `factor` parameter.
     */
  }, {
    key: "mul",
    value: function mul2(factor) {
      return new Amount2(this.asset, this.value.mul(factor));
    }
    /**
     * Quotient of an Amount and a scalar divisor.
     *
     * @returns a new Amount that is the quotient of this Amount and the `divisor` parameter.
     */
  }, {
    key: "div",
    value: function div2(divisor) {
      return new Amount2(this.asset, this.value.div(divisor));
    }
    /**
     * Converts the internal value as {@link BigDecimal} truncated at the {@link Asset} max precision.
     *
     * Use this as your last resource, you should favour the use of Amount arithmetic methods to have a guarantee maximum precision.
     *
     * **Use at your own risk.**
     *
     * @experimental
     */
  }, {
    key: "toBigDecimal",
    value: function toBigDecimal() {
      return this.value.toDecimalPlaces(this.asset.decimals, BigDecimal.ROUND_FLOOR);
    }
    /**
     * Formats the Amount value using fixed-point notation.
     *
     * Optionally you can specify the number of decimals to return.
     *
     * @returns the internal value as `string` truncated at this Amount {@link Asset} max precision.
     */
  }, {
    key: "toFixed",
    value: function toFixed() {
      var decimals = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.asset.decimals;
      return this.value.toFixed(decimals);
    }
    /**
     * Formats the Amount value to its maximum precision using a fixed-point notation.
     *
     * Optionally you can specify the number of significant digits to approximate the value to.
     *
     * @returns the internal value as `string` truncated at this Amount {@link Asset} max precision.
     */
  }, {
    key: "toSignificantDigits",
    value: function toSignificantDigits() {
      var significantDigits = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.asset.decimals;
      return this.value.toSignificantDigits(significantDigits).toString();
    }
    /**
     * Converts the Amount value as less safe JS `number`.
     *
     * **Use at your own risk.**
     *
     * Type coercion with, for example, JavaScript's unary plus operator will also work.
     *
     * @returns the internal value as `number` that has the potential to lose precision.
     */
  }, {
    key: "toNumber",
    value: function toNumber2() {
      return this.value.toNumber();
    }
    /**
     * Convenience method to check if the Amount value is zero.
     *
     * @returns `true` if the Amount value is zero.
     */
  }, {
    key: "isZero",
    value: function isZero() {
      return this.value.isZero();
    }
    /**
     * Diagnostic method to inspect the internal value.
     *
     * @returns a string representation of the Amount value and {@link Asset} symbol.
     */
  }, {
    key: "toString",
    value: function toString6() {
      return "".concat(this.toSignificantDigits(6), " ").concat(this.asset.symbol);
    }
    /**
     * Creates an Amount of the same {@link Asset} with the new specified `value`.
     *
     * @returns a new Amount with the same {@link Asset} and the new `value`.
     */
  }, {
    key: "clone",
    value: function clone2(value) {
      return Amount2.from(this.asset, value);
    }
  }], [{
    key: "from",
    value: function from7(asset, value) {
      switch (_typeof(value)) {
        case "string":
        case "number":
          return new Amount2(asset, new BigDecimal(value));
        default:
          return new Amount2(asset, value);
      }
    }
    /**
     *
     *
     * @internal
     */
  }, {
    key: "erc20",
    value: (
      /**
       * Creates an Amount of the specified {@link Erc20} with the specified `value`.
       */
      function erc202(asset, value) {
        return this.from(asset, value);
      }
    )
    /**
     * Creates an {@link Ether} Amount with the specified `value`.
     */
  }, {
    key: "ether",
    value: function ether$1(value) {
      return this.from(ether(), value);
    }
    /**
     * Creates an USD {@link Fiat} Amount with the specified `value`.
     */
  }, {
    key: "usd",
    value: function usd$1(value) {
      return this.from(usd(), value);
    }
    /**
     * Creates an {@link Matic} Amount with the specified `value`.
     */
  }, {
    key: "matic",
    value: function matic$1(value) {
      return this.from(matic(), value);
    }
  }]);
  return Amount2;
}();
_defineProperty(Amount, _Symbol$toStringTag, "Amount");

// node_modules/.pnpm/@lens-protocol+shared-kernel@0.11.0-alpha.9/node_modules/@lens-protocol/shared-kernel/dist/lens-protocol-shared-kernel.esm.js
var import_defaultTo = __toESM(require_defaultTo());
var import_isObject = __toESM(require_isObject());
var import_get = __toESM(require_get());
var import_isObject2 = __toESM(require_isObject());
var import_isObjectLike = __toESM(require_isObjectLike());
function hasAtLeastOne(items) {
  return items.length > 0;
}
var DateUtils = /* @__PURE__ */ function() {
  function DateUtils2() {
    _classCallCheck(this, DateUtils2);
  }
  _createClass(DateUtils2, null, [{
    key: "toUnix",
    value: function toUnix(date) {
      if (date instanceof Date) {
        return date.getTime();
      }
      if (typeof date === "string") {
        return new Date(date).getTime();
      }
      return date;
    }
  }, {
    key: "toISOString",
    value: function toISOString(date) {
      if (typeof date === "string" || typeof date === "number") {
        return new Date(date).toISOString();
      }
      return date.toISOString();
    }
  }, {
    key: "unix",
    value: function unix() {
      return Date.now();
    }
  }, {
    key: "unixInSeconds",
    value: function unixInSeconds() {
      return this.unix() / 1e3;
    }
  }, {
    key: "hoursToMs",
    value: function hoursToMs(hours) {
      return this.minutesToMs(hours * 60);
    }
  }, {
    key: "minutesToMs",
    value: function minutesToMs(minutes) {
      return minutes * 6 * 10 * 1e3;
    }
  }, {
    key: "secondsToMs",
    value: function secondsToMs(seconds) {
      return seconds * 1e3;
    }
  }]);
  return DateUtils2;
}();
var Success = /* @__PURE__ */ function() {
  function Success2(value) {
    _classCallCheck(this, Success2);
    this.value = value;
  }
  _createClass(Success2, [{
    key: "isSuccess",
    value: function isSuccess() {
      return true;
    }
  }, {
    key: "isFailure",
    value: function isFailure() {
      return false;
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return this.value;
    }
  }]);
  return Success2;
}();
var Failure = /* @__PURE__ */ function() {
  function Failure2(error) {
    _classCallCheck(this, Failure2);
    this.error = error;
  }
  _createClass(Failure2, [{
    key: "isSuccess",
    value: function isSuccess() {
      return false;
    }
  }, {
    key: "isFailure",
    value: function isFailure() {
      return true;
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      throw this.error;
    }
  }]);
  return Failure2;
}();
function success() {
  var value = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
  return new Success(value);
}
var failure = function failure2(error) {
  return new Failure(error);
};
function assertError(error) {
  if (!(0, import_isObject2.default)(error) || !Error.prototype.isPrototypeOf(error)) {
    throw error;
  }
}
function never() {
  var message2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Unexpected call to never()";
  throw new InvariantError(message2);
}

// node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/index.mjs
var util;
(function(util2) {
  util2.assertEqual = (val) => val;
  function assertIs(_arg) {
  }
  util2.assertIs = assertIs;
  function assertNever(_x) {
    throw new Error();
  }
  util2.assertNever = assertNever;
  util2.arrayToEnum = (items) => {
    const obj = {};
    for (const item of items) {
      obj[item] = item;
    }
    return obj;
  };
  util2.getValidEnumValues = (obj) => {
    const validKeys = util2.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== "number");
    const filtered = {};
    for (const k of validKeys) {
      filtered[k] = obj[k];
    }
    return util2.objectValues(filtered);
  };
  util2.objectValues = (obj) => {
    return util2.objectKeys(obj).map(function(e2) {
      return obj[e2];
    });
  };
  util2.objectKeys = typeof Object.keys === "function" ? (obj) => Object.keys(obj) : (object) => {
    const keys = [];
    for (const key in object) {
      if (Object.prototype.hasOwnProperty.call(object, key)) {
        keys.push(key);
      }
    }
    return keys;
  };
  util2.find = (arr, checker) => {
    for (const item of arr) {
      if (checker(item))
        return item;
    }
    return void 0;
  };
  util2.isInteger = typeof Number.isInteger === "function" ? (val) => Number.isInteger(val) : (val) => typeof val === "number" && isFinite(val) && Math.floor(val) === val;
  function joinValues(array, separator = " | ") {
    return array.map((val) => typeof val === "string" ? `'${val}'` : val).join(separator);
  }
  util2.joinValues = joinValues;
  util2.jsonStringifyReplacer = (_, value) => {
    if (typeof value === "bigint") {
      return value.toString();
    }
    return value;
  };
})(util || (util = {}));
var objectUtil;
(function(objectUtil2) {
  objectUtil2.mergeShapes = (first, second) => {
    return {
      ...first,
      ...second
      // second overwrites first
    };
  };
})(objectUtil || (objectUtil = {}));
var ZodParsedType = util.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]);
var getParsedType = (data) => {
  const t2 = typeof data;
  switch (t2) {
    case "undefined":
      return ZodParsedType.undefined;
    case "string":
      return ZodParsedType.string;
    case "number":
      return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;
    case "boolean":
      return ZodParsedType.boolean;
    case "function":
      return ZodParsedType.function;
    case "bigint":
      return ZodParsedType.bigint;
    case "symbol":
      return ZodParsedType.symbol;
    case "object":
      if (Array.isArray(data)) {
        return ZodParsedType.array;
      }
      if (data === null) {
        return ZodParsedType.null;
      }
      if (data.then && typeof data.then === "function" && data.catch && typeof data.catch === "function") {
        return ZodParsedType.promise;
      }
      if (typeof Map !== "undefined" && data instanceof Map) {
        return ZodParsedType.map;
      }
      if (typeof Set !== "undefined" && data instanceof Set) {
        return ZodParsedType.set;
      }
      if (typeof Date !== "undefined" && data instanceof Date) {
        return ZodParsedType.date;
      }
      return ZodParsedType.object;
    default:
      return ZodParsedType.unknown;
  }
};
var ZodIssueCode = util.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of",
  "not_finite"
]);
var quotelessJson = (obj) => {
  const json = JSON.stringify(obj, null, 2);
  return json.replace(/"([^"]+)":/g, "$1:");
};
var ZodError = class extends Error {
  constructor(issues) {
    super();
    this.issues = [];
    this.addIssue = (sub2) => {
      this.issues = [...this.issues, sub2];
    };
    this.addIssues = (subs = []) => {
      this.issues = [...this.issues, ...subs];
    };
    const actualProto = new.target.prototype;
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(this, actualProto);
    } else {
      this.__proto__ = actualProto;
    }
    this.name = "ZodError";
    this.issues = issues;
  }
  get errors() {
    return this.issues;
  }
  format(_mapper) {
    const mapper = _mapper || function(issue) {
      return issue.message;
    };
    const fieldErrors = { _errors: [] };
    const processError = (error) => {
      for (const issue of error.issues) {
        if (issue.code === "invalid_union") {
          issue.unionErrors.map(processError);
        } else if (issue.code === "invalid_return_type") {
          processError(issue.returnTypeError);
        } else if (issue.code === "invalid_arguments") {
          processError(issue.argumentsError);
        } else if (issue.path.length === 0) {
          fieldErrors._errors.push(mapper(issue));
        } else {
          let curr = fieldErrors;
          let i = 0;
          while (i < issue.path.length) {
            const el = issue.path[i];
            const terminal = i === issue.path.length - 1;
            if (!terminal) {
              curr[el] = curr[el] || { _errors: [] };
            } else {
              curr[el] = curr[el] || { _errors: [] };
              curr[el]._errors.push(mapper(issue));
            }
            curr = curr[el];
            i++;
          }
        }
      }
    };
    processError(this);
    return fieldErrors;
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(mapper = (issue) => issue.message) {
    const fieldErrors = {};
    const formErrors = [];
    for (const sub2 of this.issues) {
      if (sub2.path.length > 0) {
        fieldErrors[sub2.path[0]] = fieldErrors[sub2.path[0]] || [];
        fieldErrors[sub2.path[0]].push(mapper(sub2));
      } else {
        formErrors.push(mapper(sub2));
      }
    }
    return { formErrors, fieldErrors };
  }
  get formErrors() {
    return this.flatten();
  }
};
ZodError.create = (issues) => {
  const error = new ZodError(issues);
  return error;
};
var errorMap = (issue, _ctx) => {
  let message2;
  switch (issue.code) {
    case ZodIssueCode.invalid_type:
      if (issue.received === ZodParsedType.undefined) {
        message2 = "Required";
      } else {
        message2 = `Expected ${issue.expected}, received ${issue.received}`;
      }
      break;
    case ZodIssueCode.invalid_literal:
      message2 = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;
      break;
    case ZodIssueCode.unrecognized_keys:
      message2 = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, ", ")}`;
      break;
    case ZodIssueCode.invalid_union:
      message2 = `Invalid input`;
      break;
    case ZodIssueCode.invalid_union_discriminator:
      message2 = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;
      break;
    case ZodIssueCode.invalid_enum_value:
      message2 = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;
      break;
    case ZodIssueCode.invalid_arguments:
      message2 = `Invalid function arguments`;
      break;
    case ZodIssueCode.invalid_return_type:
      message2 = `Invalid function return type`;
      break;
    case ZodIssueCode.invalid_date:
      message2 = `Invalid date`;
      break;
    case ZodIssueCode.invalid_string:
      if (typeof issue.validation === "object") {
        if ("includes" in issue.validation) {
          message2 = `Invalid input: must include "${issue.validation.includes}"`;
          if (typeof issue.validation.position === "number") {
            message2 = `${message2} at one or more positions greater than or equal to ${issue.validation.position}`;
          }
        } else if ("startsWith" in issue.validation) {
          message2 = `Invalid input: must start with "${issue.validation.startsWith}"`;
        } else if ("endsWith" in issue.validation) {
          message2 = `Invalid input: must end with "${issue.validation.endsWith}"`;
        } else {
          util.assertNever(issue.validation);
        }
      } else if (issue.validation !== "regex") {
        message2 = `Invalid ${issue.validation}`;
      } else {
        message2 = "Invalid";
      }
      break;
    case ZodIssueCode.too_small:
      if (issue.type === "array")
        message2 = `Array must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;
      else if (issue.type === "string")
        message2 = `String must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;
      else if (issue.type === "number")
        message2 = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
      else if (issue.type === "date")
        message2 = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;
      else
        message2 = "Invalid input";
      break;
    case ZodIssueCode.too_big:
      if (issue.type === "array")
        message2 = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;
      else if (issue.type === "string")
        message2 = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;
      else if (issue.type === "number")
        message2 = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "bigint")
        message2 = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "date")
        message2 = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;
      else
        message2 = "Invalid input";
      break;
    case ZodIssueCode.custom:
      message2 = `Invalid input`;
      break;
    case ZodIssueCode.invalid_intersection_types:
      message2 = `Intersection results could not be merged`;
      break;
    case ZodIssueCode.not_multiple_of:
      message2 = `Number must be a multiple of ${issue.multipleOf}`;
      break;
    case ZodIssueCode.not_finite:
      message2 = "Number must be finite";
      break;
    default:
      message2 = _ctx.defaultError;
      util.assertNever(issue);
  }
  return { message: message2 };
};
var overrideErrorMap = errorMap;
function setErrorMap(map) {
  overrideErrorMap = map;
}
function getErrorMap() {
  return overrideErrorMap;
}
var makeIssue = (params) => {
  const { data, path, errorMaps, issueData } = params;
  const fullPath = [...path, ...issueData.path || []];
  const fullIssue = {
    ...issueData,
    path: fullPath
  };
  let errorMessage = "";
  const maps = errorMaps.filter((m) => !!m).slice().reverse();
  for (const map of maps) {
    errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;
  }
  return {
    ...issueData,
    path: fullPath,
    message: issueData.message || errorMessage
  };
};
var EMPTY_PATH = [];
function addIssueToContext(ctx, issueData) {
  const issue = makeIssue({
    issueData,
    data: ctx.data,
    path: ctx.path,
    errorMaps: [
      ctx.common.contextualErrorMap,
      ctx.schemaErrorMap,
      getErrorMap(),
      errorMap
      // then global default map
    ].filter((x) => !!x)
  });
  ctx.common.issues.push(issue);
}
var ParseStatus = class _ParseStatus {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    if (this.value === "valid")
      this.value = "dirty";
  }
  abort() {
    if (this.value !== "aborted")
      this.value = "aborted";
  }
  static mergeArray(status, results) {
    const arrayValue = [];
    for (const s of results) {
      if (s.status === "aborted")
        return INVALID;
      if (s.status === "dirty")
        status.dirty();
      arrayValue.push(s.value);
    }
    return { status: status.value, value: arrayValue };
  }
  static async mergeObjectAsync(status, pairs) {
    const syncPairs = [];
    for (const pair of pairs) {
      syncPairs.push({
        key: await pair.key,
        value: await pair.value
      });
    }
    return _ParseStatus.mergeObjectSync(status, syncPairs);
  }
  static mergeObjectSync(status, pairs) {
    const finalObject = {};
    for (const pair of pairs) {
      const { key, value } = pair;
      if (key.status === "aborted")
        return INVALID;
      if (value.status === "aborted")
        return INVALID;
      if (key.status === "dirty")
        status.dirty();
      if (value.status === "dirty")
        status.dirty();
      if (key.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
        finalObject[key.value] = value.value;
      }
    }
    return { status: status.value, value: finalObject };
  }
};
var INVALID = Object.freeze({
  status: "aborted"
});
var DIRTY = (value) => ({ status: "dirty", value });
var OK = (value) => ({ status: "valid", value });
var isAborted = (x) => x.status === "aborted";
var isDirty = (x) => x.status === "dirty";
var isValid = (x) => x.status === "valid";
var isAsync = (x) => typeof Promise !== "undefined" && x instanceof Promise;
var errorUtil;
(function(errorUtil2) {
  errorUtil2.errToObj = (message2) => typeof message2 === "string" ? { message: message2 } : message2 || {};
  errorUtil2.toString = (message2) => typeof message2 === "string" ? message2 : message2 === null || message2 === void 0 ? void 0 : message2.message;
})(errorUtil || (errorUtil = {}));
var ParseInputLazyPath = class {
  constructor(parent, value, path, key) {
    this._cachedPath = [];
    this.parent = parent;
    this.data = value;
    this._path = path;
    this._key = key;
  }
  get path() {
    if (!this._cachedPath.length) {
      if (this._key instanceof Array) {
        this._cachedPath.push(...this._path, ...this._key);
      } else {
        this._cachedPath.push(...this._path, this._key);
      }
    }
    return this._cachedPath;
  }
};
var handleResult = (ctx, result) => {
  if (isValid(result)) {
    return { success: true, data: result.value };
  } else {
    if (!ctx.common.issues.length) {
      throw new Error("Validation failed but no issues detected.");
    }
    return {
      success: false,
      get error() {
        if (this._error)
          return this._error;
        const error = new ZodError(ctx.common.issues);
        this._error = error;
        return this._error;
      }
    };
  }
};
function processCreateParams(params) {
  if (!params)
    return {};
  const { errorMap: errorMap2, invalid_type_error, required_error, description } = params;
  if (errorMap2 && (invalid_type_error || required_error)) {
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  }
  if (errorMap2)
    return { errorMap: errorMap2, description };
  const customMap = (iss, ctx) => {
    if (iss.code !== "invalid_type")
      return { message: ctx.defaultError };
    if (typeof ctx.data === "undefined") {
      return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };
    }
    return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };
  };
  return { errorMap: customMap, description };
}
var ZodType = class {
  constructor(def) {
    this.spa = this.safeParseAsync;
    this._def = def;
    this.parse = this.parse.bind(this);
    this.safeParse = this.safeParse.bind(this);
    this.parseAsync = this.parseAsync.bind(this);
    this.safeParseAsync = this.safeParseAsync.bind(this);
    this.spa = this.spa.bind(this);
    this.refine = this.refine.bind(this);
    this.refinement = this.refinement.bind(this);
    this.superRefine = this.superRefine.bind(this);
    this.optional = this.optional.bind(this);
    this.nullable = this.nullable.bind(this);
    this.nullish = this.nullish.bind(this);
    this.array = this.array.bind(this);
    this.promise = this.promise.bind(this);
    this.or = this.or.bind(this);
    this.and = this.and.bind(this);
    this.transform = this.transform.bind(this);
    this.brand = this.brand.bind(this);
    this.default = this.default.bind(this);
    this.catch = this.catch.bind(this);
    this.describe = this.describe.bind(this);
    this.pipe = this.pipe.bind(this);
    this.readonly = this.readonly.bind(this);
    this.isNullable = this.isNullable.bind(this);
    this.isOptional = this.isOptional.bind(this);
  }
  get description() {
    return this._def.description;
  }
  _getType(input) {
    return getParsedType(input.data);
  }
  _getOrReturnCtx(input, ctx) {
    return ctx || {
      common: input.parent.common,
      data: input.data,
      parsedType: getParsedType(input.data),
      schemaErrorMap: this._def.errorMap,
      path: input.path,
      parent: input.parent
    };
  }
  _processInputParams(input) {
    return {
      status: new ParseStatus(),
      ctx: {
        common: input.parent.common,
        data: input.data,
        parsedType: getParsedType(input.data),
        schemaErrorMap: this._def.errorMap,
        path: input.path,
        parent: input.parent
      }
    };
  }
  _parseSync(input) {
    const result = this._parse(input);
    if (isAsync(result)) {
      throw new Error("Synchronous parse encountered promise.");
    }
    return result;
  }
  _parseAsync(input) {
    const result = this._parse(input);
    return Promise.resolve(result);
  }
  parse(data, params) {
    const result = this.safeParse(data, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  safeParse(data, params) {
    var _a;
    const ctx = {
      common: {
        issues: [],
        async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,
        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
      },
      path: (params === null || params === void 0 ? void 0 : params.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    const result = this._parseSync({ data, path: ctx.path, parent: ctx });
    return handleResult(ctx, result);
  }
  async parseAsync(data, params) {
    const result = await this.safeParseAsync(data, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  async safeParseAsync(data, params) {
    const ctx = {
      common: {
        issues: [],
        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,
        async: true
      },
      path: (params === null || params === void 0 ? void 0 : params.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });
    const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));
    return handleResult(ctx, result);
  }
  refine(check, message2) {
    const getIssueProperties = (val) => {
      if (typeof message2 === "string" || typeof message2 === "undefined") {
        return { message: message2 };
      } else if (typeof message2 === "function") {
        return message2(val);
      } else {
        return message2;
      }
    };
    return this._refinement((val, ctx) => {
      const result = check(val);
      const setError = () => ctx.addIssue({
        code: ZodIssueCode.custom,
        ...getIssueProperties(val)
      });
      if (typeof Promise !== "undefined" && result instanceof Promise) {
        return result.then((data) => {
          if (!data) {
            setError();
            return false;
          } else {
            return true;
          }
        });
      }
      if (!result) {
        setError();
        return false;
      } else {
        return true;
      }
    });
  }
  refinement(check, refinementData) {
    return this._refinement((val, ctx) => {
      if (!check(val)) {
        ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
        return false;
      } else {
        return true;
      }
    });
  }
  _refinement(refinement) {
    return new ZodEffects({
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "refinement", refinement }
    });
  }
  superRefine(refinement) {
    return this._refinement(refinement);
  }
  optional() {
    return ZodOptional.create(this, this._def);
  }
  nullable() {
    return ZodNullable.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return ZodArray.create(this, this._def);
  }
  promise() {
    return ZodPromise.create(this, this._def);
  }
  or(option) {
    return ZodUnion.create([this, option], this._def);
  }
  and(incoming) {
    return ZodIntersection.create(this, incoming, this._def);
  }
  transform(transform) {
    return new ZodEffects({
      ...processCreateParams(this._def),
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "transform", transform }
    });
  }
  default(def) {
    const defaultValueFunc = typeof def === "function" ? def : () => def;
    return new ZodDefault({
      ...processCreateParams(this._def),
      innerType: this,
      defaultValue: defaultValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodDefault
    });
  }
  brand() {
    return new ZodBranded({
      typeName: ZodFirstPartyTypeKind.ZodBranded,
      type: this,
      ...processCreateParams(this._def)
    });
  }
  catch(def) {
    const catchValueFunc = typeof def === "function" ? def : () => def;
    return new ZodCatch({
      ...processCreateParams(this._def),
      innerType: this,
      catchValue: catchValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodCatch
    });
  }
  describe(description) {
    const This = this.constructor;
    return new This({
      ...this._def,
      description
    });
  }
  pipe(target) {
    return ZodPipeline.create(this, target);
  }
  readonly() {
    return ZodReadonly.create(this);
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
};
var cuidRegex = /^c[^\s-]{8,}$/i;
var cuid2Regex = /^[a-z][a-z0-9]*$/;
var ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;
var uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
var emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
var _emojiRegex = `^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;
var emojiRegex;
var ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;
var ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
var datetimeRegex = (args) => {
  if (args.precision) {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}Z$`);
    }
  } else if (args.precision === 0) {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$`);
    }
  } else {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$`);
    }
  }
};
function isValidIP(ip, version3) {
  if ((version3 === "v4" || !version3) && ipv4Regex.test(ip)) {
    return true;
  }
  if ((version3 === "v6" || !version3) && ipv6Regex.test(ip)) {
    return true;
  }
  return false;
}
var ZodString = class _ZodString extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = String(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.string) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(
        ctx2,
        {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.string,
          received: ctx2.parsedType
        }
        //
      );
      return INVALID;
    }
    const status = new ParseStatus();
    let ctx = void 0;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.length < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.length > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "length") {
        const tooBig = input.data.length > check.value;
        const tooSmall = input.data.length < check.value;
        if (tooBig || tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          if (tooBig) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_big,
              maximum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          } else if (tooSmall) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_small,
              minimum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          }
          status.dirty();
        }
      } else if (check.kind === "email") {
        if (!emailRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "email",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "emoji") {
        if (!emojiRegex) {
          emojiRegex = new RegExp(_emojiRegex, "u");
        }
        if (!emojiRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "emoji",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "uuid") {
        if (!uuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "uuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid") {
        if (!cuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid2") {
        if (!cuid2Regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid2",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ulid") {
        if (!ulidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ulid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "url") {
        try {
          new URL(input.data);
        } catch (_a) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "url",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "regex") {
        check.regex.lastIndex = 0;
        const testResult = check.regex.test(input.data);
        if (!testResult) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "regex",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "trim") {
        input.data = input.data.trim();
      } else if (check.kind === "includes") {
        if (!input.data.includes(check.value, check.position)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { includes: check.value, position: check.position },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "toLowerCase") {
        input.data = input.data.toLowerCase();
      } else if (check.kind === "toUpperCase") {
        input.data = input.data.toUpperCase();
      } else if (check.kind === "startsWith") {
        if (!input.data.startsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { startsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "endsWith") {
        if (!input.data.endsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { endsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "datetime") {
        const regex = datetimeRegex(check);
        if (!regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: "datetime",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ip") {
        if (!isValidIP(input.data, check.version)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ip",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  _regex(regex, validation, message2) {
    return this.refinement((data) => regex.test(data), {
      validation,
      code: ZodIssueCode.invalid_string,
      ...errorUtil.errToObj(message2)
    });
  }
  _addCheck(check) {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  email(message2) {
    return this._addCheck({ kind: "email", ...errorUtil.errToObj(message2) });
  }
  url(message2) {
    return this._addCheck({ kind: "url", ...errorUtil.errToObj(message2) });
  }
  emoji(message2) {
    return this._addCheck({ kind: "emoji", ...errorUtil.errToObj(message2) });
  }
  uuid(message2) {
    return this._addCheck({ kind: "uuid", ...errorUtil.errToObj(message2) });
  }
  cuid(message2) {
    return this._addCheck({ kind: "cuid", ...errorUtil.errToObj(message2) });
  }
  cuid2(message2) {
    return this._addCheck({ kind: "cuid2", ...errorUtil.errToObj(message2) });
  }
  ulid(message2) {
    return this._addCheck({ kind: "ulid", ...errorUtil.errToObj(message2) });
  }
  ip(options) {
    return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
  }
  datetime(options) {
    var _a;
    if (typeof options === "string") {
      return this._addCheck({
        kind: "datetime",
        precision: null,
        offset: false,
        message: options
      });
    }
    return this._addCheck({
      kind: "datetime",
      precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
      offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,
      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
    });
  }
  regex(regex, message2) {
    return this._addCheck({
      kind: "regex",
      regex,
      ...errorUtil.errToObj(message2)
    });
  }
  includes(value, options) {
    return this._addCheck({
      kind: "includes",
      value,
      position: options === null || options === void 0 ? void 0 : options.position,
      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
    });
  }
  startsWith(value, message2) {
    return this._addCheck({
      kind: "startsWith",
      value,
      ...errorUtil.errToObj(message2)
    });
  }
  endsWith(value, message2) {
    return this._addCheck({
      kind: "endsWith",
      value,
      ...errorUtil.errToObj(message2)
    });
  }
  min(minLength, message2) {
    return this._addCheck({
      kind: "min",
      value: minLength,
      ...errorUtil.errToObj(message2)
    });
  }
  max(maxLength, message2) {
    return this._addCheck({
      kind: "max",
      value: maxLength,
      ...errorUtil.errToObj(message2)
    });
  }
  length(len, message2) {
    return this._addCheck({
      kind: "length",
      value: len,
      ...errorUtil.errToObj(message2)
    });
  }
  /**
   * @deprecated Use z.string().min(1) instead.
   * @see {@link ZodString.min}
   */
  nonempty(message2) {
    return this.min(1, errorUtil.errToObj(message2));
  }
  trim() {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  toLowerCase() {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toLowerCase" }]
    });
  }
  toUpperCase() {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toUpperCase" }]
    });
  }
  get isDatetime() {
    return !!this._def.checks.find((ch) => ch.kind === "datetime");
  }
  get isEmail() {
    return !!this._def.checks.find((ch) => ch.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((ch) => ch.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((ch) => ch.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((ch) => ch.kind === "uuid");
  }
  get isCUID() {
    return !!this._def.checks.find((ch) => ch.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((ch) => ch.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((ch) => ch.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((ch) => ch.kind === "ip");
  }
  get minLength() {
    let min2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min2 === null || ch.value > min2)
          min2 = ch.value;
      }
    }
    return min2;
  }
  get maxLength() {
    let max2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max2 === null || ch.value < max2)
          max2 = ch.value;
      }
    }
    return max2;
  }
};
ZodString.create = (params) => {
  var _a;
  return new ZodString({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodString,
    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,
    ...processCreateParams(params)
  });
};
function floatSafeRemainder(val, step) {
  const valDecCount = (val.toString().split(".")[1] || "").length;
  const stepDecCount = (step.toString().split(".")[1] || "").length;
  const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
  const valInt = parseInt(val.toFixed(decCount).replace(".", ""));
  const stepInt = parseInt(step.toFixed(decCount).replace(".", ""));
  return valInt % stepInt / Math.pow(10, decCount);
}
var ZodNumber = class _ZodNumber extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
    this.step = this.multipleOf;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = Number(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.number) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.number,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    let ctx = void 0;
    const status = new ParseStatus();
    for (const check of this._def.checks) {
      if (check.kind === "int") {
        if (!util.isInteger(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: "integer",
            received: "float",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (floatSafeRemainder(input.data, check.value) !== 0) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "finite") {
        if (!Number.isFinite(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_finite,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message2) {
    return this.setLimit("min", value, true, errorUtil.toString(message2));
  }
  gt(value, message2) {
    return this.setLimit("min", value, false, errorUtil.toString(message2));
  }
  lte(value, message2) {
    return this.setLimit("max", value, true, errorUtil.toString(message2));
  }
  lt(value, message2) {
    return this.setLimit("max", value, false, errorUtil.toString(message2));
  }
  setLimit(kind, value, inclusive, message2) {
    return new _ZodNumber({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message2)
        }
      ]
    });
  }
  _addCheck(check) {
    return new _ZodNumber({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  int(message2) {
    return this._addCheck({
      kind: "int",
      message: errorUtil.toString(message2)
    });
  }
  positive(message2) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message2)
    });
  }
  negative(message2) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message2)
    });
  }
  nonpositive(message2) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message2)
    });
  }
  nonnegative(message2) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message2)
    });
  }
  multipleOf(value, message2) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message2)
    });
  }
  finite(message2) {
    return this._addCheck({
      kind: "finite",
      message: errorUtil.toString(message2)
    });
  }
  safe(message2) {
    return this._addCheck({
      kind: "min",
      inclusive: true,
      value: Number.MIN_SAFE_INTEGER,
      message: errorUtil.toString(message2)
    })._addCheck({
      kind: "max",
      inclusive: true,
      value: Number.MAX_SAFE_INTEGER,
      message: errorUtil.toString(message2)
    });
  }
  get minValue() {
    let min2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min2 === null || ch.value > min2)
          min2 = ch.value;
      }
    }
    return min2;
  }
  get maxValue() {
    let max2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max2 === null || ch.value < max2)
          max2 = ch.value;
      }
    }
    return max2;
  }
  get isInt() {
    return !!this._def.checks.find((ch) => ch.kind === "int" || ch.kind === "multipleOf" && util.isInteger(ch.value));
  }
  get isFinite() {
    let max2 = null, min2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "finite" || ch.kind === "int" || ch.kind === "multipleOf") {
        return true;
      } else if (ch.kind === "min") {
        if (min2 === null || ch.value > min2)
          min2 = ch.value;
      } else if (ch.kind === "max") {
        if (max2 === null || ch.value < max2)
          max2 = ch.value;
      }
    }
    return Number.isFinite(min2) && Number.isFinite(max2);
  }
};
ZodNumber.create = (params) => {
  return new ZodNumber({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodNumber,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    ...processCreateParams(params)
  });
};
var ZodBigInt = class _ZodBigInt extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = BigInt(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.bigint) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.bigint,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    let ctx = void 0;
    const status = new ParseStatus();
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            type: "bigint",
            minimum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            type: "bigint",
            maximum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (input.data % check.value !== BigInt(0)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message2) {
    return this.setLimit("min", value, true, errorUtil.toString(message2));
  }
  gt(value, message2) {
    return this.setLimit("min", value, false, errorUtil.toString(message2));
  }
  lte(value, message2) {
    return this.setLimit("max", value, true, errorUtil.toString(message2));
  }
  lt(value, message2) {
    return this.setLimit("max", value, false, errorUtil.toString(message2));
  }
  setLimit(kind, value, inclusive, message2) {
    return new _ZodBigInt({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message2)
        }
      ]
    });
  }
  _addCheck(check) {
    return new _ZodBigInt({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  positive(message2) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message2)
    });
  }
  negative(message2) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message2)
    });
  }
  nonpositive(message2) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message2)
    });
  }
  nonnegative(message2) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message2)
    });
  }
  multipleOf(value, message2) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message2)
    });
  }
  get minValue() {
    let min2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min2 === null || ch.value > min2)
          min2 = ch.value;
      }
    }
    return min2;
  }
  get maxValue() {
    let max2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max2 === null || ch.value < max2)
          max2 = ch.value;
      }
    }
    return max2;
  }
};
ZodBigInt.create = (params) => {
  var _a;
  return new ZodBigInt({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodBigInt,
    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,
    ...processCreateParams(params)
  });
};
var ZodBoolean = class extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = Boolean(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.boolean) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.boolean,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
};
ZodBoolean.create = (params) => {
  return new ZodBoolean({
    typeName: ZodFirstPartyTypeKind.ZodBoolean,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    ...processCreateParams(params)
  });
};
var ZodDate = class _ZodDate extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = new Date(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.date) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.date,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    if (isNaN(input.data.getTime())) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_date
      });
      return INVALID;
    }
    const status = new ParseStatus();
    let ctx = void 0;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.getTime() < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            message: check.message,
            inclusive: true,
            exact: false,
            minimum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.getTime() > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            message: check.message,
            inclusive: true,
            exact: false,
            maximum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return {
      status: status.value,
      value: new Date(input.data.getTime())
    };
  }
  _addCheck(check) {
    return new _ZodDate({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  min(minDate, message2) {
    return this._addCheck({
      kind: "min",
      value: minDate.getTime(),
      message: errorUtil.toString(message2)
    });
  }
  max(maxDate, message2) {
    return this._addCheck({
      kind: "max",
      value: maxDate.getTime(),
      message: errorUtil.toString(message2)
    });
  }
  get minDate() {
    let min2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min2 === null || ch.value > min2)
          min2 = ch.value;
      }
    }
    return min2 != null ? new Date(min2) : null;
  }
  get maxDate() {
    let max2 = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max2 === null || ch.value < max2)
          max2 = ch.value;
      }
    }
    return max2 != null ? new Date(max2) : null;
  }
};
ZodDate.create = (params) => {
  return new ZodDate({
    checks: [],
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    typeName: ZodFirstPartyTypeKind.ZodDate,
    ...processCreateParams(params)
  });
};
var ZodSymbol = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.symbol) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.symbol,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
};
ZodSymbol.create = (params) => {
  return new ZodSymbol({
    typeName: ZodFirstPartyTypeKind.ZodSymbol,
    ...processCreateParams(params)
  });
};
var ZodUndefined = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.undefined,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
};
ZodUndefined.create = (params) => {
  return new ZodUndefined({
    typeName: ZodFirstPartyTypeKind.ZodUndefined,
    ...processCreateParams(params)
  });
};
var ZodNull = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.null) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.null,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
};
ZodNull.create = (params) => {
  return new ZodNull({
    typeName: ZodFirstPartyTypeKind.ZodNull,
    ...processCreateParams(params)
  });
};
var ZodAny = class extends ZodType {
  constructor() {
    super(...arguments);
    this._any = true;
  }
  _parse(input) {
    return OK(input.data);
  }
};
ZodAny.create = (params) => {
  return new ZodAny({
    typeName: ZodFirstPartyTypeKind.ZodAny,
    ...processCreateParams(params)
  });
};
var ZodUnknown = class extends ZodType {
  constructor() {
    super(...arguments);
    this._unknown = true;
  }
  _parse(input) {
    return OK(input.data);
  }
};
ZodUnknown.create = (params) => {
  return new ZodUnknown({
    typeName: ZodFirstPartyTypeKind.ZodUnknown,
    ...processCreateParams(params)
  });
};
var ZodNever = class extends ZodType {
  _parse(input) {
    const ctx = this._getOrReturnCtx(input);
    addIssueToContext(ctx, {
      code: ZodIssueCode.invalid_type,
      expected: ZodParsedType.never,
      received: ctx.parsedType
    });
    return INVALID;
  }
};
ZodNever.create = (params) => {
  return new ZodNever({
    typeName: ZodFirstPartyTypeKind.ZodNever,
    ...processCreateParams(params)
  });
};
var ZodVoid = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.void,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
};
ZodVoid.create = (params) => {
  return new ZodVoid({
    typeName: ZodFirstPartyTypeKind.ZodVoid,
    ...processCreateParams(params)
  });
};
var ZodArray = class _ZodArray extends ZodType {
  _parse(input) {
    const { ctx, status } = this._processInputParams(input);
    const def = this._def;
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID;
    }
    if (def.exactLength !== null) {
      const tooBig = ctx.data.length > def.exactLength.value;
      const tooSmall = ctx.data.length < def.exactLength.value;
      if (tooBig || tooSmall) {
        addIssueToContext(ctx, {
          code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,
          minimum: tooSmall ? def.exactLength.value : void 0,
          maximum: tooBig ? def.exactLength.value : void 0,
          type: "array",
          inclusive: true,
          exact: true,
          message: def.exactLength.message
        });
        status.dirty();
      }
    }
    if (def.minLength !== null) {
      if (ctx.data.length < def.minLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.minLength.message
        });
        status.dirty();
      }
    }
    if (def.maxLength !== null) {
      if (ctx.data.length > def.maxLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.maxLength.message
        });
        status.dirty();
      }
    }
    if (ctx.common.async) {
      return Promise.all([...ctx.data].map((item, i) => {
        return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));
      })).then((result2) => {
        return ParseStatus.mergeArray(status, result2);
      });
    }
    const result = [...ctx.data].map((item, i) => {
      return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));
    });
    return ParseStatus.mergeArray(status, result);
  }
  get element() {
    return this._def.type;
  }
  min(minLength, message2) {
    return new _ZodArray({
      ...this._def,
      minLength: { value: minLength, message: errorUtil.toString(message2) }
    });
  }
  max(maxLength, message2) {
    return new _ZodArray({
      ...this._def,
      maxLength: { value: maxLength, message: errorUtil.toString(message2) }
    });
  }
  length(len, message2) {
    return new _ZodArray({
      ...this._def,
      exactLength: { value: len, message: errorUtil.toString(message2) }
    });
  }
  nonempty(message2) {
    return this.min(1, message2);
  }
};
ZodArray.create = (schema, params) => {
  return new ZodArray({
    type: schema,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: ZodFirstPartyTypeKind.ZodArray,
    ...processCreateParams(params)
  });
};
function deepPartialify(schema) {
  if (schema instanceof ZodObject) {
    const newShape = {};
    for (const key in schema.shape) {
      const fieldSchema = schema.shape[key];
      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));
    }
    return new ZodObject({
      ...schema._def,
      shape: () => newShape
    });
  } else if (schema instanceof ZodArray) {
    return new ZodArray({
      ...schema._def,
      type: deepPartialify(schema.element)
    });
  } else if (schema instanceof ZodOptional) {
    return ZodOptional.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodNullable) {
    return ZodNullable.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodTuple) {
    return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));
  } else {
    return schema;
  }
}
var ZodObject = class _ZodObject extends ZodType {
  constructor() {
    super(...arguments);
    this._cached = null;
    this.nonstrict = this.passthrough;
    this.augment = this.extend;
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const shape = this._def.shape();
    const keys = util.objectKeys(shape);
    return this._cached = { shape, keys };
  }
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.object) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    const { status, ctx } = this._processInputParams(input);
    const { shape, keys: shapeKeys } = this._getCached();
    const extraKeys = [];
    if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
      for (const key in ctx.data) {
        if (!shapeKeys.includes(key)) {
          extraKeys.push(key);
        }
      }
    }
    const pairs = [];
    for (const key of shapeKeys) {
      const keyValidator = shape[key];
      const value = ctx.data[key];
      pairs.push({
        key: { status: "valid", value: key },
        value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),
        alwaysSet: key in ctx.data
      });
    }
    if (this._def.catchall instanceof ZodNever) {
      const unknownKeys = this._def.unknownKeys;
      if (unknownKeys === "passthrough") {
        for (const key of extraKeys) {
          pairs.push({
            key: { status: "valid", value: key },
            value: { status: "valid", value: ctx.data[key] }
          });
        }
      } else if (unknownKeys === "strict") {
        if (extraKeys.length > 0) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.unrecognized_keys,
            keys: extraKeys
          });
          status.dirty();
        }
      } else if (unknownKeys === "strip")
        ;
      else {
        throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);
      }
    } else {
      const catchall = this._def.catchall;
      for (const key of extraKeys) {
        const value = ctx.data[key];
        pairs.push({
          key: { status: "valid", value: key },
          value: catchall._parse(
            new ParseInputLazyPath(ctx, value, ctx.path, key)
            //, ctx.child(key), value, getParsedType(value)
          ),
          alwaysSet: key in ctx.data
        });
      }
    }
    if (ctx.common.async) {
      return Promise.resolve().then(async () => {
        const syncPairs = [];
        for (const pair of pairs) {
          const key = await pair.key;
          syncPairs.push({
            key,
            value: await pair.value,
            alwaysSet: pair.alwaysSet
          });
        }
        return syncPairs;
      }).then((syncPairs) => {
        return ParseStatus.mergeObjectSync(status, syncPairs);
      });
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get shape() {
    return this._def.shape();
  }
  strict(message2) {
    errorUtil.errToObj;
    return new _ZodObject({
      ...this._def,
      unknownKeys: "strict",
      ...message2 !== void 0 ? {
        errorMap: (issue, ctx) => {
          var _a, _b, _c, _d;
          const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;
          if (issue.code === "unrecognized_keys")
            return {
              message: (_d = errorUtil.errToObj(message2).message) !== null && _d !== void 0 ? _d : defaultError
            };
          return {
            message: defaultError
          };
        }
      } : {}
    });
  }
  strip() {
    return new _ZodObject({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new _ZodObject({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  // const AugmentFactory =
  //   <Def extends ZodObjectDef>(def: Def) =>
  //   <Augmentation extends ZodRawShape>(
  //     augmentation: Augmentation
  //   ): ZodObject<
  //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
  //     Def["unknownKeys"],
  //     Def["catchall"]
  //   > => {
  //     return new ZodObject({
  //       ...def,
  //       shape: () => ({
  //         ...def.shape(),
  //         ...augmentation,
  //       }),
  //     }) as any;
  //   };
  extend(augmentation) {
    return new _ZodObject({
      ...this._def,
      shape: () => ({
        ...this._def.shape(),
        ...augmentation
      })
    });
  }
  /**
   * Prior to zod@1.0.12 there was a bug in the
   * inferred type of merged objects. Please
   * upgrade if you are experiencing issues.
   */
  merge(merging) {
    const merged = new _ZodObject({
      unknownKeys: merging._def.unknownKeys,
      catchall: merging._def.catchall,
      shape: () => ({
        ...this._def.shape(),
        ...merging._def.shape()
      }),
      typeName: ZodFirstPartyTypeKind.ZodObject
    });
    return merged;
  }
  // merge<
  //   Incoming extends AnyZodObject,
  //   Augmentation extends Incoming["shape"],
  //   NewOutput extends {
  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
  //       ? Augmentation[k]["_output"]
  //       : k extends keyof Output
  //       ? Output[k]
  //       : never;
  //   },
  //   NewInput extends {
  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
  //       ? Augmentation[k]["_input"]
  //       : k extends keyof Input
  //       ? Input[k]
  //       : never;
  //   }
  // >(
  //   merging: Incoming
  // ): ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"],
  //   NewOutput,
  //   NewInput
  // > {
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  setKey(key, schema) {
    return this.augment({ [key]: schema });
  }
  // merge<Incoming extends AnyZodObject>(
  //   merging: Incoming
  // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
  // ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"]
  // > {
  //   // const mergedShape = objectUtil.mergeShapes(
  //   //   this._def.shape(),
  //   //   merging._def.shape()
  //   // );
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  catchall(index) {
    return new _ZodObject({
      ...this._def,
      catchall: index
    });
  }
  pick(mask2) {
    const shape = {};
    util.objectKeys(mask2).forEach((key) => {
      if (mask2[key] && this.shape[key]) {
        shape[key] = this.shape[key];
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  omit(mask2) {
    const shape = {};
    util.objectKeys(this.shape).forEach((key) => {
      if (!mask2[key]) {
        shape[key] = this.shape[key];
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  /**
   * @deprecated
   */
  deepPartial() {
    return deepPartialify(this);
  }
  partial(mask2) {
    const newShape = {};
    util.objectKeys(this.shape).forEach((key) => {
      const fieldSchema = this.shape[key];
      if (mask2 && !mask2[key]) {
        newShape[key] = fieldSchema;
      } else {
        newShape[key] = fieldSchema.optional();
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  required(mask2) {
    const newShape = {};
    util.objectKeys(this.shape).forEach((key) => {
      if (mask2 && !mask2[key]) {
        newShape[key] = this.shape[key];
      } else {
        const fieldSchema = this.shape[key];
        let newField = fieldSchema;
        while (newField instanceof ZodOptional) {
          newField = newField._def.innerType;
        }
        newShape[key] = newField;
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  keyof() {
    return createZodEnum(util.objectKeys(this.shape));
  }
};
ZodObject.create = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.strictCreate = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strict",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.lazycreate = (shape, params) => {
  return new ZodObject({
    shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
var ZodUnion = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const options = this._def.options;
    function handleResults(results) {
      for (const result of results) {
        if (result.result.status === "valid") {
          return result.result;
        }
      }
      for (const result of results) {
        if (result.result.status === "dirty") {
          ctx.common.issues.push(...result.ctx.common.issues);
          return result.result;
        }
      }
      const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID;
    }
    if (ctx.common.async) {
      return Promise.all(options.map(async (option) => {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await option._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: childCtx
          }),
          ctx: childCtx
        };
      })).then(handleResults);
    } else {
      let dirty = void 0;
      const issues = [];
      for (const option of options) {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        const result = option._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: childCtx
        });
        if (result.status === "valid") {
          return result;
        } else if (result.status === "dirty" && !dirty) {
          dirty = { result, ctx: childCtx };
        }
        if (childCtx.common.issues.length) {
          issues.push(childCtx.common.issues);
        }
      }
      if (dirty) {
        ctx.common.issues.push(...dirty.ctx.common.issues);
        return dirty.result;
      }
      const unionErrors = issues.map((issues2) => new ZodError(issues2));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID;
    }
  }
  get options() {
    return this._def.options;
  }
};
ZodUnion.create = (types, params) => {
  return new ZodUnion({
    options: types,
    typeName: ZodFirstPartyTypeKind.ZodUnion,
    ...processCreateParams(params)
  });
};
var getDiscriminator = (type) => {
  if (type instanceof ZodLazy) {
    return getDiscriminator(type.schema);
  } else if (type instanceof ZodEffects) {
    return getDiscriminator(type.innerType());
  } else if (type instanceof ZodLiteral) {
    return [type.value];
  } else if (type instanceof ZodEnum) {
    return type.options;
  } else if (type instanceof ZodNativeEnum) {
    return Object.keys(type.enum);
  } else if (type instanceof ZodDefault) {
    return getDiscriminator(type._def.innerType);
  } else if (type instanceof ZodUndefined) {
    return [void 0];
  } else if (type instanceof ZodNull) {
    return [null];
  } else {
    return null;
  }
};
var ZodDiscriminatedUnion = class _ZodDiscriminatedUnion extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const discriminator = this.discriminator;
    const discriminatorValue = ctx.data[discriminator];
    const option = this.optionsMap.get(discriminatorValue);
    if (!option) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union_discriminator,
        options: Array.from(this.optionsMap.keys()),
        path: [discriminator]
      });
      return INVALID;
    }
    if (ctx.common.async) {
      return option._parseAsync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    } else {
      return option._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    }
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  /**
   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
   * have a different value for each object in the union.
   * @param discriminator the name of the discriminator property
   * @param types an array of object schemas
   * @param params
   */
  static create(discriminator, options, params) {
    const optionsMap = /* @__PURE__ */ new Map();
    for (const type of options) {
      const discriminatorValues = getDiscriminator(type.shape[discriminator]);
      if (!discriminatorValues) {
        throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);
      }
      for (const value of discriminatorValues) {
        if (optionsMap.has(value)) {
          throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);
        }
        optionsMap.set(value, type);
      }
    }
    return new _ZodDiscriminatedUnion({
      typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
      discriminator,
      options,
      optionsMap,
      ...processCreateParams(params)
    });
  }
};
function mergeValues(a, b) {
  const aType = getParsedType(a);
  const bType = getParsedType(b);
  if (a === b) {
    return { valid: true, data: a };
  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {
    const bKeys = util.objectKeys(b);
    const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);
    const newObj = { ...a, ...b };
    for (const key of sharedKeys) {
      const sharedValue = mergeValues(a[key], b[key]);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newObj[key] = sharedValue.data;
    }
    return { valid: true, data: newObj };
  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {
    if (a.length !== b.length) {
      return { valid: false };
    }
    const newArray = [];
    for (let index = 0; index < a.length; index++) {
      const itemA = a[index];
      const itemB = b[index];
      const sharedValue = mergeValues(itemA, itemB);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newArray.push(sharedValue.data);
    }
    return { valid: true, data: newArray };
  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {
    return { valid: true, data: a };
  } else {
    return { valid: false };
  }
}
var ZodIntersection = class extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const handleParsed = (parsedLeft, parsedRight) => {
      if (isAborted(parsedLeft) || isAborted(parsedRight)) {
        return INVALID;
      }
      const merged = mergeValues(parsedLeft.value, parsedRight.value);
      if (!merged.valid) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_intersection_types
        });
        return INVALID;
      }
      if (isDirty(parsedLeft) || isDirty(parsedRight)) {
        status.dirty();
      }
      return { status: status.value, value: merged.data };
    };
    if (ctx.common.async) {
      return Promise.all([
        this._def.left._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }),
        this._def.right._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        })
      ]).then(([left, right]) => handleParsed(left, right));
    } else {
      return handleParsed(this._def.left._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }), this._def.right._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }));
    }
  }
};
ZodIntersection.create = (left, right, params) => {
  return new ZodIntersection({
    left,
    right,
    typeName: ZodFirstPartyTypeKind.ZodIntersection,
    ...processCreateParams(params)
  });
};
var ZodTuple = class _ZodTuple extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID;
    }
    if (ctx.data.length < this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_small,
        minimum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      return INVALID;
    }
    const rest = this._def.rest;
    if (!rest && ctx.data.length > this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_big,
        maximum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      status.dirty();
    }
    const items = [...ctx.data].map((item, itemIndex) => {
      const schema = this._def.items[itemIndex] || this._def.rest;
      if (!schema)
        return null;
      return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));
    }).filter((x) => !!x);
    if (ctx.common.async) {
      return Promise.all(items).then((results) => {
        return ParseStatus.mergeArray(status, results);
      });
    } else {
      return ParseStatus.mergeArray(status, items);
    }
  }
  get items() {
    return this._def.items;
  }
  rest(rest) {
    return new _ZodTuple({
      ...this._def,
      rest
    });
  }
};
ZodTuple.create = (schemas, params) => {
  if (!Array.isArray(schemas)) {
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  }
  return new ZodTuple({
    items: schemas,
    typeName: ZodFirstPartyTypeKind.ZodTuple,
    rest: null,
    ...processCreateParams(params)
  });
};
var ZodRecord = class _ZodRecord extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const pairs = [];
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    for (const key in ctx.data) {
      pairs.push({
        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),
        value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key))
      });
    }
    if (ctx.common.async) {
      return ParseStatus.mergeObjectAsync(status, pairs);
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get element() {
    return this._def.valueType;
  }
  static create(first, second, third) {
    if (second instanceof ZodType) {
      return new _ZodRecord({
        keyType: first,
        valueType: second,
        typeName: ZodFirstPartyTypeKind.ZodRecord,
        ...processCreateParams(third)
      });
    }
    return new _ZodRecord({
      keyType: ZodString.create(),
      valueType: first,
      typeName: ZodFirstPartyTypeKind.ZodRecord,
      ...processCreateParams(second)
    });
  }
};
var ZodMap = class extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.map) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.map,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    const pairs = [...ctx.data.entries()].map(([key, value], index) => {
      return {
        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, "key"])),
        value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, "value"]))
      };
    });
    if (ctx.common.async) {
      const finalMap = /* @__PURE__ */ new Map();
      return Promise.resolve().then(async () => {
        for (const pair of pairs) {
          const key = await pair.key;
          const value = await pair.value;
          if (key.status === "aborted" || value.status === "aborted") {
            return INVALID;
          }
          if (key.status === "dirty" || value.status === "dirty") {
            status.dirty();
          }
          finalMap.set(key.value, value.value);
        }
        return { status: status.value, value: finalMap };
      });
    } else {
      const finalMap = /* @__PURE__ */ new Map();
      for (const pair of pairs) {
        const key = pair.key;
        const value = pair.value;
        if (key.status === "aborted" || value.status === "aborted") {
          return INVALID;
        }
        if (key.status === "dirty" || value.status === "dirty") {
          status.dirty();
        }
        finalMap.set(key.value, value.value);
      }
      return { status: status.value, value: finalMap };
    }
  }
};
ZodMap.create = (keyType, valueType, params) => {
  return new ZodMap({
    valueType,
    keyType,
    typeName: ZodFirstPartyTypeKind.ZodMap,
    ...processCreateParams(params)
  });
};
var ZodSet = class _ZodSet extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.set) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.set,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const def = this._def;
    if (def.minSize !== null) {
      if (ctx.data.size < def.minSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.minSize.message
        });
        status.dirty();
      }
    }
    if (def.maxSize !== null) {
      if (ctx.data.size > def.maxSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.maxSize.message
        });
        status.dirty();
      }
    }
    const valueType = this._def.valueType;
    function finalizeSet(elements2) {
      const parsedSet = /* @__PURE__ */ new Set();
      for (const element of elements2) {
        if (element.status === "aborted")
          return INVALID;
        if (element.status === "dirty")
          status.dirty();
        parsedSet.add(element.value);
      }
      return { status: status.value, value: parsedSet };
    }
    const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));
    if (ctx.common.async) {
      return Promise.all(elements).then((elements2) => finalizeSet(elements2));
    } else {
      return finalizeSet(elements);
    }
  }
  min(minSize, message2) {
    return new _ZodSet({
      ...this._def,
      minSize: { value: minSize, message: errorUtil.toString(message2) }
    });
  }
  max(maxSize, message2) {
    return new _ZodSet({
      ...this._def,
      maxSize: { value: maxSize, message: errorUtil.toString(message2) }
    });
  }
  size(size, message2) {
    return this.min(size, message2).max(size, message2);
  }
  nonempty(message2) {
    return this.min(1, message2);
  }
};
ZodSet.create = (valueType, params) => {
  return new ZodSet({
    valueType,
    minSize: null,
    maxSize: null,
    typeName: ZodFirstPartyTypeKind.ZodSet,
    ...processCreateParams(params)
  });
};
var ZodFunction = class _ZodFunction extends ZodType {
  constructor() {
    super(...arguments);
    this.validate = this.implement;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.function) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.function,
        received: ctx.parsedType
      });
      return INVALID;
    }
    function makeArgsIssue(args, error) {
      return makeIssue({
        data: args,
        path: ctx.path,
        errorMaps: [
          ctx.common.contextualErrorMap,
          ctx.schemaErrorMap,
          getErrorMap(),
          errorMap
        ].filter((x) => !!x),
        issueData: {
          code: ZodIssueCode.invalid_arguments,
          argumentsError: error
        }
      });
    }
    function makeReturnsIssue(returns, error) {
      return makeIssue({
        data: returns,
        path: ctx.path,
        errorMaps: [
          ctx.common.contextualErrorMap,
          ctx.schemaErrorMap,
          getErrorMap(),
          errorMap
        ].filter((x) => !!x),
        issueData: {
          code: ZodIssueCode.invalid_return_type,
          returnTypeError: error
        }
      });
    }
    const params = { errorMap: ctx.common.contextualErrorMap };
    const fn = ctx.data;
    if (this._def.returns instanceof ZodPromise) {
      const me = this;
      return OK(async function(...args) {
        const error = new ZodError([]);
        const parsedArgs = await me._def.args.parseAsync(args, params).catch((e2) => {
          error.addIssue(makeArgsIssue(args, e2));
          throw error;
        });
        const result = await Reflect.apply(fn, this, parsedArgs);
        const parsedReturns = await me._def.returns._def.type.parseAsync(result, params).catch((e2) => {
          error.addIssue(makeReturnsIssue(result, e2));
          throw error;
        });
        return parsedReturns;
      });
    } else {
      const me = this;
      return OK(function(...args) {
        const parsedArgs = me._def.args.safeParse(args, params);
        if (!parsedArgs.success) {
          throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);
        }
        const result = Reflect.apply(fn, this, parsedArgs.data);
        const parsedReturns = me._def.returns.safeParse(result, params);
        if (!parsedReturns.success) {
          throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);
        }
        return parsedReturns.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...items) {
    return new _ZodFunction({
      ...this._def,
      args: ZodTuple.create(items).rest(ZodUnknown.create())
    });
  }
  returns(returnType) {
    return new _ZodFunction({
      ...this._def,
      returns: returnType
    });
  }
  implement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  strictImplement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  static create(args, returns, params) {
    return new _ZodFunction({
      args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),
      returns: returns || ZodUnknown.create(),
      typeName: ZodFirstPartyTypeKind.ZodFunction,
      ...processCreateParams(params)
    });
  }
};
var ZodLazy = class extends ZodType {
  get schema() {
    return this._def.getter();
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const lazySchema = this._def.getter();
    return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });
  }
};
ZodLazy.create = (getter, params) => {
  return new ZodLazy({
    getter,
    typeName: ZodFirstPartyTypeKind.ZodLazy,
    ...processCreateParams(params)
  });
};
var ZodLiteral = class extends ZodType {
  _parse(input) {
    if (input.data !== this._def.value) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_literal,
        expected: this._def.value
      });
      return INVALID;
    }
    return { status: "valid", value: input.data };
  }
  get value() {
    return this._def.value;
  }
};
ZodLiteral.create = (value, params) => {
  return new ZodLiteral({
    value,
    typeName: ZodFirstPartyTypeKind.ZodLiteral,
    ...processCreateParams(params)
  });
};
function createZodEnum(values, params) {
  return new ZodEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodEnum,
    ...processCreateParams(params)
  });
}
var ZodEnum = class _ZodEnum extends ZodType {
  _parse(input) {
    if (typeof input.data !== "string") {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID;
    }
    if (this._def.values.indexOf(input.data) === -1) {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID;
    }
    return OK(input.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Values() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  extract(values) {
    return _ZodEnum.create(values);
  }
  exclude(values) {
    return _ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));
  }
};
ZodEnum.create = createZodEnum;
var ZodNativeEnum = class extends ZodType {
  _parse(input) {
    const nativeEnumValues = util.getValidEnumValues(this._def.values);
    const ctx = this._getOrReturnCtx(input);
    if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID;
    }
    if (nativeEnumValues.indexOf(input.data) === -1) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID;
    }
    return OK(input.data);
  }
  get enum() {
    return this._def.values;
  }
};
ZodNativeEnum.create = (values, params) => {
  return new ZodNativeEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
    ...processCreateParams(params)
  });
};
var ZodPromise = class extends ZodType {
  unwrap() {
    return this._def.type;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.promise,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
    return OK(promisified.then((data) => {
      return this._def.type.parseAsync(data, {
        path: ctx.path,
        errorMap: ctx.common.contextualErrorMap
      });
    }));
  }
};
ZodPromise.create = (schema, params) => {
  return new ZodPromise({
    type: schema,
    typeName: ZodFirstPartyTypeKind.ZodPromise,
    ...processCreateParams(params)
  });
};
var ZodEffects = class extends ZodType {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const effect = this._def.effect || null;
    const checkCtx = {
      addIssue: (arg) => {
        addIssueToContext(ctx, arg);
        if (arg.fatal) {
          status.abort();
        } else {
          status.dirty();
        }
      },
      get path() {
        return ctx.path;
      }
    };
    checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
    if (effect.type === "preprocess") {
      const processed = effect.transform(ctx.data, checkCtx);
      if (ctx.common.issues.length) {
        return {
          status: "dirty",
          value: ctx.data
        };
      }
      if (ctx.common.async) {
        return Promise.resolve(processed).then((processed2) => {
          return this._def.schema._parseAsync({
            data: processed2,
            path: ctx.path,
            parent: ctx
          });
        });
      } else {
        return this._def.schema._parseSync({
          data: processed,
          path: ctx.path,
          parent: ctx
        });
      }
    }
    if (effect.type === "refinement") {
      const executeRefinement = (acc) => {
        const result = effect.refinement(acc, checkCtx);
        if (ctx.common.async) {
          return Promise.resolve(result);
        }
        if (result instanceof Promise) {
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        }
        return acc;
      };
      if (ctx.common.async === false) {
        const inner = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inner.status === "aborted")
          return INVALID;
        if (inner.status === "dirty")
          status.dirty();
        executeRefinement(inner.value);
        return { status: status.value, value: inner.value };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {
          if (inner.status === "aborted")
            return INVALID;
          if (inner.status === "dirty")
            status.dirty();
          return executeRefinement(inner.value).then(() => {
            return { status: status.value, value: inner.value };
          });
        });
      }
    }
    if (effect.type === "transform") {
      if (ctx.common.async === false) {
        const base5 = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (!isValid(base5))
          return base5;
        const result = effect.transform(base5.value, checkCtx);
        if (result instanceof Promise) {
          throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);
        }
        return { status: status.value, value: result };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base5) => {
          if (!isValid(base5))
            return base5;
          return Promise.resolve(effect.transform(base5.value, checkCtx)).then((result) => ({ status: status.value, value: result }));
        });
      }
    }
    util.assertNever(effect);
  }
};
ZodEffects.create = (schema, effect, params) => {
  return new ZodEffects({
    schema,
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    effect,
    ...processCreateParams(params)
  });
};
ZodEffects.createWithPreprocess = (preprocess, schema, params) => {
  return new ZodEffects({
    schema,
    effect: { type: "preprocess", transform: preprocess },
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    ...processCreateParams(params)
  });
};
var ZodOptional = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.undefined) {
      return OK(void 0);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
};
ZodOptional.create = (type, params) => {
  return new ZodOptional({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodOptional,
    ...processCreateParams(params)
  });
};
var ZodNullable = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.null) {
      return OK(null);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
};
ZodNullable.create = (type, params) => {
  return new ZodNullable({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodNullable,
    ...processCreateParams(params)
  });
};
var ZodDefault = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    let data = ctx.data;
    if (ctx.parsedType === ZodParsedType.undefined) {
      data = this._def.defaultValue();
    }
    return this._def.innerType._parse({
      data,
      path: ctx.path,
      parent: ctx
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
};
ZodDefault.create = (type, params) => {
  return new ZodDefault({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodDefault,
    defaultValue: typeof params.default === "function" ? params.default : () => params.default,
    ...processCreateParams(params)
  });
};
var ZodCatch = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const newCtx = {
      ...ctx,
      common: {
        ...ctx.common,
        issues: []
      }
    };
    const result = this._def.innerType._parse({
      data: newCtx.data,
      path: newCtx.path,
      parent: {
        ...newCtx
      }
    });
    if (isAsync(result)) {
      return result.then((result2) => {
        return {
          status: "valid",
          value: result2.status === "valid" ? result2.value : this._def.catchValue({
            get error() {
              return new ZodError(newCtx.common.issues);
            },
            input: newCtx.data
          })
        };
      });
    } else {
      return {
        status: "valid",
        value: result.status === "valid" ? result.value : this._def.catchValue({
          get error() {
            return new ZodError(newCtx.common.issues);
          },
          input: newCtx.data
        })
      };
    }
  }
  removeCatch() {
    return this._def.innerType;
  }
};
ZodCatch.create = (type, params) => {
  return new ZodCatch({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodCatch,
    catchValue: typeof params.catch === "function" ? params.catch : () => params.catch,
    ...processCreateParams(params)
  });
};
var ZodNaN = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.nan) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.nan,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return { status: "valid", value: input.data };
  }
};
ZodNaN.create = (params) => {
  return new ZodNaN({
    typeName: ZodFirstPartyTypeKind.ZodNaN,
    ...processCreateParams(params)
  });
};
var BRAND = Symbol("zod_brand");
var ZodBranded = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const data = ctx.data;
    return this._def.type._parse({
      data,
      path: ctx.path,
      parent: ctx
    });
  }
  unwrap() {
    return this._def.type;
  }
};
var ZodPipeline = class _ZodPipeline extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.common.async) {
      const handleAsync = async () => {
        const inResult = await this._def.in._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inResult.status === "aborted")
          return INVALID;
        if (inResult.status === "dirty") {
          status.dirty();
          return DIRTY(inResult.value);
        } else {
          return this._def.out._parseAsync({
            data: inResult.value,
            path: ctx.path,
            parent: ctx
          });
        }
      };
      return handleAsync();
    } else {
      const inResult = this._def.in._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
      if (inResult.status === "aborted")
        return INVALID;
      if (inResult.status === "dirty") {
        status.dirty();
        return {
          status: "dirty",
          value: inResult.value
        };
      } else {
        return this._def.out._parseSync({
          data: inResult.value,
          path: ctx.path,
          parent: ctx
        });
      }
    }
  }
  static create(a, b) {
    return new _ZodPipeline({
      in: a,
      out: b,
      typeName: ZodFirstPartyTypeKind.ZodPipeline
    });
  }
};
var ZodReadonly = class extends ZodType {
  _parse(input) {
    const result = this._def.innerType._parse(input);
    if (isValid(result)) {
      result.value = Object.freeze(result.value);
    }
    return result;
  }
};
ZodReadonly.create = (type, params) => {
  return new ZodReadonly({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodReadonly,
    ...processCreateParams(params)
  });
};
var custom = (check, params = {}, fatal) => {
  if (check)
    return ZodAny.create().superRefine((data, ctx) => {
      var _a, _b;
      if (!check(data)) {
        const p = typeof params === "function" ? params(data) : typeof params === "string" ? { message: params } : params;
        const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;
        const p2 = typeof p === "string" ? { message: p } : p;
        ctx.addIssue({ code: "custom", ...p2, fatal: _fatal });
      }
    });
  return ZodAny.create();
};
var late = {
  object: ZodObject.lazycreate
};
var ZodFirstPartyTypeKind;
(function(ZodFirstPartyTypeKind2) {
  ZodFirstPartyTypeKind2["ZodString"] = "ZodString";
  ZodFirstPartyTypeKind2["ZodNumber"] = "ZodNumber";
  ZodFirstPartyTypeKind2["ZodNaN"] = "ZodNaN";
  ZodFirstPartyTypeKind2["ZodBigInt"] = "ZodBigInt";
  ZodFirstPartyTypeKind2["ZodBoolean"] = "ZodBoolean";
  ZodFirstPartyTypeKind2["ZodDate"] = "ZodDate";
  ZodFirstPartyTypeKind2["ZodSymbol"] = "ZodSymbol";
  ZodFirstPartyTypeKind2["ZodUndefined"] = "ZodUndefined";
  ZodFirstPartyTypeKind2["ZodNull"] = "ZodNull";
  ZodFirstPartyTypeKind2["ZodAny"] = "ZodAny";
  ZodFirstPartyTypeKind2["ZodUnknown"] = "ZodUnknown";
  ZodFirstPartyTypeKind2["ZodNever"] = "ZodNever";
  ZodFirstPartyTypeKind2["ZodVoid"] = "ZodVoid";
  ZodFirstPartyTypeKind2["ZodArray"] = "ZodArray";
  ZodFirstPartyTypeKind2["ZodObject"] = "ZodObject";
  ZodFirstPartyTypeKind2["ZodUnion"] = "ZodUnion";
  ZodFirstPartyTypeKind2["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
  ZodFirstPartyTypeKind2["ZodIntersection"] = "ZodIntersection";
  ZodFirstPartyTypeKind2["ZodTuple"] = "ZodTuple";
  ZodFirstPartyTypeKind2["ZodRecord"] = "ZodRecord";
  ZodFirstPartyTypeKind2["ZodMap"] = "ZodMap";
  ZodFirstPartyTypeKind2["ZodSet"] = "ZodSet";
  ZodFirstPartyTypeKind2["ZodFunction"] = "ZodFunction";
  ZodFirstPartyTypeKind2["ZodLazy"] = "ZodLazy";
  ZodFirstPartyTypeKind2["ZodLiteral"] = "ZodLiteral";
  ZodFirstPartyTypeKind2["ZodEnum"] = "ZodEnum";
  ZodFirstPartyTypeKind2["ZodEffects"] = "ZodEffects";
  ZodFirstPartyTypeKind2["ZodNativeEnum"] = "ZodNativeEnum";
  ZodFirstPartyTypeKind2["ZodOptional"] = "ZodOptional";
  ZodFirstPartyTypeKind2["ZodNullable"] = "ZodNullable";
  ZodFirstPartyTypeKind2["ZodDefault"] = "ZodDefault";
  ZodFirstPartyTypeKind2["ZodCatch"] = "ZodCatch";
  ZodFirstPartyTypeKind2["ZodPromise"] = "ZodPromise";
  ZodFirstPartyTypeKind2["ZodBranded"] = "ZodBranded";
  ZodFirstPartyTypeKind2["ZodPipeline"] = "ZodPipeline";
  ZodFirstPartyTypeKind2["ZodReadonly"] = "ZodReadonly";
})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));
var instanceOfType = (cls, params = {
  message: `Input not instance of ${cls.name}`
}) => custom((data) => data instanceof cls, params);
var stringType = ZodString.create;
var numberType = ZodNumber.create;
var nanType = ZodNaN.create;
var bigIntType = ZodBigInt.create;
var booleanType = ZodBoolean.create;
var dateType = ZodDate.create;
var symbolType = ZodSymbol.create;
var undefinedType = ZodUndefined.create;
var nullType = ZodNull.create;
var anyType = ZodAny.create;
var unknownType = ZodUnknown.create;
var neverType = ZodNever.create;
var voidType = ZodVoid.create;
var arrayType = ZodArray.create;
var objectType = ZodObject.create;
var strictObjectType = ZodObject.strictCreate;
var unionType = ZodUnion.create;
var discriminatedUnionType = ZodDiscriminatedUnion.create;
var intersectionType = ZodIntersection.create;
var tupleType = ZodTuple.create;
var recordType = ZodRecord.create;
var mapType = ZodMap.create;
var setType = ZodSet.create;
var functionType = ZodFunction.create;
var lazyType = ZodLazy.create;
var literalType = ZodLiteral.create;
var enumType = ZodEnum.create;
var nativeEnumType = ZodNativeEnum.create;
var promiseType = ZodPromise.create;
var effectsType = ZodEffects.create;
var optionalType = ZodOptional.create;
var nullableType = ZodNullable.create;
var preprocessType = ZodEffects.createWithPreprocess;
var pipelineType = ZodPipeline.create;
var ostring = () => stringType().optional();
var onumber = () => numberType().optional();
var oboolean = () => booleanType().optional();
var coerce4 = {
  string: (arg) => ZodString.create({ ...arg, coerce: true }),
  number: (arg) => ZodNumber.create({ ...arg, coerce: true }),
  boolean: (arg) => ZodBoolean.create({
    ...arg,
    coerce: true
  }),
  bigint: (arg) => ZodBigInt.create({ ...arg, coerce: true }),
  date: (arg) => ZodDate.create({ ...arg, coerce: true })
};
var NEVER = INVALID;
var z = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  defaultErrorMap: errorMap,
  setErrorMap,
  getErrorMap,
  makeIssue,
  EMPTY_PATH,
  addIssueToContext,
  ParseStatus,
  INVALID,
  DIRTY,
  OK,
  isAborted,
  isDirty,
  isValid,
  isAsync,
  get util() {
    return util;
  },
  get objectUtil() {
    return objectUtil;
  },
  ZodParsedType,
  getParsedType,
  ZodType,
  ZodString,
  ZodNumber,
  ZodBigInt,
  ZodBoolean,
  ZodDate,
  ZodSymbol,
  ZodUndefined,
  ZodNull,
  ZodAny,
  ZodUnknown,
  ZodNever,
  ZodVoid,
  ZodArray,
  ZodObject,
  ZodUnion,
  ZodDiscriminatedUnion,
  ZodIntersection,
  ZodTuple,
  ZodRecord,
  ZodMap,
  ZodSet,
  ZodFunction,
  ZodLazy,
  ZodLiteral,
  ZodEnum,
  ZodNativeEnum,
  ZodPromise,
  ZodEffects,
  ZodTransformer: ZodEffects,
  ZodOptional,
  ZodNullable,
  ZodDefault,
  ZodCatch,
  ZodNaN,
  BRAND,
  ZodBranded,
  ZodPipeline,
  ZodReadonly,
  custom,
  Schema: ZodType,
  ZodSchema: ZodType,
  late,
  get ZodFirstPartyTypeKind() {
    return ZodFirstPartyTypeKind;
  },
  coerce: coerce4,
  any: anyType,
  array: arrayType,
  bigint: bigIntType,
  boolean: booleanType,
  date: dateType,
  discriminatedUnion: discriminatedUnionType,
  effect: effectsType,
  "enum": enumType,
  "function": functionType,
  "instanceof": instanceOfType,
  intersection: intersectionType,
  lazy: lazyType,
  literal: literalType,
  map: mapType,
  nan: nanType,
  nativeEnum: nativeEnumType,
  never: neverType,
  "null": nullType,
  nullable: nullableType,
  number: numberType,
  object: objectType,
  oboolean,
  onumber,
  optional: optionalType,
  ostring,
  pipeline: pipelineType,
  preprocess: preprocessType,
  promise: promiseType,
  record: recordType,
  set: setType,
  strictObject: strictObjectType,
  string: stringType,
  symbol: symbolType,
  transformer: effectsType,
  tuple: tupleType,
  "undefined": undefinedType,
  union: unionType,
  unknown: unknownType,
  "void": voidType,
  NEVER,
  ZodIssueCode,
  quotelessJson,
  ZodError
});

// node_modules/.pnpm/@lens-protocol+storage@0.7.5-alpha.8/node_modules/@lens-protocol/storage/dist/lens-protocol-storage.esm.js
function _toPrimitive2(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey2(arg) {
  var key = _toPrimitive2(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _assertThisInitialized2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _setPrototypeOf2(o2, p) {
  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf4(o3, p2) {
    o3.__proto__ = p2;
    return o3;
  };
  return _setPrototypeOf2(o2, p);
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf2(subClass, superClass);
}
function _getPrototypeOf2(o2) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf4(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf2(o2);
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _possibleConstructorReturn2(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized2(self2);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result);
  };
}
function _isNativeFunction2(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e2) {
    return typeof fn === "function";
  }
}
function _construct2(Parent, args, Class) {
  if (_isNativeReflectConstruct2()) {
    _construct2 = Reflect.construct.bind();
  } else {
    _construct2 = function _construct4(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf2(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct2.apply(null, arguments);
}
function _wrapNativeSuper2(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper2 = function _wrapNativeSuper4(Class2) {
    if (Class2 === null || !_isNativeFunction2(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct2(Class2, arguments, _getPrototypeOf2(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf2(Wrapper, Class2);
  };
  return _wrapNativeSuper2(Class);
}
function _defineProperty2(obj, key, value) {
  key = _toPropertyKey2(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var SchemaMismatchError = /* @__PURE__ */ function(_Error) {
  _inherits2(SchemaMismatchError2, _Error);
  var _super = _createSuper2(SchemaMismatchError2);
  function SchemaMismatchError2(schemaId, errors) {
    var _this;
    _classCallCheck2(this, SchemaMismatchError2);
    _this = _super.call(this, "Schema mismatch for ".concat(schemaId, " with errors: ").concat(errors));
    _defineProperty2(_assertThisInitialized2(_this), "name", "SchemaMismatchError");
    return _this;
  }
  return _createClass2(SchemaMismatchError2);
}(/* @__PURE__ */ _wrapNativeSuper2(Error));
var NoMigrationPathError = /* @__PURE__ */ function(_Error2) {
  _inherits2(NoMigrationPathError2, _Error2);
  var _super2 = _createSuper2(NoMigrationPathError2);
  function NoMigrationPathError2(schemaId, fromVersion, toVersion) {
    var _this2;
    _classCallCheck2(this, NoMigrationPathError2);
    _this2 = _super2.call(this, "No migration path for schema ".concat(schemaId, " from version ").concat(fromVersion, " to ").concat(toVersion));
    _defineProperty2(_assertThisInitialized2(_this2), "name", "NoMigrationPathError");
    return _this2;
  }
  return _createClass2(NoMigrationPathError2);
}(/* @__PURE__ */ _wrapNativeSuper2(Error));
var storageMetadata = z.object({
  version: z.number()["int"]().positive(),
  createdAt: z.number()["int"]().positive(),
  updatedAt: z.number()["int"]().positive()
}).strict();
var BaseStorageSchema = /* @__PURE__ */ function() {
  function BaseStorageSchema2(key, schema) {
    _classCallCheck2(this, BaseStorageSchema2);
    _defineProperty2(this, "version", 1);
    this.key = key;
    this.schema = schema;
  }
  _createClass2(BaseStorageSchema2, [{
    key: "process",
    value: function() {
      var _process = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee(storageItemUnknown) {
        var storageItem, data;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                storageItem = this.parseStorageItem(storageItemUnknown);
                data = this.migrate(storageItem);
                return _context.abrupt("return", Promise.resolve({
                  data,
                  metadata: storageItem.metadata
                }));
              case 3:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function process2(_x) {
        return _process.apply(this, arguments);
      }
      return process2;
    }()
  }, {
    key: "migrate",
    value: function migrate(storageItem) {
      var storageVersion = storageItem.metadata.version;
      if (this.version !== storageVersion) {
        throw new NoMigrationPathError(this.key, storageVersion, this.version);
      }
      return this.parseData(storageItem.data);
    }
  }, {
    key: "parseStorageItem",
    value: function parseStorageItem(storageItem) {
      try {
        return z.object({
          data: z.unknown(),
          metadata: storageMetadata
        }).strict().parse(storageItem);
      } catch (error) {
        assertError(error);
        throw new SchemaMismatchError(this.key, error.message);
      }
    }
  }, {
    key: "parseData",
    value: function parseData(data) {
      try {
        var t2 = this.schema.parse(data);
        return t2;
      } catch (error) {
        assertError(error);
        throw new SchemaMismatchError(this.key, error.message);
      }
    }
  }]);
  return BaseStorageSchema2;
}();
var PersistedCredentialsSchema = z.object({
  refreshToken: z.string()
});
var CredentialsStorageSchema = /* @__PURE__ */ function(_BaseStorageSchema) {
  _inherits2(CredentialsStorageSchema2, _BaseStorageSchema);
  var _super = _createSuper2(CredentialsStorageSchema2);
  function CredentialsStorageSchema2(key) {
    var _this;
    _classCallCheck2(this, CredentialsStorageSchema2);
    _this = _super.call(this, key, PersistedCredentialsSchema);
    _defineProperty2(_assertThisInitialized2(_this), "version", 2);
    return _this;
  }
  _createClass2(CredentialsStorageSchema2, [{
    key: "migrate",
    value: function migrate(storageItem) {
      return this.parseData(storageItem.data);
    }
  }]);
  return CredentialsStorageSchema2;
}(BaseStorageSchema);
var Storage = /* @__PURE__ */ function() {
  function Storage2(schema, provider) {
    _classCallCheck2(this, Storage2);
    this.schema = schema;
    this.provider = provider;
  }
  _createClass2(Storage2, [{
    key: "get",
    value: function() {
      var _get = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee() {
        var _storageItem$data;
        var storageItem;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.getWithMetadata();
              case 2:
                storageItem = _context.sent;
                return _context.abrupt("return", (_storageItem$data = storageItem === null || storageItem === void 0 ? void 0 : storageItem.data) !== null && _storageItem$data !== void 0 ? _storageItem$data : null);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function get() {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "reset",
    value: function() {
      var _reset = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.provider.removeItem(this.getStorageKey());
              case 2:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function reset() {
        return _reset.apply(this, arguments);
      }
      return reset;
    }()
  }, {
    key: "set",
    value: function() {
      var _set = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee3(data) {
        var _lastStorageItem$meta;
        var lastStorageItem, metadata, storageItem, json;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.getWithMetadata();
              case 2:
                lastStorageItem = _context3.sent;
                metadata = {
                  createdAt: (_lastStorageItem$meta = lastStorageItem === null || lastStorageItem === void 0 ? void 0 : lastStorageItem.metadata.createdAt) !== null && _lastStorageItem$meta !== void 0 ? _lastStorageItem$meta : Date.now(),
                  updatedAt: Date.now(),
                  version: this.schema.version
                };
                storageItem = {
                  data,
                  metadata
                };
                json = JSON.stringify(storageItem);
                _context3.next = 8;
                return this.provider.setItem(this.getStorageKey(), json);
              case 8:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function set(_x) {
        return _set.apply(this, arguments);
      }
      return set;
    }()
  }, {
    key: "subscribe",
    value: function subscribe(subscriber) {
      var _this = this;
      if (!("subscribe" in this.provider)) {
        return {
          // eslint-disable-next-line @typescript-eslint/no-empty-function
          unsubscribe: function unsubscribe() {
          }
        };
      }
      return this.provider.subscribe(this.getStorageKey(), /* @__PURE__ */ function() {
        var _ref = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee4(newValue, oldValue) {
          var newItem, oldItem;
          return _regeneratorRuntime().wrap(function _callee4$(_context4) {
            while (1)
              switch (_context4.prev = _context4.next) {
                case 0:
                  if (!newValue) {
                    _context4.next = 6;
                    break;
                  }
                  _context4.next = 3;
                  return _this.parse(newValue);
                case 3:
                  _context4.t0 = _context4.sent;
                  _context4.next = 7;
                  break;
                case 6:
                  _context4.t0 = {
                    data: null
                  };
                case 7:
                  newItem = _context4.t0;
                  if (!oldValue) {
                    _context4.next = 14;
                    break;
                  }
                  _context4.next = 11;
                  return _this.parse(oldValue);
                case 11:
                  _context4.t1 = _context4.sent;
                  _context4.next = 15;
                  break;
                case 14:
                  _context4.t1 = {
                    data: null
                  };
                case 15:
                  oldItem = _context4.t1;
                  subscriber(newItem.data, oldItem.data);
                case 17:
                case "end":
                  return _context4.stop();
              }
          }, _callee4);
        }));
        return function(_x2, _x3) {
          return _ref.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "getWithMetadata",
    value: function() {
      var _getWithMetadata = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee5() {
        var json;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.provider.getItem(this.getStorageKey());
              case 2:
                json = _context5.sent;
                if (json) {
                  _context5.next = 5;
                  break;
                }
                return _context5.abrupt("return", null);
              case 5:
                return _context5.abrupt("return", this.parse(json));
              case 6:
              case "end":
                return _context5.stop();
            }
        }, _callee5, this);
      }));
      function getWithMetadata() {
        return _getWithMetadata.apply(this, arguments);
      }
      return getWithMetadata;
    }()
  }, {
    key: "parse",
    value: function() {
      var _parse = _asyncToGenerator(/* @__PURE__ */ _regeneratorRuntime().mark(function _callee6(json) {
        var item;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                item = JSON.parse(json);
                return _context6.abrupt("return", this.schema.process(item));
              case 2:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function parse2(_x4) {
        return _parse.apply(this, arguments);
      }
      return parse2;
    }()
  }, {
    key: "getStorageKey",
    value: function getStorageKey() {
      return this.schema.key;
    }
  }], [{
    key: "createForSchema",
    value: function createForSchema(schema, provider) {
      return new Storage2(schema, provider);
    }
  }]);
  return Storage2;
}();
var InMemoryStorageProvider = /* @__PURE__ */ function() {
  function InMemoryStorageProvider2() {
    _classCallCheck2(this, InMemoryStorageProvider2);
    this.store = /* @__PURE__ */ new Map();
  }
  _createClass2(InMemoryStorageProvider2, [{
    key: "getItem",
    value: function getItem(key) {
      var _this$store$get;
      return (_this$store$get = this.store.get(key)) !== null && _this$store$get !== void 0 ? _this$store$get : null;
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      this.store.set(key, value);
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      this.store["delete"](key);
    }
  }]);
  return InMemoryStorageProvider2;
}();

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/defaultJsonSerializer.js
var defaultJsonSerializer = JSON;

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/helpers.js
var uppercase = (str) => str.toUpperCase();
var HeadersInstanceToPlainObject = (headers) => {
  const o2 = {};
  headers.forEach((v, k) => {
    o2[k] = v;
  });
  return o2;
};

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/parseArgs.js
var parseRequestArgs = (documentOrOptions, variables, requestHeaders) => {
  return documentOrOptions.document ? documentOrOptions : {
    document: documentOrOptions,
    variables,
    requestHeaders,
    signal: void 0
  };
};
var parseRawRequestArgs = (queryOrOptions, variables, requestHeaders) => {
  return queryOrOptions.query ? queryOrOptions : {
    query: queryOrOptions,
    variables,
    requestHeaders,
    signal: void 0
  };
};
var parseBatchRequestArgs = (documentsOrOptions, requestHeaders) => {
  return documentsOrOptions.documents ? documentsOrOptions : {
    documents: documentsOrOptions,
    requestHeaders,
    signal: void 0
  };
};

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/devAssert.mjs
function devAssert(condition, message2) {
  const booleanCondition = Boolean(condition);
  if (!booleanCondition) {
    throw new Error(message2);
  }
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/isObjectLike.mjs
function isObjectLike2(value) {
  return typeof value == "object" && value !== null;
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/invariant.mjs
function invariant2(condition, message2) {
  const booleanCondition = Boolean(condition);
  if (!booleanCondition) {
    throw new Error(
      message2 != null ? message2 : "Unexpected invariant triggered."
    );
  }
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/location.mjs
var LineRegExp = /\r\n|[\n\r]/g;
function getLocation(source, position) {
  let lastLineStart = 0;
  let line = 1;
  for (const match of source.body.matchAll(LineRegExp)) {
    typeof match.index === "number" || invariant2(false);
    if (match.index >= position) {
      break;
    }
    lastLineStart = match.index + match[0].length;
    line += 1;
  }
  return {
    line,
    column: position + 1 - lastLineStart
  };
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/printLocation.mjs
function printLocation(location) {
  return printSourceLocation(
    location.source,
    getLocation(location.source, location.start)
  );
}
function printSourceLocation(source, sourceLocation) {
  const firstLineColumnOffset = source.locationOffset.column - 1;
  const body = "".padStart(firstLineColumnOffset) + source.body;
  const lineIndex = sourceLocation.line - 1;
  const lineOffset = source.locationOffset.line - 1;
  const lineNum = sourceLocation.line + lineOffset;
  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;
  const columnNum = sourceLocation.column + columnOffset;
  const locationStr = `${source.name}:${lineNum}:${columnNum}
`;
  const lines = body.split(/\r\n|[\n\r]/g);
  const locationLine = lines[lineIndex];
  if (locationLine.length > 120) {
    const subLineIndex = Math.floor(columnNum / 80);
    const subLineColumnNum = columnNum % 80;
    const subLines = [];
    for (let i = 0; i < locationLine.length; i += 80) {
      subLines.push(locationLine.slice(i, i + 80));
    }
    return locationStr + printPrefixedLines([
      [`${lineNum} |`, subLines[0]],
      ...subLines.slice(1, subLineIndex + 1).map((subLine) => ["|", subLine]),
      ["|", "^".padStart(subLineColumnNum)],
      ["|", subLines[subLineIndex + 1]]
    ]);
  }
  return locationStr + printPrefixedLines([
    // Lines specified like this: ["prefix", "string"],
    [`${lineNum - 1} |`, lines[lineIndex - 1]],
    [`${lineNum} |`, locationLine],
    ["|", "^".padStart(columnNum)],
    [`${lineNum + 1} |`, lines[lineIndex + 1]]
  ]);
}
function printPrefixedLines(lines) {
  const existingLines = lines.filter(([_, line]) => line !== void 0);
  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));
  return existingLines.map(([prefix, line]) => prefix.padStart(padLen) + (line ? " " + line : "")).join("\n");
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/error/GraphQLError.mjs
function toNormalizedOptions(args) {
  const firstArg = args[0];
  if (firstArg == null || "kind" in firstArg || "length" in firstArg) {
    return {
      nodes: firstArg,
      source: args[1],
      positions: args[2],
      path: args[3],
      originalError: args[4],
      extensions: args[5]
    };
  }
  return firstArg;
}
var GraphQLError = class _GraphQLError extends Error {
  /**
   * An array of `{ line, column }` locations within the source GraphQL document
   * which correspond to this error.
   *
   * Errors during validation often contain multiple locations, for example to
   * point out two things with the same name. Errors during execution include a
   * single location, the field which produced the error.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */
  /**
   * An array describing the JSON-path into the execution response which
   * corresponds to this error. Only included for errors during execution.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */
  /**
   * An array of GraphQL AST Nodes corresponding to this error.
   */
  /**
   * The source GraphQL document for the first location of this error.
   *
   * Note that if this Error represents more than one node, the source may not
   * represent nodes after the first node.
   */
  /**
   * An array of character offsets within the source GraphQL document
   * which correspond to this error.
   */
  /**
   * The original error thrown from a field resolver during execution.
   */
  /**
   * Extension fields to add to the formatted error.
   */
  /**
   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.
   */
  constructor(message2, ...rawArgs) {
    var _this$nodes, _nodeLocations$, _ref;
    const { nodes, source, positions, path, originalError, extensions } = toNormalizedOptions(rawArgs);
    super(message2);
    this.name = "GraphQLError";
    this.path = path !== null && path !== void 0 ? path : void 0;
    this.originalError = originalError !== null && originalError !== void 0 ? originalError : void 0;
    this.nodes = undefinedIfEmpty(
      Array.isArray(nodes) ? nodes : nodes ? [nodes] : void 0
    );
    const nodeLocations = undefinedIfEmpty(
      (_this$nodes = this.nodes) === null || _this$nodes === void 0 ? void 0 : _this$nodes.map((node) => node.loc).filter((loc) => loc != null)
    );
    this.source = source !== null && source !== void 0 ? source : nodeLocations === null || nodeLocations === void 0 ? void 0 : (_nodeLocations$ = nodeLocations[0]) === null || _nodeLocations$ === void 0 ? void 0 : _nodeLocations$.source;
    this.positions = positions !== null && positions !== void 0 ? positions : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => loc.start);
    this.locations = positions && source ? positions.map((pos) => getLocation(source, pos)) : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => getLocation(loc.source, loc.start));
    const originalExtensions = isObjectLike2(
      originalError === null || originalError === void 0 ? void 0 : originalError.extensions
    ) ? originalError === null || originalError === void 0 ? void 0 : originalError.extensions : void 0;
    this.extensions = (_ref = extensions !== null && extensions !== void 0 ? extensions : originalExtensions) !== null && _ref !== void 0 ? _ref : /* @__PURE__ */ Object.create(null);
    Object.defineProperties(this, {
      message: {
        writable: true,
        enumerable: true
      },
      name: {
        enumerable: false
      },
      nodes: {
        enumerable: false
      },
      source: {
        enumerable: false
      },
      positions: {
        enumerable: false
      },
      originalError: {
        enumerable: false
      }
    });
    if (originalError !== null && originalError !== void 0 && originalError.stack) {
      Object.defineProperty(this, "stack", {
        value: originalError.stack,
        writable: true,
        configurable: true
      });
    } else if (Error.captureStackTrace) {
      Error.captureStackTrace(this, _GraphQLError);
    } else {
      Object.defineProperty(this, "stack", {
        value: Error().stack,
        writable: true,
        configurable: true
      });
    }
  }
  get [Symbol.toStringTag]() {
    return "GraphQLError";
  }
  toString() {
    let output4 = this.message;
    if (this.nodes) {
      for (const node of this.nodes) {
        if (node.loc) {
          output4 += "\n\n" + printLocation(node.loc);
        }
      }
    } else if (this.source && this.locations) {
      for (const location of this.locations) {
        output4 += "\n\n" + printSourceLocation(this.source, location);
      }
    }
    return output4;
  }
  toJSON() {
    const formattedError = {
      message: this.message
    };
    if (this.locations != null) {
      formattedError.locations = this.locations;
    }
    if (this.path != null) {
      formattedError.path = this.path;
    }
    if (this.extensions != null && Object.keys(this.extensions).length > 0) {
      formattedError.extensions = this.extensions;
    }
    return formattedError;
  }
};
function undefinedIfEmpty(array) {
  return array === void 0 || array.length === 0 ? void 0 : array;
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/error/syntaxError.mjs
function syntaxError(source, position, description) {
  return new GraphQLError(`Syntax Error: ${description}`, {
    source,
    positions: [position]
  });
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/ast.mjs
var Location = class {
  /**
   * The character offset at which this Node begins.
   */
  /**
   * The character offset at which this Node ends.
   */
  /**
   * The Token at which this Node begins.
   */
  /**
   * The Token at which this Node ends.
   */
  /**
   * The Source document the AST represents.
   */
  constructor(startToken, endToken, source) {
    this.start = startToken.start;
    this.end = endToken.end;
    this.startToken = startToken;
    this.endToken = endToken;
    this.source = source;
  }
  get [Symbol.toStringTag]() {
    return "Location";
  }
  toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  }
};
var Token = class {
  /**
   * The kind of Token.
   */
  /**
   * The character offset at which this Node begins.
   */
  /**
   * The character offset at which this Node ends.
   */
  /**
   * The 1-indexed line number on which this Token appears.
   */
  /**
   * The 1-indexed column number at which this Token begins.
   */
  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   *
   * Note: is undefined for punctuation tokens, but typed as string for
   * convenience in the parser.
   */
  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  constructor(kind, start, end, line, column, value) {
    this.kind = kind;
    this.start = start;
    this.end = end;
    this.line = line;
    this.column = column;
    this.value = value;
    this.prev = null;
    this.next = null;
  }
  get [Symbol.toStringTag]() {
    return "Token";
  }
  toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  }
};
var QueryDocumentKeys = {
  Name: [],
  Document: ["definitions"],
  OperationDefinition: [
    "name",
    "variableDefinitions",
    "directives",
    "selectionSet"
  ],
  VariableDefinition: ["variable", "type", "defaultValue", "directives"],
  Variable: ["name"],
  SelectionSet: ["selections"],
  Field: ["alias", "name", "arguments", "directives", "selectionSet"],
  Argument: ["name", "value"],
  FragmentSpread: ["name", "directives"],
  InlineFragment: ["typeCondition", "directives", "selectionSet"],
  FragmentDefinition: [
    "name",
    // Note: fragment variable definitions are deprecated and will removed in v17.0.0
    "variableDefinitions",
    "typeCondition",
    "directives",
    "selectionSet"
  ],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ["values"],
  ObjectValue: ["fields"],
  ObjectField: ["name", "value"],
  Directive: ["name", "arguments"],
  NamedType: ["name"],
  ListType: ["type"],
  NonNullType: ["type"],
  SchemaDefinition: ["description", "directives", "operationTypes"],
  OperationTypeDefinition: ["type"],
  ScalarTypeDefinition: ["description", "name", "directives"],
  ObjectTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  FieldDefinition: ["description", "name", "arguments", "type", "directives"],
  InputValueDefinition: [
    "description",
    "name",
    "type",
    "defaultValue",
    "directives"
  ],
  InterfaceTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  UnionTypeDefinition: ["description", "name", "directives", "types"],
  EnumTypeDefinition: ["description", "name", "directives", "values"],
  EnumValueDefinition: ["description", "name", "directives"],
  InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
  DirectiveDefinition: ["description", "name", "arguments", "locations"],
  SchemaExtension: ["directives", "operationTypes"],
  ScalarTypeExtension: ["name", "directives"],
  ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
  InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
  UnionTypeExtension: ["name", "directives", "types"],
  EnumTypeExtension: ["name", "directives", "values"],
  InputObjectTypeExtension: ["name", "directives", "fields"]
};
var kindValues = new Set(Object.keys(QueryDocumentKeys));
function isNode(maybeNode) {
  const maybeKind = maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;
  return typeof maybeKind === "string" && kindValues.has(maybeKind);
}
var OperationTypeNode;
(function(OperationTypeNode2) {
  OperationTypeNode2["QUERY"] = "query";
  OperationTypeNode2["MUTATION"] = "mutation";
  OperationTypeNode2["SUBSCRIPTION"] = "subscription";
})(OperationTypeNode || (OperationTypeNode = {}));

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/directiveLocation.mjs
var DirectiveLocation;
(function(DirectiveLocation2) {
  DirectiveLocation2["QUERY"] = "QUERY";
  DirectiveLocation2["MUTATION"] = "MUTATION";
  DirectiveLocation2["SUBSCRIPTION"] = "SUBSCRIPTION";
  DirectiveLocation2["FIELD"] = "FIELD";
  DirectiveLocation2["FRAGMENT_DEFINITION"] = "FRAGMENT_DEFINITION";
  DirectiveLocation2["FRAGMENT_SPREAD"] = "FRAGMENT_SPREAD";
  DirectiveLocation2["INLINE_FRAGMENT"] = "INLINE_FRAGMENT";
  DirectiveLocation2["VARIABLE_DEFINITION"] = "VARIABLE_DEFINITION";
  DirectiveLocation2["SCHEMA"] = "SCHEMA";
  DirectiveLocation2["SCALAR"] = "SCALAR";
  DirectiveLocation2["OBJECT"] = "OBJECT";
  DirectiveLocation2["FIELD_DEFINITION"] = "FIELD_DEFINITION";
  DirectiveLocation2["ARGUMENT_DEFINITION"] = "ARGUMENT_DEFINITION";
  DirectiveLocation2["INTERFACE"] = "INTERFACE";
  DirectiveLocation2["UNION"] = "UNION";
  DirectiveLocation2["ENUM"] = "ENUM";
  DirectiveLocation2["ENUM_VALUE"] = "ENUM_VALUE";
  DirectiveLocation2["INPUT_OBJECT"] = "INPUT_OBJECT";
  DirectiveLocation2["INPUT_FIELD_DEFINITION"] = "INPUT_FIELD_DEFINITION";
})(DirectiveLocation || (DirectiveLocation = {}));

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/kinds.mjs
var Kind2;
(function(Kind3) {
  Kind3["NAME"] = "Name";
  Kind3["DOCUMENT"] = "Document";
  Kind3["OPERATION_DEFINITION"] = "OperationDefinition";
  Kind3["VARIABLE_DEFINITION"] = "VariableDefinition";
  Kind3["SELECTION_SET"] = "SelectionSet";
  Kind3["FIELD"] = "Field";
  Kind3["ARGUMENT"] = "Argument";
  Kind3["FRAGMENT_SPREAD"] = "FragmentSpread";
  Kind3["INLINE_FRAGMENT"] = "InlineFragment";
  Kind3["FRAGMENT_DEFINITION"] = "FragmentDefinition";
  Kind3["VARIABLE"] = "Variable";
  Kind3["INT"] = "IntValue";
  Kind3["FLOAT"] = "FloatValue";
  Kind3["STRING"] = "StringValue";
  Kind3["BOOLEAN"] = "BooleanValue";
  Kind3["NULL"] = "NullValue";
  Kind3["ENUM"] = "EnumValue";
  Kind3["LIST"] = "ListValue";
  Kind3["OBJECT"] = "ObjectValue";
  Kind3["OBJECT_FIELD"] = "ObjectField";
  Kind3["DIRECTIVE"] = "Directive";
  Kind3["NAMED_TYPE"] = "NamedType";
  Kind3["LIST_TYPE"] = "ListType";
  Kind3["NON_NULL_TYPE"] = "NonNullType";
  Kind3["SCHEMA_DEFINITION"] = "SchemaDefinition";
  Kind3["OPERATION_TYPE_DEFINITION"] = "OperationTypeDefinition";
  Kind3["SCALAR_TYPE_DEFINITION"] = "ScalarTypeDefinition";
  Kind3["OBJECT_TYPE_DEFINITION"] = "ObjectTypeDefinition";
  Kind3["FIELD_DEFINITION"] = "FieldDefinition";
  Kind3["INPUT_VALUE_DEFINITION"] = "InputValueDefinition";
  Kind3["INTERFACE_TYPE_DEFINITION"] = "InterfaceTypeDefinition";
  Kind3["UNION_TYPE_DEFINITION"] = "UnionTypeDefinition";
  Kind3["ENUM_TYPE_DEFINITION"] = "EnumTypeDefinition";
  Kind3["ENUM_VALUE_DEFINITION"] = "EnumValueDefinition";
  Kind3["INPUT_OBJECT_TYPE_DEFINITION"] = "InputObjectTypeDefinition";
  Kind3["DIRECTIVE_DEFINITION"] = "DirectiveDefinition";
  Kind3["SCHEMA_EXTENSION"] = "SchemaExtension";
  Kind3["SCALAR_TYPE_EXTENSION"] = "ScalarTypeExtension";
  Kind3["OBJECT_TYPE_EXTENSION"] = "ObjectTypeExtension";
  Kind3["INTERFACE_TYPE_EXTENSION"] = "InterfaceTypeExtension";
  Kind3["UNION_TYPE_EXTENSION"] = "UnionTypeExtension";
  Kind3["ENUM_TYPE_EXTENSION"] = "EnumTypeExtension";
  Kind3["INPUT_OBJECT_TYPE_EXTENSION"] = "InputObjectTypeExtension";
})(Kind2 || (Kind2 = {}));

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/characterClasses.mjs
function isWhiteSpace(code5) {
  return code5 === 9 || code5 === 32;
}
function isDigit(code5) {
  return code5 >= 48 && code5 <= 57;
}
function isLetter(code5) {
  return code5 >= 97 && code5 <= 122 || // A-Z
  code5 >= 65 && code5 <= 90;
}
function isNameStart(code5) {
  return isLetter(code5) || code5 === 95;
}
function isNameContinue(code5) {
  return isLetter(code5) || isDigit(code5) || code5 === 95;
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/blockString.mjs
function dedentBlockStringLines(lines) {
  var _firstNonEmptyLine2;
  let commonIndent = Number.MAX_SAFE_INTEGER;
  let firstNonEmptyLine = null;
  let lastNonEmptyLine = -1;
  for (let i = 0; i < lines.length; ++i) {
    var _firstNonEmptyLine;
    const line = lines[i];
    const indent2 = leadingWhitespace(line);
    if (indent2 === line.length) {
      continue;
    }
    firstNonEmptyLine = (_firstNonEmptyLine = firstNonEmptyLine) !== null && _firstNonEmptyLine !== void 0 ? _firstNonEmptyLine : i;
    lastNonEmptyLine = i;
    if (i !== 0 && indent2 < commonIndent) {
      commonIndent = indent2;
    }
  }
  return lines.map((line, i) => i === 0 ? line : line.slice(commonIndent)).slice(
    (_firstNonEmptyLine2 = firstNonEmptyLine) !== null && _firstNonEmptyLine2 !== void 0 ? _firstNonEmptyLine2 : 0,
    lastNonEmptyLine + 1
  );
}
function leadingWhitespace(str) {
  let i = 0;
  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {
    ++i;
  }
  return i;
}
function printBlockString(value, options) {
  const escapedValue = value.replace(/"""/g, '\\"""');
  const lines = escapedValue.split(/\r\n|[\n\r]/g);
  const isSingleLine = lines.length === 1;
  const forceLeadingNewLine = lines.length > 1 && lines.slice(1).every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0)));
  const hasTrailingTripleQuotes = escapedValue.endsWith('\\"""');
  const hasTrailingQuote = value.endsWith('"') && !hasTrailingTripleQuotes;
  const hasTrailingSlash = value.endsWith("\\");
  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;
  const printAsMultipleLines = !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability
  (!isSingleLine || value.length > 70 || forceTrailingNewline || forceLeadingNewLine || hasTrailingTripleQuotes);
  let result = "";
  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));
  if (printAsMultipleLines && !skipLeadingNewLine || forceLeadingNewLine) {
    result += "\n";
  }
  result += escapedValue;
  if (printAsMultipleLines || forceTrailingNewline) {
    result += "\n";
  }
  return '"""' + result + '"""';
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/tokenKind.mjs
var TokenKind;
(function(TokenKind2) {
  TokenKind2["SOF"] = "<SOF>";
  TokenKind2["EOF"] = "<EOF>";
  TokenKind2["BANG"] = "!";
  TokenKind2["DOLLAR"] = "$";
  TokenKind2["AMP"] = "&";
  TokenKind2["PAREN_L"] = "(";
  TokenKind2["PAREN_R"] = ")";
  TokenKind2["SPREAD"] = "...";
  TokenKind2["COLON"] = ":";
  TokenKind2["EQUALS"] = "=";
  TokenKind2["AT"] = "@";
  TokenKind2["BRACKET_L"] = "[";
  TokenKind2["BRACKET_R"] = "]";
  TokenKind2["BRACE_L"] = "{";
  TokenKind2["PIPE"] = "|";
  TokenKind2["BRACE_R"] = "}";
  TokenKind2["NAME"] = "Name";
  TokenKind2["INT"] = "Int";
  TokenKind2["FLOAT"] = "Float";
  TokenKind2["STRING"] = "String";
  TokenKind2["BLOCK_STRING"] = "BlockString";
  TokenKind2["COMMENT"] = "Comment";
})(TokenKind || (TokenKind = {}));

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/lexer.mjs
var Lexer = class {
  /**
   * The previously focused non-ignored token.
   */
  /**
   * The currently focused non-ignored token.
   */
  /**
   * The (1-indexed) line containing the current token.
   */
  /**
   * The character offset at which the current line begins.
   */
  constructor(source) {
    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);
    this.source = source;
    this.lastToken = startOfFileToken;
    this.token = startOfFileToken;
    this.line = 1;
    this.lineStart = 0;
  }
  get [Symbol.toStringTag]() {
    return "Lexer";
  }
  /**
   * Advances the token stream to the next non-ignored token.
   */
  advance() {
    this.lastToken = this.token;
    const token = this.token = this.lookahead();
    return token;
  }
  /**
   * Looks ahead and returns the next non-ignored token, but does not change
   * the state of Lexer.
   */
  lookahead() {
    let token = this.token;
    if (token.kind !== TokenKind.EOF) {
      do {
        if (token.next) {
          token = token.next;
        } else {
          const nextToken = readNextToken(this, token.end);
          token.next = nextToken;
          nextToken.prev = token;
          token = nextToken;
        }
      } while (token.kind === TokenKind.COMMENT);
    }
    return token;
  }
};
function isPunctuatorTokenKind(kind) {
  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;
}
function isUnicodeScalarValue(code5) {
  return code5 >= 0 && code5 <= 55295 || code5 >= 57344 && code5 <= 1114111;
}
function isSupplementaryCodePoint(body, location) {
  return isLeadingSurrogate(body.charCodeAt(location)) && isTrailingSurrogate(body.charCodeAt(location + 1));
}
function isLeadingSurrogate(code5) {
  return code5 >= 55296 && code5 <= 56319;
}
function isTrailingSurrogate(code5) {
  return code5 >= 56320 && code5 <= 57343;
}
function printCodePointAt(lexer, location) {
  const code5 = lexer.source.body.codePointAt(location);
  if (code5 === void 0) {
    return TokenKind.EOF;
  } else if (code5 >= 32 && code5 <= 126) {
    const char = String.fromCodePoint(code5);
    return char === '"' ? `'"'` : `"${char}"`;
  }
  return "U+" + code5.toString(16).toUpperCase().padStart(4, "0");
}
function createToken(lexer, kind, start, end, value) {
  const line = lexer.line;
  const col = 1 + start - lexer.lineStart;
  return new Token(kind, start, end, line, col, value);
}
function readNextToken(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start;
  while (position < bodyLength) {
    const code5 = body.charCodeAt(position);
    switch (code5) {
      case 65279:
      case 9:
      case 32:
      case 44:
        ++position;
        continue;
      case 10:
        ++position;
        ++lexer.line;
        lexer.lineStart = position;
        continue;
      case 13:
        if (body.charCodeAt(position + 1) === 10) {
          position += 2;
        } else {
          ++position;
        }
        ++lexer.line;
        lexer.lineStart = position;
        continue;
      case 35:
        return readComment(lexer, position);
      case 33:
        return createToken(lexer, TokenKind.BANG, position, position + 1);
      case 36:
        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);
      case 38:
        return createToken(lexer, TokenKind.AMP, position, position + 1);
      case 40:
        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);
      case 41:
        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);
      case 46:
        if (body.charCodeAt(position + 1) === 46 && body.charCodeAt(position + 2) === 46) {
          return createToken(lexer, TokenKind.SPREAD, position, position + 3);
        }
        break;
      case 58:
        return createToken(lexer, TokenKind.COLON, position, position + 1);
      case 61:
        return createToken(lexer, TokenKind.EQUALS, position, position + 1);
      case 64:
        return createToken(lexer, TokenKind.AT, position, position + 1);
      case 91:
        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);
      case 93:
        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);
      case 123:
        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);
      case 124:
        return createToken(lexer, TokenKind.PIPE, position, position + 1);
      case 125:
        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);
      case 34:
        if (body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {
          return readBlockString(lexer, position);
        }
        return readString(lexer, position);
    }
    if (isDigit(code5) || code5 === 45) {
      return readNumber(lexer, position, code5);
    }
    if (isNameStart(code5)) {
      return readName(lexer, position);
    }
    throw syntaxError(
      lexer.source,
      position,
      code5 === 39 ? `Unexpected single quote character ('), did you mean to use a double quote (")?` : isUnicodeScalarValue(code5) || isSupplementaryCodePoint(body, position) ? `Unexpected character: ${printCodePointAt(lexer, position)}.` : `Invalid character: ${printCodePointAt(lexer, position)}.`
    );
  }
  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);
}
function readComment(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start + 1;
  while (position < bodyLength) {
    const code5 = body.charCodeAt(position);
    if (code5 === 10 || code5 === 13) {
      break;
    }
    if (isUnicodeScalarValue(code5)) {
      ++position;
    } else if (isSupplementaryCodePoint(body, position)) {
      position += 2;
    } else {
      break;
    }
  }
  return createToken(
    lexer,
    TokenKind.COMMENT,
    start,
    position,
    body.slice(start + 1, position)
  );
}
function readNumber(lexer, start, firstCode) {
  const body = lexer.source.body;
  let position = start;
  let code5 = firstCode;
  let isFloat = false;
  if (code5 === 45) {
    code5 = body.charCodeAt(++position);
  }
  if (code5 === 48) {
    code5 = body.charCodeAt(++position);
    if (isDigit(code5)) {
      throw syntaxError(
        lexer.source,
        position,
        `Invalid number, unexpected digit after 0: ${printCodePointAt(
          lexer,
          position
        )}.`
      );
    }
  } else {
    position = readDigits(lexer, position, code5);
    code5 = body.charCodeAt(position);
  }
  if (code5 === 46) {
    isFloat = true;
    code5 = body.charCodeAt(++position);
    position = readDigits(lexer, position, code5);
    code5 = body.charCodeAt(position);
  }
  if (code5 === 69 || code5 === 101) {
    isFloat = true;
    code5 = body.charCodeAt(++position);
    if (code5 === 43 || code5 === 45) {
      code5 = body.charCodeAt(++position);
    }
    position = readDigits(lexer, position, code5);
    code5 = body.charCodeAt(position);
  }
  if (code5 === 46 || isNameStart(code5)) {
    throw syntaxError(
      lexer.source,
      position,
      `Invalid number, expected digit but got: ${printCodePointAt(
        lexer,
        position
      )}.`
    );
  }
  return createToken(
    lexer,
    isFloat ? TokenKind.FLOAT : TokenKind.INT,
    start,
    position,
    body.slice(start, position)
  );
}
function readDigits(lexer, start, firstCode) {
  if (!isDigit(firstCode)) {
    throw syntaxError(
      lexer.source,
      start,
      `Invalid number, expected digit but got: ${printCodePointAt(
        lexer,
        start
      )}.`
    );
  }
  const body = lexer.source.body;
  let position = start + 1;
  while (isDigit(body.charCodeAt(position))) {
    ++position;
  }
  return position;
}
function readString(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start + 1;
  let chunkStart = position;
  let value = "";
  while (position < bodyLength) {
    const code5 = body.charCodeAt(position);
    if (code5 === 34) {
      value += body.slice(chunkStart, position);
      return createToken(lexer, TokenKind.STRING, start, position + 1, value);
    }
    if (code5 === 92) {
      value += body.slice(chunkStart, position);
      const escape = body.charCodeAt(position + 1) === 117 ? body.charCodeAt(position + 2) === 123 ? readEscapedUnicodeVariableWidth(lexer, position) : readEscapedUnicodeFixedWidth(lexer, position) : readEscapedCharacter(lexer, position);
      value += escape.value;
      position += escape.size;
      chunkStart = position;
      continue;
    }
    if (code5 === 10 || code5 === 13) {
      break;
    }
    if (isUnicodeScalarValue(code5)) {
      ++position;
    } else if (isSupplementaryCodePoint(body, position)) {
      position += 2;
    } else {
      throw syntaxError(
        lexer.source,
        position,
        `Invalid character within String: ${printCodePointAt(
          lexer,
          position
        )}.`
      );
    }
  }
  throw syntaxError(lexer.source, position, "Unterminated string.");
}
function readEscapedUnicodeVariableWidth(lexer, position) {
  const body = lexer.source.body;
  let point = 0;
  let size = 3;
  while (size < 12) {
    const code5 = body.charCodeAt(position + size++);
    if (code5 === 125) {
      if (size < 5 || !isUnicodeScalarValue(point)) {
        break;
      }
      return {
        value: String.fromCodePoint(point),
        size
      };
    }
    point = point << 4 | readHexDigit(code5);
    if (point < 0) {
      break;
    }
  }
  throw syntaxError(
    lexer.source,
    position,
    `Invalid Unicode escape sequence: "${body.slice(
      position,
      position + size
    )}".`
  );
}
function readEscapedUnicodeFixedWidth(lexer, position) {
  const body = lexer.source.body;
  const code5 = read16BitHexCode(body, position + 2);
  if (isUnicodeScalarValue(code5)) {
    return {
      value: String.fromCodePoint(code5),
      size: 6
    };
  }
  if (isLeadingSurrogate(code5)) {
    if (body.charCodeAt(position + 6) === 92 && body.charCodeAt(position + 7) === 117) {
      const trailingCode = read16BitHexCode(body, position + 8);
      if (isTrailingSurrogate(trailingCode)) {
        return {
          value: String.fromCodePoint(code5, trailingCode),
          size: 12
        };
      }
    }
  }
  throw syntaxError(
    lexer.source,
    position,
    `Invalid Unicode escape sequence: "${body.slice(position, position + 6)}".`
  );
}
function read16BitHexCode(body, position) {
  return readHexDigit(body.charCodeAt(position)) << 12 | readHexDigit(body.charCodeAt(position + 1)) << 8 | readHexDigit(body.charCodeAt(position + 2)) << 4 | readHexDigit(body.charCodeAt(position + 3));
}
function readHexDigit(code5) {
  return code5 >= 48 && code5 <= 57 ? code5 - 48 : code5 >= 65 && code5 <= 70 ? code5 - 55 : code5 >= 97 && code5 <= 102 ? code5 - 87 : -1;
}
function readEscapedCharacter(lexer, position) {
  const body = lexer.source.body;
  const code5 = body.charCodeAt(position + 1);
  switch (code5) {
    case 34:
      return {
        value: '"',
        size: 2
      };
    case 92:
      return {
        value: "\\",
        size: 2
      };
    case 47:
      return {
        value: "/",
        size: 2
      };
    case 98:
      return {
        value: "\b",
        size: 2
      };
    case 102:
      return {
        value: "\f",
        size: 2
      };
    case 110:
      return {
        value: "\n",
        size: 2
      };
    case 114:
      return {
        value: "\r",
        size: 2
      };
    case 116:
      return {
        value: "	",
        size: 2
      };
  }
  throw syntaxError(
    lexer.source,
    position,
    `Invalid character escape sequence: "${body.slice(
      position,
      position + 2
    )}".`
  );
}
function readBlockString(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let lineStart = lexer.lineStart;
  let position = start + 3;
  let chunkStart = position;
  let currentLine = "";
  const blockLines = [];
  while (position < bodyLength) {
    const code5 = body.charCodeAt(position);
    if (code5 === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {
      currentLine += body.slice(chunkStart, position);
      blockLines.push(currentLine);
      const token = createToken(
        lexer,
        TokenKind.BLOCK_STRING,
        start,
        position + 3,
        // Return a string of the lines joined with U+000A.
        dedentBlockStringLines(blockLines).join("\n")
      );
      lexer.line += blockLines.length - 1;
      lexer.lineStart = lineStart;
      return token;
    }
    if (code5 === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {
      currentLine += body.slice(chunkStart, position);
      chunkStart = position + 1;
      position += 4;
      continue;
    }
    if (code5 === 10 || code5 === 13) {
      currentLine += body.slice(chunkStart, position);
      blockLines.push(currentLine);
      if (code5 === 13 && body.charCodeAt(position + 1) === 10) {
        position += 2;
      } else {
        ++position;
      }
      currentLine = "";
      chunkStart = position;
      lineStart = position;
      continue;
    }
    if (isUnicodeScalarValue(code5)) {
      ++position;
    } else if (isSupplementaryCodePoint(body, position)) {
      position += 2;
    } else {
      throw syntaxError(
        lexer.source,
        position,
        `Invalid character within String: ${printCodePointAt(
          lexer,
          position
        )}.`
      );
    }
  }
  throw syntaxError(lexer.source, position, "Unterminated string.");
}
function readName(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start + 1;
  while (position < bodyLength) {
    const code5 = body.charCodeAt(position);
    if (isNameContinue(code5)) {
      ++position;
    } else {
      break;
    }
  }
  return createToken(
    lexer,
    TokenKind.NAME,
    start,
    position,
    body.slice(start, position)
  );
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/inspect.mjs
var MAX_ARRAY_LENGTH = 10;
var MAX_RECURSIVE_DEPTH = 2;
function inspect(value) {
  return formatValue(value, []);
}
function formatValue(value, seenValues) {
  switch (typeof value) {
    case "string":
      return JSON.stringify(value);
    case "function":
      return value.name ? `[function ${value.name}]` : "[function]";
    case "object":
      return formatObjectValue(value, seenValues);
    default:
      return String(value);
  }
}
function formatObjectValue(value, previouslySeenValues) {
  if (value === null) {
    return "null";
  }
  if (previouslySeenValues.includes(value)) {
    return "[Circular]";
  }
  const seenValues = [...previouslySeenValues, value];
  if (isJSONable(value)) {
    const jsonValue = value.toJSON();
    if (jsonValue !== value) {
      return typeof jsonValue === "string" ? jsonValue : formatValue(jsonValue, seenValues);
    }
  } else if (Array.isArray(value)) {
    return formatArray(value, seenValues);
  }
  return formatObject(value, seenValues);
}
function isJSONable(value) {
  return typeof value.toJSON === "function";
}
function formatObject(object, seenValues) {
  const entries = Object.entries(object);
  if (entries.length === 0) {
    return "{}";
  }
  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return "[" + getObjectTag(object) + "]";
  }
  const properties = entries.map(
    ([key, value]) => key + ": " + formatValue(value, seenValues)
  );
  return "{ " + properties.join(", ") + " }";
}
function formatArray(array, seenValues) {
  if (array.length === 0) {
    return "[]";
  }
  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return "[Array]";
  }
  const len = Math.min(MAX_ARRAY_LENGTH, array.length);
  const remaining = array.length - len;
  const items = [];
  for (let i = 0; i < len; ++i) {
    items.push(formatValue(array[i], seenValues));
  }
  if (remaining === 1) {
    items.push("... 1 more item");
  } else if (remaining > 1) {
    items.push(`... ${remaining} more items`);
  }
  return "[" + items.join(", ") + "]";
}
function getObjectTag(object) {
  const tag2 = Object.prototype.toString.call(object).replace(/^\[object /, "").replace(/]$/, "");
  if (tag2 === "Object" && typeof object.constructor === "function") {
    const name4 = object.constructor.name;
    if (typeof name4 === "string" && name4 !== "") {
      return name4;
    }
  }
  return tag2;
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/instanceOf.mjs
var instanceOf = (
  /* c8 ignore next 6 */
  // FIXME: https://github.com/graphql/graphql-js/issues/2317
  globalThis.process && globalThis.process.env.NODE_ENV === "production" ? function instanceOf2(value, constructor) {
    return value instanceof constructor;
  } : function instanceOf3(value, constructor) {
    if (value instanceof constructor) {
      return true;
    }
    if (typeof value === "object" && value !== null) {
      var _value$constructor;
      const className = constructor.prototype[Symbol.toStringTag];
      const valueClassName = (
        // We still need to support constructor's name to detect conflicts with older versions of this library.
        Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name
      );
      if (className === valueClassName) {
        const stringifiedValue = inspect(value);
        throw new Error(`Cannot use ${className} "${stringifiedValue}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`);
      }
    }
    return false;
  }
);

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/source.mjs
var Source = class {
  constructor(body, name4 = "GraphQL request", locationOffset = {
    line: 1,
    column: 1
  }) {
    typeof body === "string" || devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);
    this.body = body;
    this.name = name4;
    this.locationOffset = locationOffset;
    this.locationOffset.line > 0 || devAssert(
      false,
      "line in locationOffset is 1-indexed and must be positive."
    );
    this.locationOffset.column > 0 || devAssert(
      false,
      "column in locationOffset is 1-indexed and must be positive."
    );
  }
  get [Symbol.toStringTag]() {
    return "Source";
  }
};
function isSource(source) {
  return instanceOf(source, Source);
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/parser.mjs
function parse(source, options) {
  const parser = new Parser(source, options);
  return parser.parseDocument();
}
var Parser = class {
  constructor(source, options = {}) {
    const sourceObj = isSource(source) ? source : new Source(source);
    this._lexer = new Lexer(sourceObj);
    this._options = options;
    this._tokenCounter = 0;
  }
  /**
   * Converts a name lex token into a name parse node.
   */
  parseName() {
    const token = this.expectToken(TokenKind.NAME);
    return this.node(token, {
      kind: Kind2.NAME,
      value: token.value
    });
  }
  // Implements the parsing rules in the Document section.
  /**
   * Document : Definition+
   */
  parseDocument() {
    return this.node(this._lexer.token, {
      kind: Kind2.DOCUMENT,
      definitions: this.many(
        TokenKind.SOF,
        this.parseDefinition,
        TokenKind.EOF
      )
    });
  }
  /**
   * Definition :
   *   - ExecutableDefinition
   *   - TypeSystemDefinition
   *   - TypeSystemExtension
   *
   * ExecutableDefinition :
   *   - OperationDefinition
   *   - FragmentDefinition
   *
   * TypeSystemDefinition :
   *   - SchemaDefinition
   *   - TypeDefinition
   *   - DirectiveDefinition
   *
   * TypeDefinition :
   *   - ScalarTypeDefinition
   *   - ObjectTypeDefinition
   *   - InterfaceTypeDefinition
   *   - UnionTypeDefinition
   *   - EnumTypeDefinition
   *   - InputObjectTypeDefinition
   */
  parseDefinition() {
    if (this.peek(TokenKind.BRACE_L)) {
      return this.parseOperationDefinition();
    }
    const hasDescription = this.peekDescription();
    const keywordToken = hasDescription ? this._lexer.lookahead() : this._lexer.token;
    if (keywordToken.kind === TokenKind.NAME) {
      switch (keywordToken.value) {
        case "schema":
          return this.parseSchemaDefinition();
        case "scalar":
          return this.parseScalarTypeDefinition();
        case "type":
          return this.parseObjectTypeDefinition();
        case "interface":
          return this.parseInterfaceTypeDefinition();
        case "union":
          return this.parseUnionTypeDefinition();
        case "enum":
          return this.parseEnumTypeDefinition();
        case "input":
          return this.parseInputObjectTypeDefinition();
        case "directive":
          return this.parseDirectiveDefinition();
      }
      if (hasDescription) {
        throw syntaxError(
          this._lexer.source,
          this._lexer.token.start,
          "Unexpected description, descriptions are supported only on type definitions."
        );
      }
      switch (keywordToken.value) {
        case "query":
        case "mutation":
        case "subscription":
          return this.parseOperationDefinition();
        case "fragment":
          return this.parseFragmentDefinition();
        case "extend":
          return this.parseTypeSystemExtension();
      }
    }
    throw this.unexpected(keywordToken);
  }
  // Implements the parsing rules in the Operations section.
  /**
   * OperationDefinition :
   *  - SelectionSet
   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
   */
  parseOperationDefinition() {
    const start = this._lexer.token;
    if (this.peek(TokenKind.BRACE_L)) {
      return this.node(start, {
        kind: Kind2.OPERATION_DEFINITION,
        operation: OperationTypeNode.QUERY,
        name: void 0,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet()
      });
    }
    const operation = this.parseOperationType();
    let name4;
    if (this.peek(TokenKind.NAME)) {
      name4 = this.parseName();
    }
    return this.node(start, {
      kind: Kind2.OPERATION_DEFINITION,
      operation,
      name: name4,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * OperationType : one of query mutation subscription
   */
  parseOperationType() {
    const operationToken = this.expectToken(TokenKind.NAME);
    switch (operationToken.value) {
      case "query":
        return OperationTypeNode.QUERY;
      case "mutation":
        return OperationTypeNode.MUTATION;
      case "subscription":
        return OperationTypeNode.SUBSCRIPTION;
    }
    throw this.unexpected(operationToken);
  }
  /**
   * VariableDefinitions : ( VariableDefinition+ )
   */
  parseVariableDefinitions() {
    return this.optionalMany(
      TokenKind.PAREN_L,
      this.parseVariableDefinition,
      TokenKind.PAREN_R
    );
  }
  /**
   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
   */
  parseVariableDefinition() {
    return this.node(this._lexer.token, {
      kind: Kind2.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseConstValueLiteral() : void 0,
      directives: this.parseConstDirectives()
    });
  }
  /**
   * Variable : $ Name
   */
  parseVariable() {
    const start = this._lexer.token;
    this.expectToken(TokenKind.DOLLAR);
    return this.node(start, {
      kind: Kind2.VARIABLE,
      name: this.parseName()
    });
  }
  /**
   * ```
   * SelectionSet : { Selection+ }
   * ```
   */
  parseSelectionSet() {
    return this.node(this._lexer.token, {
      kind: Kind2.SELECTION_SET,
      selections: this.many(
        TokenKind.BRACE_L,
        this.parseSelection,
        TokenKind.BRACE_R
      )
    });
  }
  /**
   * Selection :
   *   - Field
   *   - FragmentSpread
   *   - InlineFragment
   */
  parseSelection() {
    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();
  }
  /**
   * Field : Alias? Name Arguments? Directives? SelectionSet?
   *
   * Alias : Name :
   */
  parseField() {
    const start = this._lexer.token;
    const nameOrAlias = this.parseName();
    let alias;
    let name4;
    if (this.expectOptionalToken(TokenKind.COLON)) {
      alias = nameOrAlias;
      name4 = this.parseName();
    } else {
      name4 = nameOrAlias;
    }
    return this.node(start, {
      kind: Kind2.FIELD,
      alias,
      name: name4,
      arguments: this.parseArguments(false),
      directives: this.parseDirectives(false),
      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : void 0
    });
  }
  /**
   * Arguments[Const] : ( Argument[?Const]+ )
   */
  parseArguments(isConst) {
    const item = isConst ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);
  }
  /**
   * Argument[Const] : Name : Value[?Const]
   */
  parseArgument(isConst = false) {
    const start = this._lexer.token;
    const name4 = this.parseName();
    this.expectToken(TokenKind.COLON);
    return this.node(start, {
      kind: Kind2.ARGUMENT,
      name: name4,
      value: this.parseValueLiteral(isConst)
    });
  }
  parseConstArgument() {
    return this.parseArgument(true);
  }
  // Implements the parsing rules in the Fragments section.
  /**
   * Corresponds to both FragmentSpread and InlineFragment in the spec.
   *
   * FragmentSpread : ... FragmentName Directives?
   *
   * InlineFragment : ... TypeCondition? Directives? SelectionSet
   */
  parseFragment() {
    const start = this._lexer.token;
    this.expectToken(TokenKind.SPREAD);
    const hasTypeCondition = this.expectOptionalKeyword("on");
    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {
      return this.node(start, {
        kind: Kind2.FRAGMENT_SPREAD,
        name: this.parseFragmentName(),
        directives: this.parseDirectives(false)
      });
    }
    return this.node(start, {
      kind: Kind2.INLINE_FRAGMENT,
      typeCondition: hasTypeCondition ? this.parseNamedType() : void 0,
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * FragmentDefinition :
   *   - fragment FragmentName on TypeCondition Directives? SelectionSet
   *
   * TypeCondition : NamedType
   */
  parseFragmentDefinition() {
    const start = this._lexer.token;
    this.expectKeyword("fragment");
    if (this._options.allowLegacyFragmentVariables === true) {
      return this.node(start, {
        kind: Kind2.FRAGMENT_DEFINITION,
        name: this.parseFragmentName(),
        variableDefinitions: this.parseVariableDefinitions(),
        typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
        directives: this.parseDirectives(false),
        selectionSet: this.parseSelectionSet()
      });
    }
    return this.node(start, {
      kind: Kind2.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * FragmentName : Name but not `on`
   */
  parseFragmentName() {
    if (this._lexer.token.value === "on") {
      throw this.unexpected();
    }
    return this.parseName();
  }
  // Implements the parsing rules in the Values section.
  /**
   * Value[Const] :
   *   - [~Const] Variable
   *   - IntValue
   *   - FloatValue
   *   - StringValue
   *   - BooleanValue
   *   - NullValue
   *   - EnumValue
   *   - ListValue[?Const]
   *   - ObjectValue[?Const]
   *
   * BooleanValue : one of `true` `false`
   *
   * NullValue : `null`
   *
   * EnumValue : Name but not `true`, `false` or `null`
   */
  parseValueLiteral(isConst) {
    const token = this._lexer.token;
    switch (token.kind) {
      case TokenKind.BRACKET_L:
        return this.parseList(isConst);
      case TokenKind.BRACE_L:
        return this.parseObject(isConst);
      case TokenKind.INT:
        this.advanceLexer();
        return this.node(token, {
          kind: Kind2.INT,
          value: token.value
        });
      case TokenKind.FLOAT:
        this.advanceLexer();
        return this.node(token, {
          kind: Kind2.FLOAT,
          value: token.value
        });
      case TokenKind.STRING:
      case TokenKind.BLOCK_STRING:
        return this.parseStringLiteral();
      case TokenKind.NAME:
        this.advanceLexer();
        switch (token.value) {
          case "true":
            return this.node(token, {
              kind: Kind2.BOOLEAN,
              value: true
            });
          case "false":
            return this.node(token, {
              kind: Kind2.BOOLEAN,
              value: false
            });
          case "null":
            return this.node(token, {
              kind: Kind2.NULL
            });
          default:
            return this.node(token, {
              kind: Kind2.ENUM,
              value: token.value
            });
        }
      case TokenKind.DOLLAR:
        if (isConst) {
          this.expectToken(TokenKind.DOLLAR);
          if (this._lexer.token.kind === TokenKind.NAME) {
            const varName = this._lexer.token.value;
            throw syntaxError(
              this._lexer.source,
              token.start,
              `Unexpected variable "$${varName}" in constant value.`
            );
          } else {
            throw this.unexpected(token);
          }
        }
        return this.parseVariable();
      default:
        throw this.unexpected();
    }
  }
  parseConstValueLiteral() {
    return this.parseValueLiteral(true);
  }
  parseStringLiteral() {
    const token = this._lexer.token;
    this.advanceLexer();
    return this.node(token, {
      kind: Kind2.STRING,
      value: token.value,
      block: token.kind === TokenKind.BLOCK_STRING
    });
  }
  /**
   * ListValue[Const] :
   *   - [ ]
   *   - [ Value[?Const]+ ]
   */
  parseList(isConst) {
    const item = () => this.parseValueLiteral(isConst);
    return this.node(this._lexer.token, {
      kind: Kind2.LIST,
      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R)
    });
  }
  /**
   * ```
   * ObjectValue[Const] :
   *   - { }
   *   - { ObjectField[?Const]+ }
   * ```
   */
  parseObject(isConst) {
    const item = () => this.parseObjectField(isConst);
    return this.node(this._lexer.token, {
      kind: Kind2.OBJECT,
      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R)
    });
  }
  /**
   * ObjectField[Const] : Name : Value[?Const]
   */
  parseObjectField(isConst) {
    const start = this._lexer.token;
    const name4 = this.parseName();
    this.expectToken(TokenKind.COLON);
    return this.node(start, {
      kind: Kind2.OBJECT_FIELD,
      name: name4,
      value: this.parseValueLiteral(isConst)
    });
  }
  // Implements the parsing rules in the Directives section.
  /**
   * Directives[Const] : Directive[?Const]+
   */
  parseDirectives(isConst) {
    const directives = [];
    while (this.peek(TokenKind.AT)) {
      directives.push(this.parseDirective(isConst));
    }
    return directives;
  }
  parseConstDirectives() {
    return this.parseDirectives(true);
  }
  /**
   * ```
   * Directive[Const] : @ Name Arguments[?Const]?
   * ```
   */
  parseDirective(isConst) {
    const start = this._lexer.token;
    this.expectToken(TokenKind.AT);
    return this.node(start, {
      kind: Kind2.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(isConst)
    });
  }
  // Implements the parsing rules in the Types section.
  /**
   * Type :
   *   - NamedType
   *   - ListType
   *   - NonNullType
   */
  parseTypeReference() {
    const start = this._lexer.token;
    let type;
    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {
      const innerType = this.parseTypeReference();
      this.expectToken(TokenKind.BRACKET_R);
      type = this.node(start, {
        kind: Kind2.LIST_TYPE,
        type: innerType
      });
    } else {
      type = this.parseNamedType();
    }
    if (this.expectOptionalToken(TokenKind.BANG)) {
      return this.node(start, {
        kind: Kind2.NON_NULL_TYPE,
        type
      });
    }
    return type;
  }
  /**
   * NamedType : Name
   */
  parseNamedType() {
    return this.node(this._lexer.token, {
      kind: Kind2.NAMED_TYPE,
      name: this.parseName()
    });
  }
  // Implements the parsing rules in the Type Definition section.
  peekDescription() {
    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);
  }
  /**
   * Description : StringValue
   */
  parseDescription() {
    if (this.peekDescription()) {
      return this.parseStringLiteral();
    }
  }
  /**
   * ```
   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
   * ```
   */
  parseSchemaDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("schema");
    const directives = this.parseConstDirectives();
    const operationTypes = this.many(
      TokenKind.BRACE_L,
      this.parseOperationTypeDefinition,
      TokenKind.BRACE_R
    );
    return this.node(start, {
      kind: Kind2.SCHEMA_DEFINITION,
      description,
      directives,
      operationTypes
    });
  }
  /**
   * OperationTypeDefinition : OperationType : NamedType
   */
  parseOperationTypeDefinition() {
    const start = this._lexer.token;
    const operation = this.parseOperationType();
    this.expectToken(TokenKind.COLON);
    const type = this.parseNamedType();
    return this.node(start, {
      kind: Kind2.OPERATION_TYPE_DEFINITION,
      operation,
      type
    });
  }
  /**
   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
   */
  parseScalarTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("scalar");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: Kind2.SCALAR_TYPE_DEFINITION,
      description,
      name: name4,
      directives
    });
  }
  /**
   * ObjectTypeDefinition :
   *   Description?
   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
   */
  parseObjectTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("type");
    const name4 = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();
    return this.node(start, {
      kind: Kind2.OBJECT_TYPE_DEFINITION,
      description,
      name: name4,
      interfaces,
      directives,
      fields
    });
  }
  /**
   * ImplementsInterfaces :
   *   - implements `&`? NamedType
   *   - ImplementsInterfaces & NamedType
   */
  parseImplementsInterfaces() {
    return this.expectOptionalKeyword("implements") ? this.delimitedMany(TokenKind.AMP, this.parseNamedType) : [];
  }
  /**
   * ```
   * FieldsDefinition : { FieldDefinition+ }
   * ```
   */
  parseFieldsDefinition() {
    return this.optionalMany(
      TokenKind.BRACE_L,
      this.parseFieldDefinition,
      TokenKind.BRACE_R
    );
  }
  /**
   * FieldDefinition :
   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
   */
  parseFieldDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    const name4 = this.parseName();
    const args = this.parseArgumentDefs();
    this.expectToken(TokenKind.COLON);
    const type = this.parseTypeReference();
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: Kind2.FIELD_DEFINITION,
      description,
      name: name4,
      arguments: args,
      type,
      directives
    });
  }
  /**
   * ArgumentsDefinition : ( InputValueDefinition+ )
   */
  parseArgumentDefs() {
    return this.optionalMany(
      TokenKind.PAREN_L,
      this.parseInputValueDef,
      TokenKind.PAREN_R
    );
  }
  /**
   * InputValueDefinition :
   *   - Description? Name : Type DefaultValue? Directives[Const]?
   */
  parseInputValueDef() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    const name4 = this.parseName();
    this.expectToken(TokenKind.COLON);
    const type = this.parseTypeReference();
    let defaultValue;
    if (this.expectOptionalToken(TokenKind.EQUALS)) {
      defaultValue = this.parseConstValueLiteral();
    }
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: Kind2.INPUT_VALUE_DEFINITION,
      description,
      name: name4,
      type,
      defaultValue,
      directives
    });
  }
  /**
   * InterfaceTypeDefinition :
   *   - Description? interface Name Directives[Const]? FieldsDefinition?
   */
  parseInterfaceTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("interface");
    const name4 = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();
    return this.node(start, {
      kind: Kind2.INTERFACE_TYPE_DEFINITION,
      description,
      name: name4,
      interfaces,
      directives,
      fields
    });
  }
  /**
   * UnionTypeDefinition :
   *   - Description? union Name Directives[Const]? UnionMemberTypes?
   */
  parseUnionTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("union");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    const types = this.parseUnionMemberTypes();
    return this.node(start, {
      kind: Kind2.UNION_TYPE_DEFINITION,
      description,
      name: name4,
      directives,
      types
    });
  }
  /**
   * UnionMemberTypes :
   *   - = `|`? NamedType
   *   - UnionMemberTypes | NamedType
   */
  parseUnionMemberTypes() {
    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];
  }
  /**
   * EnumTypeDefinition :
   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
   */
  parseEnumTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("enum");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    const values = this.parseEnumValuesDefinition();
    return this.node(start, {
      kind: Kind2.ENUM_TYPE_DEFINITION,
      description,
      name: name4,
      directives,
      values
    });
  }
  /**
   * ```
   * EnumValuesDefinition : { EnumValueDefinition+ }
   * ```
   */
  parseEnumValuesDefinition() {
    return this.optionalMany(
      TokenKind.BRACE_L,
      this.parseEnumValueDefinition,
      TokenKind.BRACE_R
    );
  }
  /**
   * EnumValueDefinition : Description? EnumValue Directives[Const]?
   */
  parseEnumValueDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    const name4 = this.parseEnumValueName();
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: Kind2.ENUM_VALUE_DEFINITION,
      description,
      name: name4,
      directives
    });
  }
  /**
   * EnumValue : Name but not `true`, `false` or `null`
   */
  parseEnumValueName() {
    if (this._lexer.token.value === "true" || this._lexer.token.value === "false" || this._lexer.token.value === "null") {
      throw syntaxError(
        this._lexer.source,
        this._lexer.token.start,
        `${getTokenDesc(
          this._lexer.token
        )} is reserved and cannot be used for an enum value.`
      );
    }
    return this.parseName();
  }
  /**
   * InputObjectTypeDefinition :
   *   - Description? input Name Directives[Const]? InputFieldsDefinition?
   */
  parseInputObjectTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("input");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    const fields = this.parseInputFieldsDefinition();
    return this.node(start, {
      kind: Kind2.INPUT_OBJECT_TYPE_DEFINITION,
      description,
      name: name4,
      directives,
      fields
    });
  }
  /**
   * ```
   * InputFieldsDefinition : { InputValueDefinition+ }
   * ```
   */
  parseInputFieldsDefinition() {
    return this.optionalMany(
      TokenKind.BRACE_L,
      this.parseInputValueDef,
      TokenKind.BRACE_R
    );
  }
  /**
   * TypeSystemExtension :
   *   - SchemaExtension
   *   - TypeExtension
   *
   * TypeExtension :
   *   - ScalarTypeExtension
   *   - ObjectTypeExtension
   *   - InterfaceTypeExtension
   *   - UnionTypeExtension
   *   - EnumTypeExtension
   *   - InputObjectTypeDefinition
   */
  parseTypeSystemExtension() {
    const keywordToken = this._lexer.lookahead();
    if (keywordToken.kind === TokenKind.NAME) {
      switch (keywordToken.value) {
        case "schema":
          return this.parseSchemaExtension();
        case "scalar":
          return this.parseScalarTypeExtension();
        case "type":
          return this.parseObjectTypeExtension();
        case "interface":
          return this.parseInterfaceTypeExtension();
        case "union":
          return this.parseUnionTypeExtension();
        case "enum":
          return this.parseEnumTypeExtension();
        case "input":
          return this.parseInputObjectTypeExtension();
      }
    }
    throw this.unexpected(keywordToken);
  }
  /**
   * ```
   * SchemaExtension :
   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
   *  - extend schema Directives[Const]
   * ```
   */
  parseSchemaExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("schema");
    const directives = this.parseConstDirectives();
    const operationTypes = this.optionalMany(
      TokenKind.BRACE_L,
      this.parseOperationTypeDefinition,
      TokenKind.BRACE_R
    );
    if (directives.length === 0 && operationTypes.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.SCHEMA_EXTENSION,
      directives,
      operationTypes
    });
  }
  /**
   * ScalarTypeExtension :
   *   - extend scalar Name Directives[Const]
   */
  parseScalarTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("scalar");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    if (directives.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.SCALAR_TYPE_EXTENSION,
      name: name4,
      directives
    });
  }
  /**
   * ObjectTypeExtension :
   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend type Name ImplementsInterfaces? Directives[Const]
   *  - extend type Name ImplementsInterfaces
   */
  parseObjectTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("type");
    const name4 = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();
    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.OBJECT_TYPE_EXTENSION,
      name: name4,
      interfaces,
      directives,
      fields
    });
  }
  /**
   * InterfaceTypeExtension :
   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend interface Name ImplementsInterfaces? Directives[Const]
   *  - extend interface Name ImplementsInterfaces
   */
  parseInterfaceTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("interface");
    const name4 = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();
    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.INTERFACE_TYPE_EXTENSION,
      name: name4,
      interfaces,
      directives,
      fields
    });
  }
  /**
   * UnionTypeExtension :
   *   - extend union Name Directives[Const]? UnionMemberTypes
   *   - extend union Name Directives[Const]
   */
  parseUnionTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("union");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    const types = this.parseUnionMemberTypes();
    if (directives.length === 0 && types.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.UNION_TYPE_EXTENSION,
      name: name4,
      directives,
      types
    });
  }
  /**
   * EnumTypeExtension :
   *   - extend enum Name Directives[Const]? EnumValuesDefinition
   *   - extend enum Name Directives[Const]
   */
  parseEnumTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("enum");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    const values = this.parseEnumValuesDefinition();
    if (directives.length === 0 && values.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.ENUM_TYPE_EXTENSION,
      name: name4,
      directives,
      values
    });
  }
  /**
   * InputObjectTypeExtension :
   *   - extend input Name Directives[Const]? InputFieldsDefinition
   *   - extend input Name Directives[Const]
   */
  parseInputObjectTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword("extend");
    this.expectKeyword("input");
    const name4 = this.parseName();
    const directives = this.parseConstDirectives();
    const fields = this.parseInputFieldsDefinition();
    if (directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }
    return this.node(start, {
      kind: Kind2.INPUT_OBJECT_TYPE_EXTENSION,
      name: name4,
      directives,
      fields
    });
  }
  /**
   * ```
   * DirectiveDefinition :
   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
   * ```
   */
  parseDirectiveDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword("directive");
    this.expectToken(TokenKind.AT);
    const name4 = this.parseName();
    const args = this.parseArgumentDefs();
    const repeatable = this.expectOptionalKeyword("repeatable");
    this.expectKeyword("on");
    const locations = this.parseDirectiveLocations();
    return this.node(start, {
      kind: Kind2.DIRECTIVE_DEFINITION,
      description,
      name: name4,
      arguments: args,
      repeatable,
      locations
    });
  }
  /**
   * DirectiveLocations :
   *   - `|`? DirectiveLocation
   *   - DirectiveLocations | DirectiveLocation
   */
  parseDirectiveLocations() {
    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);
  }
  /*
   * DirectiveLocation :
   *   - ExecutableDirectiveLocation
   *   - TypeSystemDirectiveLocation
   *
   * ExecutableDirectiveLocation : one of
   *   `QUERY`
   *   `MUTATION`
   *   `SUBSCRIPTION`
   *   `FIELD`
   *   `FRAGMENT_DEFINITION`
   *   `FRAGMENT_SPREAD`
   *   `INLINE_FRAGMENT`
   *
   * TypeSystemDirectiveLocation : one of
   *   `SCHEMA`
   *   `SCALAR`
   *   `OBJECT`
   *   `FIELD_DEFINITION`
   *   `ARGUMENT_DEFINITION`
   *   `INTERFACE`
   *   `UNION`
   *   `ENUM`
   *   `ENUM_VALUE`
   *   `INPUT_OBJECT`
   *   `INPUT_FIELD_DEFINITION`
   */
  parseDirectiveLocation() {
    const start = this._lexer.token;
    const name4 = this.parseName();
    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name4.value)) {
      return name4;
    }
    throw this.unexpected(start);
  }
  // Core parsing utility functions
  /**
   * Returns a node that, if configured to do so, sets a "loc" field as a
   * location object, used to identify the place in the source that created a
   * given parsed object.
   */
  node(startToken, node) {
    if (this._options.noLocation !== true) {
      node.loc = new Location(
        startToken,
        this._lexer.lastToken,
        this._lexer.source
      );
    }
    return node;
  }
  /**
   * Determines if the next token is of a given kind
   */
  peek(kind) {
    return this._lexer.token.kind === kind;
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  expectToken(kind) {
    const token = this._lexer.token;
    if (token.kind === kind) {
      this.advanceLexer();
      return token;
    }
    throw syntaxError(
      this._lexer.source,
      token.start,
      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`
    );
  }
  /**
   * If the next token is of the given kind, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  expectOptionalToken(kind) {
    const token = this._lexer.token;
    if (token.kind === kind) {
      this.advanceLexer();
      return true;
    }
    return false;
  }
  /**
   * If the next token is a given keyword, advance the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  expectKeyword(value) {
    const token = this._lexer.token;
    if (token.kind === TokenKind.NAME && token.value === value) {
      this.advanceLexer();
    } else {
      throw syntaxError(
        this._lexer.source,
        token.start,
        `Expected "${value}", found ${getTokenDesc(token)}.`
      );
    }
  }
  /**
   * If the next token is a given keyword, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  expectOptionalKeyword(value) {
    const token = this._lexer.token;
    if (token.kind === TokenKind.NAME && token.value === value) {
      this.advanceLexer();
      return true;
    }
    return false;
  }
  /**
   * Helper function for creating an error when an unexpected lexed token is encountered.
   */
  unexpected(atToken) {
    const token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;
    return syntaxError(
      this._lexer.source,
      token.start,
      `Unexpected ${getTokenDesc(token)}.`
    );
  }
  /**
   * Returns a possibly empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  any(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    const nodes = [];
    while (!this.expectOptionalToken(closeKind)) {
      nodes.push(parseFn.call(this));
    }
    return nodes;
  }
  /**
   * Returns a list of parse nodes, determined by the parseFn.
   * It can be empty only if open token is missing otherwise it will always return non-empty list
   * that begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  optionalMany(openKind, parseFn, closeKind) {
    if (this.expectOptionalToken(openKind)) {
      const nodes = [];
      do {
        nodes.push(parseFn.call(this));
      } while (!this.expectOptionalToken(closeKind));
      return nodes;
    }
    return [];
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  many(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    const nodes = [];
    do {
      nodes.push(parseFn.call(this));
    } while (!this.expectOptionalToken(closeKind));
    return nodes;
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
   * Advances the parser to the next lex token after last item in the list.
   */
  delimitedMany(delimiterKind, parseFn) {
    this.expectOptionalToken(delimiterKind);
    const nodes = [];
    do {
      nodes.push(parseFn.call(this));
    } while (this.expectOptionalToken(delimiterKind));
    return nodes;
  }
  advanceLexer() {
    const { maxTokens } = this._options;
    const token = this._lexer.advance();
    if (maxTokens !== void 0 && token.kind !== TokenKind.EOF) {
      ++this._tokenCounter;
      if (this._tokenCounter > maxTokens) {
        throw syntaxError(
          this._lexer.source,
          token.start,
          `Document contains more that ${maxTokens} tokens. Parsing aborted.`
        );
      }
    }
  }
};
function getTokenDesc(token) {
  const value = token.value;
  return getTokenKindDesc(token.kind) + (value != null ? ` "${value}"` : "");
}
function getTokenKindDesc(kind) {
  return isPunctuatorTokenKind(kind) ? `"${kind}"` : kind;
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/printString.mjs
function printString(str) {
  return `"${str.replace(escapedRegExp, escapedReplacer)}"`;
}
var escapedRegExp = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
function escapedReplacer(str) {
  return escapeSequences[str.charCodeAt(0)];
}
var escapeSequences = [
  "\\u0000",
  "\\u0001",
  "\\u0002",
  "\\u0003",
  "\\u0004",
  "\\u0005",
  "\\u0006",
  "\\u0007",
  "\\b",
  "\\t",
  "\\n",
  "\\u000B",
  "\\f",
  "\\r",
  "\\u000E",
  "\\u000F",
  "\\u0010",
  "\\u0011",
  "\\u0012",
  "\\u0013",
  "\\u0014",
  "\\u0015",
  "\\u0016",
  "\\u0017",
  "\\u0018",
  "\\u0019",
  "\\u001A",
  "\\u001B",
  "\\u001C",
  "\\u001D",
  "\\u001E",
  "\\u001F",
  "",
  "",
  '\\"',
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 2F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 3F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 4F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\\\\",
  "",
  "",
  "",
  // 5F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 6F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\\u007F",
  "\\u0080",
  "\\u0081",
  "\\u0082",
  "\\u0083",
  "\\u0084",
  "\\u0085",
  "\\u0086",
  "\\u0087",
  "\\u0088",
  "\\u0089",
  "\\u008A",
  "\\u008B",
  "\\u008C",
  "\\u008D",
  "\\u008E",
  "\\u008F",
  "\\u0090",
  "\\u0091",
  "\\u0092",
  "\\u0093",
  "\\u0094",
  "\\u0095",
  "\\u0096",
  "\\u0097",
  "\\u0098",
  "\\u0099",
  "\\u009A",
  "\\u009B",
  "\\u009C",
  "\\u009D",
  "\\u009E",
  "\\u009F"
];

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/visitor.mjs
var BREAK = Object.freeze({});
function visit(root, visitor, visitorKeys = QueryDocumentKeys) {
  const enterLeaveMap = /* @__PURE__ */ new Map();
  for (const kind of Object.values(Kind2)) {
    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));
  }
  let stack = void 0;
  let inArray = Array.isArray(root);
  let keys = [root];
  let index = -1;
  let edits = [];
  let node = root;
  let key = void 0;
  let parent = void 0;
  const path = [];
  const ancestors = [];
  do {
    index++;
    const isLeaving = index === keys.length;
    const isEdited = isLeaving && edits.length !== 0;
    if (isLeaving) {
      key = ancestors.length === 0 ? void 0 : path[path.length - 1];
      node = parent;
      parent = ancestors.pop();
      if (isEdited) {
        if (inArray) {
          node = node.slice();
          let editOffset = 0;
          for (const [editKey, editValue] of edits) {
            const arrayKey = editKey - editOffset;
            if (editValue === null) {
              node.splice(arrayKey, 1);
              editOffset++;
            } else {
              node[arrayKey] = editValue;
            }
          }
        } else {
          node = Object.defineProperties(
            {},
            Object.getOwnPropertyDescriptors(node)
          );
          for (const [editKey, editValue] of edits) {
            node[editKey] = editValue;
          }
        }
      }
      index = stack.index;
      keys = stack.keys;
      edits = stack.edits;
      inArray = stack.inArray;
      stack = stack.prev;
    } else if (parent) {
      key = inArray ? index : keys[index];
      node = parent[key];
      if (node === null || node === void 0) {
        continue;
      }
      path.push(key);
    }
    let result;
    if (!Array.isArray(node)) {
      var _enterLeaveMap$get, _enterLeaveMap$get2;
      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);
      const visitFn = isLeaving ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get === void 0 ? void 0 : _enterLeaveMap$get.leave : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get2 === void 0 ? void 0 : _enterLeaveMap$get2.enter;
      result = visitFn === null || visitFn === void 0 ? void 0 : visitFn.call(visitor, node, key, parent, path, ancestors);
      if (result === BREAK) {
        break;
      }
      if (result === false) {
        if (!isLeaving) {
          path.pop();
          continue;
        }
      } else if (result !== void 0) {
        edits.push([key, result]);
        if (!isLeaving) {
          if (isNode(result)) {
            node = result;
          } else {
            path.pop();
            continue;
          }
        }
      }
    }
    if (result === void 0 && isEdited) {
      edits.push([key, node]);
    }
    if (isLeaving) {
      path.pop();
    } else {
      var _node$kind;
      stack = {
        inArray,
        index,
        keys,
        edits,
        prev: stack
      };
      inArray = Array.isArray(node);
      keys = inArray ? node : (_node$kind = visitorKeys[node.kind]) !== null && _node$kind !== void 0 ? _node$kind : [];
      index = -1;
      edits = [];
      if (parent) {
        ancestors.push(parent);
      }
      parent = node;
    }
  } while (stack !== void 0);
  if (edits.length !== 0) {
    return edits[edits.length - 1][1];
  }
  return root;
}
function getEnterLeaveForKind(visitor, kind) {
  const kindVisitor = visitor[kind];
  if (typeof kindVisitor === "object") {
    return kindVisitor;
  } else if (typeof kindVisitor === "function") {
    return {
      enter: kindVisitor,
      leave: void 0
    };
  }
  return {
    enter: visitor.enter,
    leave: visitor.leave
  };
}

// node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/printer.mjs
function print(ast) {
  return visit(ast, printDocASTReducer);
}
var MAX_LINE_LENGTH = 80;
var printDocASTReducer = {
  Name: {
    leave: (node) => node.value
  },
  Variable: {
    leave: (node) => "$" + node.name
  },
  // Document
  Document: {
    leave: (node) => join2(node.definitions, "\n\n")
  },
  OperationDefinition: {
    leave(node) {
      const varDefs = wrap("(", join2(node.variableDefinitions, ", "), ")");
      const prefix = join2(
        [
          node.operation,
          join2([node.name, varDefs]),
          join2(node.directives, " ")
        ],
        " "
      );
      return (prefix === "query" ? "" : prefix + " ") + node.selectionSet;
    }
  },
  VariableDefinition: {
    leave: ({ variable, type, defaultValue, directives }) => variable + ": " + type + wrap(" = ", defaultValue) + wrap(" ", join2(directives, " "))
  },
  SelectionSet: {
    leave: ({ selections }) => block(selections)
  },
  Field: {
    leave({ alias, name: name4, arguments: args, directives, selectionSet }) {
      const prefix = wrap("", alias, ": ") + name4;
      let argsLine = prefix + wrap("(", join2(args, ", "), ")");
      if (argsLine.length > MAX_LINE_LENGTH) {
        argsLine = prefix + wrap("(\n", indent(join2(args, "\n")), "\n)");
      }
      return join2([argsLine, join2(directives, " "), selectionSet], " ");
    }
  },
  Argument: {
    leave: ({ name: name4, value }) => name4 + ": " + value
  },
  // Fragments
  FragmentSpread: {
    leave: ({ name: name4, directives }) => "..." + name4 + wrap(" ", join2(directives, " "))
  },
  InlineFragment: {
    leave: ({ typeCondition, directives, selectionSet }) => join2(
      [
        "...",
        wrap("on ", typeCondition),
        join2(directives, " "),
        selectionSet
      ],
      " "
    )
  },
  FragmentDefinition: {
    leave: ({ name: name4, typeCondition, variableDefinitions, directives, selectionSet }) => (
      // or removed in the future.
      `fragment ${name4}${wrap("(", join2(variableDefinitions, ", "), ")")} on ${typeCondition} ${wrap("", join2(directives, " "), " ")}` + selectionSet
    )
  },
  // Value
  IntValue: {
    leave: ({ value }) => value
  },
  FloatValue: {
    leave: ({ value }) => value
  },
  StringValue: {
    leave: ({ value, block: isBlockString }) => isBlockString ? printBlockString(value) : printString(value)
  },
  BooleanValue: {
    leave: ({ value }) => value ? "true" : "false"
  },
  NullValue: {
    leave: () => "null"
  },
  EnumValue: {
    leave: ({ value }) => value
  },
  ListValue: {
    leave: ({ values }) => "[" + join2(values, ", ") + "]"
  },
  ObjectValue: {
    leave: ({ fields }) => "{" + join2(fields, ", ") + "}"
  },
  ObjectField: {
    leave: ({ name: name4, value }) => name4 + ": " + value
  },
  // Directive
  Directive: {
    leave: ({ name: name4, arguments: args }) => "@" + name4 + wrap("(", join2(args, ", "), ")")
  },
  // Type
  NamedType: {
    leave: ({ name: name4 }) => name4
  },
  ListType: {
    leave: ({ type }) => "[" + type + "]"
  },
  NonNullType: {
    leave: ({ type }) => type + "!"
  },
  // Type System Definitions
  SchemaDefinition: {
    leave: ({ description, directives, operationTypes }) => wrap("", description, "\n") + join2(["schema", join2(directives, " "), block(operationTypes)], " ")
  },
  OperationTypeDefinition: {
    leave: ({ operation, type }) => operation + ": " + type
  },
  ScalarTypeDefinition: {
    leave: ({ description, name: name4, directives }) => wrap("", description, "\n") + join2(["scalar", name4, join2(directives, " ")], " ")
  },
  ObjectTypeDefinition: {
    leave: ({ description, name: name4, interfaces, directives, fields }) => wrap("", description, "\n") + join2(
      [
        "type",
        name4,
        wrap("implements ", join2(interfaces, " & ")),
        join2(directives, " "),
        block(fields)
      ],
      " "
    )
  },
  FieldDefinition: {
    leave: ({ description, name: name4, arguments: args, type, directives }) => wrap("", description, "\n") + name4 + (hasMultilineItems(args) ? wrap("(\n", indent(join2(args, "\n")), "\n)") : wrap("(", join2(args, ", "), ")")) + ": " + type + wrap(" ", join2(directives, " "))
  },
  InputValueDefinition: {
    leave: ({ description, name: name4, type, defaultValue, directives }) => wrap("", description, "\n") + join2(
      [name4 + ": " + type, wrap("= ", defaultValue), join2(directives, " ")],
      " "
    )
  },
  InterfaceTypeDefinition: {
    leave: ({ description, name: name4, interfaces, directives, fields }) => wrap("", description, "\n") + join2(
      [
        "interface",
        name4,
        wrap("implements ", join2(interfaces, " & ")),
        join2(directives, " "),
        block(fields)
      ],
      " "
    )
  },
  UnionTypeDefinition: {
    leave: ({ description, name: name4, directives, types }) => wrap("", description, "\n") + join2(
      ["union", name4, join2(directives, " "), wrap("= ", join2(types, " | "))],
      " "
    )
  },
  EnumTypeDefinition: {
    leave: ({ description, name: name4, directives, values }) => wrap("", description, "\n") + join2(["enum", name4, join2(directives, " "), block(values)], " ")
  },
  EnumValueDefinition: {
    leave: ({ description, name: name4, directives }) => wrap("", description, "\n") + join2([name4, join2(directives, " ")], " ")
  },
  InputObjectTypeDefinition: {
    leave: ({ description, name: name4, directives, fields }) => wrap("", description, "\n") + join2(["input", name4, join2(directives, " "), block(fields)], " ")
  },
  DirectiveDefinition: {
    leave: ({ description, name: name4, arguments: args, repeatable, locations }) => wrap("", description, "\n") + "directive @" + name4 + (hasMultilineItems(args) ? wrap("(\n", indent(join2(args, "\n")), "\n)") : wrap("(", join2(args, ", "), ")")) + (repeatable ? " repeatable" : "") + " on " + join2(locations, " | ")
  },
  SchemaExtension: {
    leave: ({ directives, operationTypes }) => join2(
      ["extend schema", join2(directives, " "), block(operationTypes)],
      " "
    )
  },
  ScalarTypeExtension: {
    leave: ({ name: name4, directives }) => join2(["extend scalar", name4, join2(directives, " ")], " ")
  },
  ObjectTypeExtension: {
    leave: ({ name: name4, interfaces, directives, fields }) => join2(
      [
        "extend type",
        name4,
        wrap("implements ", join2(interfaces, " & ")),
        join2(directives, " "),
        block(fields)
      ],
      " "
    )
  },
  InterfaceTypeExtension: {
    leave: ({ name: name4, interfaces, directives, fields }) => join2(
      [
        "extend interface",
        name4,
        wrap("implements ", join2(interfaces, " & ")),
        join2(directives, " "),
        block(fields)
      ],
      " "
    )
  },
  UnionTypeExtension: {
    leave: ({ name: name4, directives, types }) => join2(
      [
        "extend union",
        name4,
        join2(directives, " "),
        wrap("= ", join2(types, " | "))
      ],
      " "
    )
  },
  EnumTypeExtension: {
    leave: ({ name: name4, directives, values }) => join2(["extend enum", name4, join2(directives, " "), block(values)], " ")
  },
  InputObjectTypeExtension: {
    leave: ({ name: name4, directives, fields }) => join2(["extend input", name4, join2(directives, " "), block(fields)], " ")
  }
};
function join2(maybeArray, separator = "") {
  var _maybeArray$filter$jo;
  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter((x) => x).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : "";
}
function block(array) {
  return wrap("{\n", indent(join2(array, "\n")), "\n}");
}
function wrap(start, maybeString, end = "") {
  return maybeString != null && maybeString !== "" ? start + maybeString + end : "";
}
function indent(str) {
  return wrap("  ", str.replace(/\n/g, "\n  "));
}
function hasMultilineItems(maybeArray) {
  var _maybeArray$some;
  return (_maybeArray$some = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some((str) => str.includes("\n"))) !== null && _maybeArray$some !== void 0 ? _maybeArray$some : false;
}

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/resolveRequestDocument.js
var extractOperationName = (document2) => {
  let operationName = void 0;
  const operationDefinitions = document2.definitions.filter((definition) => definition.kind === `OperationDefinition`);
  if (operationDefinitions.length === 1) {
    operationName = operationDefinitions[0]?.name?.value;
  }
  return operationName;
};
var resolveRequestDocument = (document2) => {
  if (typeof document2 === `string`) {
    let operationName2 = void 0;
    try {
      const parsedDocument = parse(document2);
      operationName2 = extractOperationName(parsedDocument);
    } catch (err) {
    }
    return { query: document2, operationName: operationName2 };
  }
  const operationName = extractOperationName(document2);
  return { query: print(document2), operationName };
};

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/types.js
var ClientError = class _ClientError extends Error {
  constructor(response, request) {
    const message2 = `${_ClientError.extractMessage(response)}: ${JSON.stringify({
      response,
      request
    })}`;
    super(message2);
    Object.setPrototypeOf(this, _ClientError.prototype);
    this.response = response;
    this.request = request;
    if (typeof Error.captureStackTrace === `function`) {
      Error.captureStackTrace(this, _ClientError);
    }
  }
  static extractMessage(response) {
    return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`;
  }
};

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/index.js
var CrossFetch = __toESM(require_browser_ponyfill(), 1);

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/graphql-ws.js
var CONNECTION_INIT = `connection_init`;
var CONNECTION_ACK = `connection_ack`;
var PING = `ping`;
var PONG = `pong`;
var SUBSCRIBE = `subscribe`;
var NEXT = `next`;
var ERROR = `error`;
var COMPLETE = `complete`;
var GraphQLWebSocketMessage = class _GraphQLWebSocketMessage {
  get type() {
    return this._type;
  }
  get id() {
    return this._id;
  }
  get payload() {
    return this._payload;
  }
  constructor(type, payload, id) {
    this._type = type;
    this._payload = payload;
    this._id = id;
  }
  get text() {
    const result = { type: this.type };
    if (this.id != null && this.id != void 0)
      result.id = this.id;
    if (this.payload != null && this.payload != void 0)
      result.payload = this.payload;
    return JSON.stringify(result);
  }
  static parse(data, f2) {
    const { type, payload, id } = JSON.parse(data);
    return new _GraphQLWebSocketMessage(type, f2(payload), id);
  }
};
var GraphQLWebSocketClient = class {
  constructor(socket, { onInit, onAcknowledged, onPing, onPong }) {
    this.socketState = { acknowledged: false, lastRequestId: 0, subscriptions: {} };
    this.socket = socket;
    socket.addEventListener(`open`, async (e2) => {
      this.socketState.acknowledged = false;
      this.socketState.subscriptions = {};
      socket.send(ConnectionInit(onInit ? await onInit() : null).text);
    });
    socket.addEventListener(`close`, (e2) => {
      this.socketState.acknowledged = false;
      this.socketState.subscriptions = {};
    });
    socket.addEventListener(`error`, (e2) => {
      console.error(e2);
    });
    socket.addEventListener(`message`, (e2) => {
      try {
        const message2 = parseMessage(e2.data);
        switch (message2.type) {
          case CONNECTION_ACK: {
            if (this.socketState.acknowledged) {
              console.warn(`Duplicate CONNECTION_ACK message ignored`);
            } else {
              this.socketState.acknowledged = true;
              if (onAcknowledged)
                onAcknowledged(message2.payload);
            }
            return;
          }
          case PING: {
            if (onPing)
              onPing(message2.payload).then((r2) => socket.send(Pong(r2).text));
            else
              socket.send(Pong(null).text);
            return;
          }
          case PONG: {
            if (onPong)
              onPong(message2.payload);
            return;
          }
        }
        if (!this.socketState.acknowledged) {
          return;
        }
        if (message2.id === void 0 || message2.id === null || !this.socketState.subscriptions[message2.id]) {
          return;
        }
        const { query, variables, subscriber } = this.socketState.subscriptions[message2.id];
        switch (message2.type) {
          case NEXT: {
            if (!message2.payload.errors && message2.payload.data) {
              subscriber.next && subscriber.next(message2.payload.data);
            }
            if (message2.payload.errors) {
              subscriber.error && subscriber.error(new ClientError({ ...message2.payload, status: 200 }, { query, variables }));
            } else {
            }
            return;
          }
          case ERROR: {
            subscriber.error && subscriber.error(new ClientError({ errors: message2.payload, status: 200 }, { query, variables }));
            return;
          }
          case COMPLETE: {
            subscriber.complete && subscriber.complete();
            delete this.socketState.subscriptions[message2.id];
            return;
          }
        }
      } catch (e3) {
        console.error(e3);
        socket.close(1006);
      }
      socket.close(4400, `Unknown graphql-ws message.`);
    });
  }
  makeSubscribe(query, operationName, subscriber, variables) {
    const subscriptionId = (this.socketState.lastRequestId++).toString();
    this.socketState.subscriptions[subscriptionId] = { query, variables, subscriber };
    this.socket.send(Subscribe(subscriptionId, { query, operationName, variables }).text);
    return () => {
      this.socket.send(Complete(subscriptionId).text);
      delete this.socketState.subscriptions[subscriptionId];
    };
  }
  rawRequest(query, variables) {
    return new Promise((resolve, reject) => {
      let result;
      this.rawSubscribe(query, {
        next: (data, extensions) => result = { data, extensions },
        error: reject,
        complete: () => resolve(result)
      }, variables);
    });
  }
  request(document2, variables) {
    return new Promise((resolve, reject) => {
      let result;
      this.subscribe(document2, {
        next: (data) => result = data,
        error: reject,
        complete: () => resolve(result)
      }, variables);
    });
  }
  subscribe(document2, subscriber, variables) {
    const { query, operationName } = resolveRequestDocument(document2);
    return this.makeSubscribe(query, operationName, subscriber, variables);
  }
  rawSubscribe(query, subscriber, variables) {
    return this.makeSubscribe(query, void 0, subscriber, variables);
  }
  ping(payload) {
    this.socket.send(Ping(payload).text);
  }
  close() {
    this.socket.close(1e3);
  }
};
GraphQLWebSocketClient.PROTOCOL = `graphql-transport-ws`;
function parseMessage(data, f2 = (a) => a) {
  const m = GraphQLWebSocketMessage.parse(data, f2);
  return m;
}
function ConnectionInit(payload) {
  return new GraphQLWebSocketMessage(CONNECTION_INIT, payload);
}
function Ping(payload) {
  return new GraphQLWebSocketMessage(PING, payload, void 0);
}
function Pong(payload) {
  return new GraphQLWebSocketMessage(PONG, payload, void 0);
}
function Subscribe(id, payload) {
  return new GraphQLWebSocketMessage(SUBSCRIBE, payload, id);
}
function Complete(id) {
  return new GraphQLWebSocketMessage(COMPLETE, void 0, id);
}

// node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/index.js
var resolveHeaders = (headers) => {
  let oHeaders = {};
  if (headers) {
    if (typeof Headers !== `undefined` && headers instanceof Headers || CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers) {
      oHeaders = HeadersInstanceToPlainObject(headers);
    } else if (Array.isArray(headers)) {
      headers.forEach(([name4, value]) => {
        if (name4 && value !== void 0) {
          oHeaders[name4] = value;
        }
      });
    } else {
      oHeaders = headers;
    }
  }
  return oHeaders;
};
var cleanQuery = (str) => str.replace(/([\s,]|#[^\n\r]+)+/g, ` `).trim();
var buildRequestConfig = (params) => {
  if (!Array.isArray(params.query)) {
    const params_2 = params;
    const search = [`query=${encodeURIComponent(cleanQuery(params_2.query))}`];
    if (params.variables) {
      search.push(`variables=${encodeURIComponent(params_2.jsonSerializer.stringify(params_2.variables))}`);
    }
    if (params_2.operationName) {
      search.push(`operationName=${encodeURIComponent(params_2.operationName)}`);
    }
    return search.join(`&`);
  }
  if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {
    throw new Error(`Cannot create query with given variable type, array expected`);
  }
  const params_ = params;
  const payload = params.query.reduce((acc, currentQuery, index) => {
    acc.push({
      query: cleanQuery(currentQuery),
      variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : void 0
    });
    return acc;
  }, []);
  return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`;
};
var createHttpMethodFetcher = (method) => async (params) => {
  const { url, query, variables, operationName, fetch: fetch2, fetchOptions, middleware } = params;
  const headers = { ...params.headers };
  let queryParams = ``;
  let body = void 0;
  if (method === `POST`) {
    body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer);
    if (typeof body === `string`) {
      headers[`Content-Type`] = `application/json`;
    }
  } else {
    queryParams = buildRequestConfig({
      query,
      variables,
      operationName,
      jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer
    });
  }
  const init = {
    method,
    headers,
    body,
    ...fetchOptions
  };
  let urlResolved = url;
  let initResolved = init;
  if (middleware) {
    const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }));
    const { url: urlNew, ...initNew } = result;
    urlResolved = urlNew;
    initResolved = initNew;
  }
  if (queryParams) {
    urlResolved = `${urlResolved}?${queryParams}`;
  }
  return await fetch2(urlResolved, initResolved);
};
var GraphQLClient = class {
  constructor(url, requestConfig = {}) {
    this.url = url;
    this.requestConfig = requestConfig;
    this.rawRequest = async (...args) => {
      const [queryOrOptions, variables, requestHeaders] = args;
      const rawRequestOptions = parseRawRequestArgs(queryOrOptions, variables, requestHeaders);
      const { headers, fetch: fetch2 = CrossFetch.default, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;
      const { url: url2 } = this;
      if (rawRequestOptions.signal !== void 0) {
        fetchOptions.signal = rawRequestOptions.signal;
      }
      const { operationName } = resolveRequestDocument(rawRequestOptions.query);
      return makeRequest({
        url: url2,
        query: rawRequestOptions.query,
        variables: rawRequestOptions.variables,
        headers: {
          ...resolveHeaders(callOrIdentity(headers)),
          ...resolveHeaders(rawRequestOptions.requestHeaders)
        },
        operationName,
        fetch: fetch2,
        method,
        fetchOptions,
        middleware: requestMiddleware
      }).then((response) => {
        if (responseMiddleware) {
          responseMiddleware(response);
        }
        return response;
      }).catch((error) => {
        if (responseMiddleware) {
          responseMiddleware(error);
        }
        throw error;
      });
    };
  }
  async request(documentOrOptions, ...variablesAndRequestHeaders) {
    const [variables, requestHeaders] = variablesAndRequestHeaders;
    const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders);
    const { headers, fetch: fetch2 = CrossFetch.default, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;
    const { url } = this;
    if (requestOptions.signal !== void 0) {
      fetchOptions.signal = requestOptions.signal;
    }
    const { query, operationName } = resolveRequestDocument(requestOptions.document);
    return makeRequest({
      url,
      query,
      variables: requestOptions.variables,
      headers: {
        ...resolveHeaders(callOrIdentity(headers)),
        ...resolveHeaders(requestOptions.requestHeaders)
      },
      operationName,
      fetch: fetch2,
      method,
      fetchOptions,
      middleware: requestMiddleware
    }).then((response) => {
      if (responseMiddleware) {
        responseMiddleware(response);
      }
      return response.data;
    }).catch((error) => {
      if (responseMiddleware) {
        responseMiddleware(error);
      }
      throw error;
    });
  }
  // prettier-ignore
  batchRequests(documentsOrOptions, requestHeaders) {
    const batchRequestOptions = parseBatchRequestArgs(documentsOrOptions, requestHeaders);
    const { headers, ...fetchOptions } = this.requestConfig;
    if (batchRequestOptions.signal !== void 0) {
      fetchOptions.signal = batchRequestOptions.signal;
    }
    const queries = batchRequestOptions.documents.map(({ document: document2 }) => resolveRequestDocument(document2).query);
    const variables = batchRequestOptions.documents.map(({ variables: variables2 }) => variables2);
    return makeRequest({
      url: this.url,
      query: queries,
      // @ts-expect-error TODO reconcile batch variables into system.
      variables,
      headers: {
        ...resolveHeaders(callOrIdentity(headers)),
        ...resolveHeaders(batchRequestOptions.requestHeaders)
      },
      operationName: void 0,
      fetch: this.requestConfig.fetch ?? CrossFetch.default,
      method: this.requestConfig.method || `POST`,
      fetchOptions,
      middleware: this.requestConfig.requestMiddleware
    }).then((response) => {
      if (this.requestConfig.responseMiddleware) {
        this.requestConfig.responseMiddleware(response);
      }
      return response.data;
    }).catch((error) => {
      if (this.requestConfig.responseMiddleware) {
        this.requestConfig.responseMiddleware(error);
      }
      throw error;
    });
  }
  setHeaders(headers) {
    this.requestConfig.headers = headers;
    return this;
  }
  /**
   * Attach a header to the client. All subsequent requests will have this header.
   */
  setHeader(key, value) {
    const { headers } = this.requestConfig;
    if (headers) {
      headers[key] = value;
    } else {
      this.requestConfig.headers = { [key]: value };
    }
    return this;
  }
  /**
   * Change the client endpoint. All subsequent requests will send to this endpoint.
   */
  setEndpoint(value) {
    this.url = value;
    return this;
  }
};
var makeRequest = async (params) => {
  const { query, variables, fetchOptions } = params;
  const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`));
  const isBatchingQuery = Array.isArray(params.query);
  const response = await fetcher(params);
  const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer);
  const successfullyReceivedData = Array.isArray(result) ? !result.some(({ data }) => !data) : Boolean(result.data);
  const successfullyPassedErrorPolicy = Array.isArray(result) || !result.errors || Array.isArray(result.errors) && !result.errors.length || fetchOptions.errorPolicy === `all` || fetchOptions.errorPolicy === `ignore`;
  if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {
    const { errors: _, ...rest } = Array.isArray(result) ? result : result;
    const data = fetchOptions.errorPolicy === `ignore` ? rest : result;
    const dataEnvelope = isBatchingQuery ? { data } : data;
    return {
      ...dataEnvelope,
      headers: response.headers,
      status: response.status
    };
  } else {
    const errorResult = typeof result === `string` ? {
      error: result
    } : result;
    throw new ClientError(
      // @ts-expect-error TODO
      { ...errorResult, status: response.status, headers: response.headers },
      { query, variables }
    );
  }
};
var createRequestBody = (query, variables, operationName, jsonSerializer) => {
  const jsonSerializer_ = jsonSerializer ?? defaultJsonSerializer;
  if (!Array.isArray(query)) {
    return jsonSerializer_.stringify({ query, variables, operationName });
  }
  if (typeof variables !== `undefined` && !Array.isArray(variables)) {
    throw new Error(`Cannot create request body with given variable type, array expected`);
  }
  const payload = query.reduce((acc, currentQuery, index) => {
    acc.push({ query: currentQuery, variables: variables ? variables[index] : void 0 });
    return acc;
  }, []);
  return jsonSerializer_.stringify(payload);
};
var getResult = async (response, jsonSerializer) => {
  let contentType;
  response.headers.forEach((value, key) => {
    if (key.toLowerCase() === `content-type`) {
      contentType = value;
    }
  });
  if (contentType && (contentType.toLowerCase().startsWith(`application/json`) || contentType.toLowerCase().startsWith(`application/graphql+json`) || contentType.toLowerCase().startsWith(`application/graphql-response+json`))) {
    return jsonSerializer.parse(await response.text());
  } else {
    return response.text();
  }
};
var callOrIdentity = (value) => {
  return typeof value === `function` ? value() : value;
};

// node_modules/.pnpm/jwt-decode@3.1.2/node_modules/jwt-decode/build/jwt-decode.esm.js
function e(e2) {
  this.message = e2;
}
e.prototype = new Error(), e.prototype.name = "InvalidCharacterError";
var r = "undefined" != typeof window && window.atob && window.atob.bind(window) || function(r2) {
  var t2 = String(r2).replace(/=+$/, "");
  if (t2.length % 4 == 1)
    throw new e("'atob' failed: The string to be decoded is not correctly encoded.");
  for (var n2, o2, a = 0, i = 0, c = ""; o2 = t2.charAt(i++); ~o2 && (n2 = a % 4 ? 64 * n2 + o2 : o2, a++ % 4) ? c += String.fromCharCode(255 & n2 >> (-2 * a & 6)) : 0)
    o2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(o2);
  return c;
};
function t(e2) {
  var t2 = e2.replace(/-/g, "+").replace(/_/g, "/");
  switch (t2.length % 4) {
    case 0:
      break;
    case 2:
      t2 += "==";
      break;
    case 3:
      t2 += "=";
      break;
    default:
      throw "Illegal base64url string!";
  }
  try {
    return function(e3) {
      return decodeURIComponent(r(e3).replace(/(.)/g, function(e4, r2) {
        var t3 = r2.charCodeAt(0).toString(16).toUpperCase();
        return t3.length < 2 && (t3 = "0" + t3), "%" + t3;
      }));
    }(t2);
  } catch (e3) {
    return r(t2);
  }
}
function n(e2) {
  this.message = e2;
}
function o(e2, r2) {
  if ("string" != typeof e2)
    throw new n("Invalid token specified");
  var o2 = true === (r2 = r2 || {}).header ? 0 : 1;
  try {
    return JSON.parse(t(e2.split(".")[o2]));
  } catch (e3) {
    throw new n("Invalid token specified: " + e3.message);
  }
}
n.prototype = new Error(), n.prototype.name = "InvalidTokenError";
var jwt_decode_esm_default = o;

// node_modules/.pnpm/@lens-protocol+gated-content@0.3.3-alpha.20_@ethersproject+abi@5.7.0_@ethersproject+address@5_74kkcwiss2strjdosabpl2tjlu/node_modules/@lens-protocol/gated-content/dist/environments-3a643094.esm.js
var SupportedChains = /* @__PURE__ */ function(SupportedChains2) {
  SupportedChains2["ETHEREUM"] = "ethereum";
  SupportedChains2["POLYGON"] = "polygon";
  SupportedChains2["MUMBAI"] = "mumbai";
  SupportedChains2["LINEA_GOERLI"] = "lineaGoerli";
  return SupportedChains2;
}({});
var SupportedChainId = /* @__PURE__ */ function(SupportedChainId2) {
  SupportedChainId2[SupportedChainId2["ETHEREUM"] = 1] = "ETHEREUM";
  SupportedChainId2[SupportedChainId2["POLYGON"] = 137] = "POLYGON";
  SupportedChainId2[SupportedChainId2["MUMBAI"] = 80001] = "MUMBAI";
  SupportedChainId2[SupportedChainId2["LINEA_GOERLI"] = 59140] = "LINEA_GOERLI";
  return SupportedChainId2;
}({});
var SUPPORTED_CHAIN_IDS = Object.values(SupportedChainId);
var production = {
  name: "production",
  chainId: 137,
  chainName: SupportedChains.POLYGON,
  accessControlContract: {
    address: "0xE1A4f40b74f6E91159ffBd95489FE74Efe71fD97",
    chainId: SupportedChainId.POLYGON
  },
  patches: {
    accessControlContract: {
      address: "0x98a6C31E43b158198da95Ef1242faCA868424187",
      chainId: SupportedChainId.POLYGON
    }
  }
};
var development = {
  name: "development",
  chainId: 80001,
  chainName: SupportedChains.MUMBAI,
  accessControlContract: {
    address: "0xc4F726a10fDEb0E98e16Fa658b606192d57FC71c",
    chainId: SupportedChainId.MUMBAI
  }
};

// node_modules/.pnpm/@lens-protocol+client@2.0.0-alpha.29_@lens-protocol+metadata@1.1.5_@types+react@18.2.55_ethers@6.10.0_react@18.2.0/node_modules/@lens-protocol/client/dist/environments-cd56fe45.esm.js
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _toPrimitive3(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey3(arg) {
  var key = _toPrimitive3(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey3(descriptor.key), descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _regeneratorRuntime2() {
  _regeneratorRuntime2 = function() {
    return e2;
  };
  var t2, e2 = {}, r2 = Object.prototype, n2 = r2.hasOwnProperty, o2 = Object.defineProperty || function(t3, e3, r3) {
    t3[e3] = r3.value;
  }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag";
  function define(t3, e3, r3) {
    return Object.defineProperty(t3, e3, {
      value: r3,
      enumerable: true,
      configurable: true,
      writable: true
    }), t3[e3];
  }
  try {
    define({}, "");
  } catch (t3) {
    define = function(t4, e3, r3) {
      return t4[e3] = r3;
    };
  }
  function wrap2(t3, e3, r3, n3) {
    var i2 = e3 && e3.prototype instanceof Generator ? e3 : Generator, a2 = Object.create(i2.prototype), c2 = new Context(n3 || []);
    return o2(a2, "_invoke", {
      value: makeInvokeMethod(t3, r3, c2)
    }), a2;
  }
  function tryCatch(t3, e3, r3) {
    try {
      return {
        type: "normal",
        arg: t3.call(e3, r3)
      };
    } catch (t4) {
      return {
        type: "throw",
        arg: t4
      };
    }
  }
  e2.wrap = wrap2;
  var h = "suspendedStart", l = "suspendedYield", f2 = "executing", s = "completed", y = {};
  function Generator() {
  }
  function GeneratorFunction() {
  }
  function GeneratorFunctionPrototype() {
  }
  var p = {};
  define(p, a, function() {
    return this;
  });
  var d = Object.getPrototypeOf, v = d && d(d(values([])));
  v && v !== r2 && n2.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t3) {
    ["next", "throw", "return"].forEach(function(e3) {
      define(t3, e3, function(t4) {
        return this._invoke(e3, t4);
      });
    });
  }
  function AsyncIterator(t3, e3) {
    function invoke(r4, o3, i2, a2) {
      var c2 = tryCatch(t3[r4], t3, o3);
      if ("throw" !== c2.type) {
        var u2 = c2.arg, h2 = u2.value;
        return h2 && "object" == typeof h2 && n2.call(h2, "__await") ? e3.resolve(h2.__await).then(function(t4) {
          invoke("next", t4, i2, a2);
        }, function(t4) {
          invoke("throw", t4, i2, a2);
        }) : e3.resolve(h2).then(function(t4) {
          u2.value = t4, i2(u2);
        }, function(t4) {
          return invoke("throw", t4, i2, a2);
        });
      }
      a2(c2.arg);
    }
    var r3;
    o2(this, "_invoke", {
      value: function(t4, n3) {
        function callInvokeWithMethodAndArg() {
          return new e3(function(e4, r4) {
            invoke(t4, n3, e4, r4);
          });
        }
        return r3 = r3 ? r3.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e3, r3, n3) {
    var o3 = h;
    return function(i2, a2) {
      if (o3 === f2)
        throw new Error("Generator is already running");
      if (o3 === s) {
        if ("throw" === i2)
          throw a2;
        return {
          value: t2,
          done: true
        };
      }
      for (n3.method = i2, n3.arg = a2; ; ) {
        var c2 = n3.delegate;
        if (c2) {
          var u2 = maybeInvokeDelegate(c2, n3);
          if (u2) {
            if (u2 === y)
              continue;
            return u2;
          }
        }
        if ("next" === n3.method)
          n3.sent = n3._sent = n3.arg;
        else if ("throw" === n3.method) {
          if (o3 === h)
            throw o3 = s, n3.arg;
          n3.dispatchException(n3.arg);
        } else
          "return" === n3.method && n3.abrupt("return", n3.arg);
        o3 = f2;
        var p2 = tryCatch(e3, r3, n3);
        if ("normal" === p2.type) {
          if (o3 = n3.done ? s : l, p2.arg === y)
            continue;
          return {
            value: p2.arg,
            done: n3.done
          };
        }
        "throw" === p2.type && (o3 = s, n3.method = "throw", n3.arg = p2.arg);
      }
    };
  }
  function maybeInvokeDelegate(e3, r3) {
    var n3 = r3.method, o3 = e3.iterator[n3];
    if (o3 === t2)
      return r3.delegate = null, "throw" === n3 && e3.iterator.return && (r3.method = "return", r3.arg = t2, maybeInvokeDelegate(e3, r3), "throw" === r3.method) || "return" !== n3 && (r3.method = "throw", r3.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), y;
    var i2 = tryCatch(o3, e3.iterator, r3.arg);
    if ("throw" === i2.type)
      return r3.method = "throw", r3.arg = i2.arg, r3.delegate = null, y;
    var a2 = i2.arg;
    return a2 ? a2.done ? (r3[e3.resultName] = a2.value, r3.next = e3.nextLoc, "return" !== r3.method && (r3.method = "next", r3.arg = t2), r3.delegate = null, y) : a2 : (r3.method = "throw", r3.arg = new TypeError("iterator result is not an object"), r3.delegate = null, y);
  }
  function pushTryEntry(t3) {
    var e3 = {
      tryLoc: t3[0]
    };
    1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
  }
  function resetTryEntry(t3) {
    var e3 = t3.completion || {};
    e3.type = "normal", delete e3.arg, t3.completion = e3;
  }
  function Context(t3) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t3.forEach(pushTryEntry, this), this.reset(true);
  }
  function values(e3) {
    if (e3 || "" === e3) {
      var r3 = e3[a];
      if (r3)
        return r3.call(e3);
      if ("function" == typeof e3.next)
        return e3;
      if (!isNaN(e3.length)) {
        var o3 = -1, i2 = function next() {
          for (; ++o3 < e3.length; )
            if (n2.call(e3, o3))
              return next.value = e3[o3], next.done = false, next;
          return next.value = t2, next.done = true, next;
        };
        return i2.next = i2;
      }
    }
    throw new TypeError(typeof e3 + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o2(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: true
  }), o2(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: true
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e2.isGeneratorFunction = function(t3) {
    var e3 = "function" == typeof t3 && t3.constructor;
    return !!e3 && (e3 === GeneratorFunction || "GeneratorFunction" === (e3.displayName || e3.name));
  }, e2.mark = function(t3) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t3, GeneratorFunctionPrototype) : (t3.__proto__ = GeneratorFunctionPrototype, define(t3, u, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
  }, e2.awrap = function(t3) {
    return {
      __await: t3
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function() {
    return this;
  }), e2.AsyncIterator = AsyncIterator, e2.async = function(t3, r3, n3, o3, i2) {
    void 0 === i2 && (i2 = Promise);
    var a2 = new AsyncIterator(wrap2(t3, r3, n3, o3), i2);
    return e2.isGeneratorFunction(r3) ? a2 : a2.next().then(function(t4) {
      return t4.done ? t4.value : a2.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function() {
    return this;
  }), define(g, "toString", function() {
    return "[object Generator]";
  }), e2.keys = function(t3) {
    var e3 = Object(t3), r3 = [];
    for (var n3 in e3)
      r3.push(n3);
    return r3.reverse(), function next() {
      for (; r3.length; ) {
        var t4 = r3.pop();
        if (t4 in e3)
          return next.value = t4, next.done = false, next;
      }
      return next.done = true, next;
    };
  }, e2.values = values, Context.prototype = {
    constructor: Context,
    reset: function(e3) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t2, this.done = false, this.delegate = null, this.method = "next", this.arg = t2, this.tryEntries.forEach(resetTryEntry), !e3)
        for (var r3 in this)
          "t" === r3.charAt(0) && n2.call(this, r3) && !isNaN(+r3.slice(1)) && (this[r3] = t2);
    },
    stop: function() {
      this.done = true;
      var t3 = this.tryEntries[0].completion;
      if ("throw" === t3.type)
        throw t3.arg;
      return this.rval;
    },
    dispatchException: function(e3) {
      if (this.done)
        throw e3;
      var r3 = this;
      function handle(n3, o4) {
        return a2.type = "throw", a2.arg = e3, r3.next = n3, o4 && (r3.method = "next", r3.arg = t2), !!o4;
      }
      for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
        var i2 = this.tryEntries[o3], a2 = i2.completion;
        if ("root" === i2.tryLoc)
          return handle("end");
        if (i2.tryLoc <= this.prev) {
          var c2 = n2.call(i2, "catchLoc"), u2 = n2.call(i2, "finallyLoc");
          if (c2 && u2) {
            if (this.prev < i2.catchLoc)
              return handle(i2.catchLoc, true);
            if (this.prev < i2.finallyLoc)
              return handle(i2.finallyLoc);
          } else if (c2) {
            if (this.prev < i2.catchLoc)
              return handle(i2.catchLoc, true);
          } else {
            if (!u2)
              throw new Error("try statement without catch or finally");
            if (this.prev < i2.finallyLoc)
              return handle(i2.finallyLoc);
          }
        }
      }
    },
    abrupt: function(t3, e3) {
      for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
        var o3 = this.tryEntries[r3];
        if (o3.tryLoc <= this.prev && n2.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
          var i2 = o3;
          break;
        }
      }
      i2 && ("break" === t3 || "continue" === t3) && i2.tryLoc <= e3 && e3 <= i2.finallyLoc && (i2 = null);
      var a2 = i2 ? i2.completion : {};
      return a2.type = t3, a2.arg = e3, i2 ? (this.method = "next", this.next = i2.finallyLoc, y) : this.complete(a2);
    },
    complete: function(t3, e3) {
      if ("throw" === t3.type)
        throw t3.arg;
      return "break" === t3.type || "continue" === t3.type ? this.next = t3.arg : "return" === t3.type ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : "normal" === t3.type && e3 && (this.next = e3), y;
    },
    finish: function(t3) {
      for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
        var r3 = this.tryEntries[e3];
        if (r3.finallyLoc === t3)
          return this.complete(r3.completion, r3.afterLoc), resetTryEntry(r3), y;
      }
    },
    catch: function(t3) {
      for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
        var r3 = this.tryEntries[e3];
        if (r3.tryLoc === t3) {
          var n3 = r3.completion;
          if ("throw" === n3.type) {
            var o3 = n3.arg;
            resetTryEntry(r3);
          }
          return o3;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function(e3, r3, n3) {
      return this.delegate = {
        iterator: values(e3),
        resultName: r3,
        nextLoc: n3
      }, "next" === this.method && (this.arg = t2), y;
    }
  }, e2;
}
function asyncGeneratorStep2(gen3, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen3[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator2(fn) {
  return function() {
    var self2 = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen3 = fn.apply(self2, args);
      function _next(value) {
        asyncGeneratorStep2(gen3, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep2(gen3, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _assertThisInitialized3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _setPrototypeOf3(o2, p) {
  _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf4(o3, p2) {
    o3.__proto__ = p2;
    return o3;
  };
  return _setPrototypeOf3(o2, p);
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf3(subClass, superClass);
}
function _getPrototypeOf3(o2) {
  _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf4(o3) {
    return o3.__proto__ || Object.getPrototypeOf(o3);
  };
  return _getPrototypeOf3(o2);
}
function _isNativeReflectConstruct3() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _possibleConstructorReturn3(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized3(self2);
}
function _createSuper3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct3();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf3(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf3(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn3(this, result);
  };
}
function _isNativeFunction3(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e2) {
    return typeof fn === "function";
  }
}
function _construct3(Parent, args, Class) {
  if (_isNativeReflectConstruct3()) {
    _construct3 = Reflect.construct.bind();
  } else {
    _construct3 = function _construct4(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf3(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct3.apply(null, arguments);
}
function _wrapNativeSuper3(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper3 = function _wrapNativeSuper4(Class2) {
    if (Class2 === null || !_isNativeFunction3(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct3(Class2, arguments, _getPrototypeOf3(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf3(Wrapper, Class2);
  };
  return _wrapNativeSuper3(Class);
}
function _defineProperty3(obj, key, value) {
  key = _toPropertyKey3(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var NotAuthenticatedError = /* @__PURE__ */ function(_Error) {
  _inherits3(NotAuthenticatedError2, _Error);
  var _super = _createSuper3(NotAuthenticatedError2);
  function NotAuthenticatedError2() {
    var _this;
    _classCallCheck3(this, NotAuthenticatedError2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty3(_assertThisInitialized3(_this), "name", "NotAuthenticatedError");
    _defineProperty3(_assertThisInitialized3(_this), "message", "Not Authenticated");
    return _this;
  }
  return _createClass3(NotAuthenticatedError2);
}(/* @__PURE__ */ _wrapNativeSuper3(Error));
var CredentialsExpiredError = /* @__PURE__ */ function(_Error2) {
  _inherits3(CredentialsExpiredError2, _Error2);
  var _super2 = _createSuper3(CredentialsExpiredError2);
  function CredentialsExpiredError2() {
    var _this2;
    _classCallCheck3(this, CredentialsExpiredError2);
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    _defineProperty3(_assertThisInitialized3(_this2), "name", "CredentialsExpiredError");
    _defineProperty3(_assertThisInitialized3(_this2), "message", "Authentication credentials are expired");
    return _this2;
  }
  return _createClass3(CredentialsExpiredError2);
}(/* @__PURE__ */ _wrapNativeSuper3(Error));
function buildAuthorizationHeader(accessToken) {
  return {
    authorization: "Bearer ".concat(accessToken || "")
  };
}
function requireAuthHeaders(_x, _x2) {
  return _requireAuthHeaders.apply(this, arguments);
}
function _requireAuthHeaders() {
  _requireAuthHeaders = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(authentication, handler) {
    var result, value;
    return _regeneratorRuntime2().wrap(function _callee$(_context) {
      while (1)
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return authentication.getRequestHeader();
          case 2:
            result = _context.sent;
            if (!result.isFailure()) {
              _context.next = 5;
              break;
            }
            return _context.abrupt("return", result);
          case 5:
            _context.next = 7;
            return handler(result.value);
          case 7:
            value = _context.sent;
            return _context.abrupt("return", success(value));
          case 9:
          case "end":
            return _context.stop();
        }
    }, _callee);
  }));
  return _requireAuthHeaders.apply(this, arguments);
}
function ownKeys(e2, r2) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e2);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread2(e2) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys(Object(t2), true).forEach(function(r3) {
      _defineProperty3(e2, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e2;
}
var FetchGraphQLClient = /* @__PURE__ */ function(_GraphQLClient) {
  _inherits3(FetchGraphQLClient2, _GraphQLClient);
  var _super = _createSuper3(FetchGraphQLClient2);
  function FetchGraphQLClient2(context, options) {
    _classCallCheck3(this, FetchGraphQLClient2);
    var url = context.environment.gqlEndpoint;
    var headers = _objectSpread2(_objectSpread2({}, context.origin ? {
      origin: context.origin
    } : {}), context.headers || {});
    return _super.call(this, url, _objectSpread2(_objectSpread2({}, options), {}, {
      fetch,
      headers
    }));
  }
  return _createClass3(FetchGraphQLClient2);
}(GraphQLClient);
function buildPaginatedQueryResult(_x, _x2) {
  return _buildPaginatedQueryResult.apply(this, arguments);
}
function _buildPaginatedQueryResult() {
  _buildPaginatedQueryResult = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(queryFn, variables) {
    var result;
    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
      while (1)
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return queryFn(variables);
          case 2:
            result = _context3.sent;
            _context3.t0 = function next() {
              return _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee() {
                var nextResult;
                return _regeneratorRuntime2().wrap(function _callee$(_context) {
                  while (1)
                    switch (_context.prev = _context.next) {
                      case 0:
                        if (!result.pageInfo.next) {
                          _context.next = 6;
                          break;
                        }
                        _context.next = 3;
                        return buildPaginatedQueryResult(queryFn, _objectSpread2(_objectSpread2({}, variables), {}, {
                          cursor: result.pageInfo.next
                        }));
                      case 3:
                        nextResult = _context.sent;
                        result = nextResult;
                        return _context.abrupt("return", nextResult);
                      case 6:
                        return _context.abrupt("return", null);
                      case 7:
                      case "end":
                        return _context.stop();
                    }
                }, _callee);
              }))();
            };
            _context3.t1 = function prev() {
              return _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2() {
                var prevResult;
                return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                  while (1)
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        if (!result.pageInfo.prev) {
                          _context2.next = 6;
                          break;
                        }
                        _context2.next = 3;
                        return buildPaginatedQueryResult(queryFn, _objectSpread2(_objectSpread2({}, variables), {}, {
                          cursor: result.pageInfo.prev
                        }));
                      case 3:
                        prevResult = _context2.sent;
                        result = prevResult;
                        return _context2.abrupt("return", prevResult);
                      case 6:
                        return _context2.abrupt("return", null);
                      case 7:
                      case "end":
                        return _context2.stop();
                    }
                }, _callee2);
              }))();
            };
            return _context3.abrupt("return", {
              get pageInfo() {
                return result.pageInfo;
              },
              get items() {
                return result.items;
              },
              next: _context3.t0,
              prev: _context3.t1
            });
          case 6:
          case "end":
            return _context3.stop();
        }
    }, _callee3);
  }));
  return _buildPaginatedQueryResult.apply(this, arguments);
}
var AuthChallengeDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "AuthChallenge"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ChallengeRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "challenge"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "AuthChallenge"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AuthChallenge"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AuthChallengeResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "text"
        }
      }]
    }
  }]
};
var AuthVerifyDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "AuthVerify"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "VerifyRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "verify"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var CurrentSessionDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "CurrentSession"
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "currentSession"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ApprovedAuthentication"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ApprovedAuthentication"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ApprovedAuthentication"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "authorizationId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "browser"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "device"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "os"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "origin"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiresAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "updatedAt"
        }
      }]
    }
  }]
};
var ApprovedAuthenticationsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ApprovedAuthentications"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ApprovedAuthenticationRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "approvedAuthentications"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ApprovedAuthentication"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ApprovedAuthentication"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ApprovedAuthentication"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "authorizationId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "browser"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "device"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "os"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "origin"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiresAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "updatedAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var AuthAuthenticateDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "AuthAuthenticate"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "SignedAuthChallenge"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "authenticate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "accessToken"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "refreshToken"
            }
          }]
        }
      }]
    }
  }]
};
var AuthRefreshDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "AuthRefresh"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "RefreshRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "refresh"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "accessToken"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "refreshToken"
            }
          }]
        }
      }]
    }
  }]
};
var WalletAuthenticationToProfileAuthenticationDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "WalletAuthenticationToProfileAuthentication"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "WalletAuthenticationToProfileAuthenticationRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "walletAuthenticationToProfileAuthentication"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "accessToken"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "refreshToken"
            }
          }]
        }
      }]
    }
  }]
};
var RevokeAuthenticationDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "RevokeAuthentication"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "RevokeAuthenticationRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "revokeAuthentication"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var defaultWrapper$j = function defaultWrapper(action, _operationName, _operationType) {
  return action();
};
var AuthChallengeDocumentString = print(AuthChallengeDocument);
var AuthVerifyDocumentString = print(AuthVerifyDocument);
var CurrentSessionDocumentString = print(CurrentSessionDocument);
var ApprovedAuthenticationsDocumentString = print(ApprovedAuthenticationsDocument);
var AuthAuthenticateDocumentString = print(AuthAuthenticateDocument);
var AuthRefreshDocumentString = print(AuthRefreshDocument);
var WalletAuthenticationToProfileAuthenticationDocumentString = print(WalletAuthenticationToProfileAuthenticationDocument);
var RevokeAuthenticationDocumentString = print(RevokeAuthenticationDocument);
function getSdk$j(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$j;
  return {
    AuthChallenge: function AuthChallenge(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AuthChallengeDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AuthChallenge", "query");
    },
    AuthVerify: function AuthVerify(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AuthVerifyDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AuthVerify", "query");
    },
    CurrentSession: function CurrentSession(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(CurrentSessionDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "CurrentSession", "query");
    },
    ApprovedAuthentications: function ApprovedAuthentications(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ApprovedAuthenticationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ApprovedAuthentications", "query");
    },
    AuthAuthenticate: function AuthAuthenticate(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AuthAuthenticateDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AuthAuthenticate", "mutation");
    },
    AuthRefresh: function AuthRefresh(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AuthRefreshDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AuthRefresh", "mutation");
    },
    WalletAuthenticationToProfileAuthentication: function WalletAuthenticationToProfileAuthentication(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(WalletAuthenticationToProfileAuthenticationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "WalletAuthenticationToProfileAuthentication", "mutation");
    },
    RevokeAuthentication: function RevokeAuthentication(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(RevokeAuthenticationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "RevokeAuthentication", "mutation");
    }
  };
}
var TOKEN_EXP_THRESHOLD = DateUtils.secondsToMs(30);
var CLOCK_SKEWED_THRESHOLD = DateUtils.secondsToMs(10);
function isWalletJwtContent(decodedJwt) {
  return "role" in decodedJwt && decodedJwt.role === "wallet_refresh";
}
function isProfileJwtContent(decodedJwt) {
  return "role" in decodedJwt && decodedJwt.role === "profile_refresh";
}
var Credentials = /* @__PURE__ */ function() {
  function Credentials2(accessToken, refreshToken) {
    _classCallCheck3(this, Credentials2);
    this.accessToken = accessToken;
    this.refreshToken = refreshToken;
  }
  _createClass3(Credentials2, [{
    key: "checkClock",
    value: function checkClock() {
      var decodedToken = jwt_decode_esm_default(this.refreshToken);
      invariant(decodedToken.iat, "Issued at date should be provided by JWT token");
      var diff = Math.abs(DateUtils.secondsToMs(decodedToken.iat) - Date.now());
      if (diff > CLOCK_SKEWED_THRESHOLD) {
        console.info("ClockSkewedError: Your system clock is skewed compared to the API clock by: ", diff);
      }
    }
  }, {
    key: "canRefresh",
    value: function canRefresh() {
      var now = Date.now();
      var tokenExpTimestamp = this.getTokenExpTimestamp(this.refreshToken);
      return now < tokenExpTimestamp - TOKEN_EXP_THRESHOLD;
    }
  }, {
    key: "shouldRefresh",
    value: function shouldRefresh() {
      var accessToken = this.accessToken;
      if (!accessToken) {
        return true;
      }
      var now = Date.now();
      var tokenExpTimestamp = this.getTokenExpTimestamp(accessToken);
      return now >= tokenExpTimestamp - TOKEN_EXP_THRESHOLD;
    }
  }, {
    key: "getProfileId",
    value: function getProfileId() {
      var decodedToken = jwt_decode_esm_default(this.refreshToken);
      if (isProfileJwtContent(decodedToken)) {
        return decodedToken.id;
      }
      return null;
    }
  }, {
    key: "getWalletAddress",
    value: function getWalletAddress() {
      var decodedToken = jwt_decode_esm_default(this.refreshToken);
      if (isWalletJwtContent(decodedToken)) {
        return decodedToken.id;
      }
      if (isProfileJwtContent(decodedToken)) {
        return decodedToken.evmAddress;
      }
      never("Invalid JWT format");
    }
  }, {
    key: "getAuthorizationId",
    value: function getAuthorizationId() {
      var decodedToken = jwt_decode_esm_default(this.refreshToken);
      invariant(decodedToken.authorizationId, "Wrong JWT token");
      return decodedToken.authorizationId;
    }
  }, {
    key: "getTokenExpTimestamp",
    value: function getTokenExpTimestamp(token) {
      var decodedToken = jwt_decode_esm_default(token);
      invariant(decodedToken.exp, "Exp date should be provided by JWT token");
      return DateUtils.secondsToMs(decodedToken.exp);
    }
  }]);
  return Credentials2;
}();
var AuthenticationApi = /* @__PURE__ */ function() {
  function AuthenticationApi2(context) {
    _classCallCheck3(this, AuthenticationApi2);
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$j(client);
  }
  _createClass3(AuthenticationApi2, [{
    key: "challenge",
    value: function() {
      var _challenge = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.sdk.AuthChallenge({
                  request
                });
              case 2:
                result = _context.sent;
                return _context.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function challenge(_x) {
        return _challenge.apply(this, arguments);
      }
      return challenge;
    }()
  }, {
    key: "verify",
    value: function() {
      var _verify = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(accessToken) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.sdk.AuthVerify({
                  request: {
                    accessToken
                  }
                });
              case 2:
                result = _context2.sent;
                return _context2.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function verify(_x2) {
        return _verify.apply(this, arguments);
      }
      return verify;
    }()
  }, {
    key: "authenticate",
    value: function() {
      var _authenticate = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(request) {
        var result, _result$data$result, accessToken, refreshToken, credentials;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.sdk.AuthAuthenticate({
                  request
                });
              case 2:
                result = _context3.sent;
                _result$data$result = result.data.result, accessToken = _result$data$result.accessToken, refreshToken = _result$data$result.refreshToken;
                credentials = new Credentials(accessToken, refreshToken);
                credentials.checkClock();
                return _context3.abrupt("return", credentials);
              case 7:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function authenticate(_x3) {
        return _authenticate.apply(this, arguments);
      }
      return authenticate;
    }()
  }, {
    key: "refresh",
    value: function() {
      var _refresh = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(refreshToken) {
        var result, _result$data$result2, newAccessToken, newRefreshToken, credentials;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.sdk.AuthRefresh({
                  request: {
                    refreshToken
                  }
                });
              case 2:
                result = _context4.sent;
                _result$data$result2 = result.data.result, newAccessToken = _result$data$result2.accessToken, newRefreshToken = _result$data$result2.refreshToken;
                credentials = new Credentials(newAccessToken, newRefreshToken);
                credentials.checkClock();
                return _context4.abrupt("return", credentials);
              case 7:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function refresh(_x4) {
        return _refresh.apply(this, arguments);
      }
      return refresh;
    }()
  }, {
    key: "upgrade",
    value: function() {
      var _upgrade = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(request, headers) {
        var result, _result$data$result3, accessToken, refreshToken, credentials;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.sdk.WalletAuthenticationToProfileAuthentication({
                  request
                }, headers);
              case 2:
                result = _context5.sent;
                _result$data$result3 = result.data.result, accessToken = _result$data$result3.accessToken, refreshToken = _result$data$result3.refreshToken;
                credentials = new Credentials(accessToken, refreshToken);
                return _context5.abrupt("return", credentials);
              case 6:
              case "end":
                return _context5.stop();
            }
        }, _callee5, this);
      }));
      function upgrade(_x5, _x6) {
        return _upgrade.apply(this, arguments);
      }
      return upgrade;
    }()
  }, {
    key: "currentSession",
    value: function() {
      var _currentSession = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(headers) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.sdk.CurrentSession({}, headers);
              case 2:
                result = _context6.sent;
                return _context6.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function currentSession(_x7) {
        return _currentSession.apply(this, arguments);
      }
      return currentSession;
    }()
  }, {
    key: "approvedAuthentications",
    value: function() {
      var _approvedAuthentications = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8(request, headers) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
          while (1)
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
                      while (1)
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            _context7.next = 2;
                            return _this.sdk.ApprovedAuthentications({
                              request: currRequest
                            }, headers);
                          case 2:
                            result = _context7.sent;
                            return _context7.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context7.stop();
                        }
                    }, _callee7);
                  }));
                  return function(_x10) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context8.stop();
            }
        }, _callee8);
      }));
      function approvedAuthentications(_x8, _x9) {
        return _approvedAuthentications.apply(this, arguments);
      }
      return approvedAuthentications;
    }()
  }, {
    key: "revoke",
    value: function() {
      var _revoke = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9(request, headers) {
        return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
          while (1)
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.sdk.RevokeAuthentication({
                  request
                }, headers);
              case 2:
              case "end":
                return _context9.stop();
            }
        }, _callee9, this);
      }));
      function revoke(_x11, _x12) {
        return _revoke.apply(this, arguments);
      }
      return revoke;
    }()
  }]);
  return AuthenticationApi2;
}();
var CredentialsStorage = /* @__PURE__ */ function() {
  function CredentialsStorage2(storageProvider, namespace) {
    _classCallCheck3(this, CredentialsStorage2);
    var authStorageSchema = new CredentialsStorageSchema("lens.".concat(namespace, ".credentials"));
    this.refreshTokenStorage = Storage.createForSchema(authStorageSchema, storageProvider);
  }
  _createClass3(CredentialsStorage2, [{
    key: "set",
    value: function() {
      var _set = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(_ref) {
        var accessToken, refreshToken;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                accessToken = _ref.accessToken, refreshToken = _ref.refreshToken;
                this.accessToken = accessToken;
                _context.next = 4;
                return this.refreshTokenStorage.set({
                  refreshToken
                });
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function set(_x) {
        return _set.apply(this, arguments);
      }
      return set;
    }()
  }, {
    key: "get",
    value: function() {
      var _get = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2() {
        var refreshToken, accessToken;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.getRefreshToken();
              case 2:
                refreshToken = _context2.sent;
                if (refreshToken) {
                  _context2.next = 5;
                  break;
                }
                return _context2.abrupt("return", null);
              case 5:
                accessToken = this.accessToken;
                return _context2.abrupt("return", new Credentials(accessToken, refreshToken));
              case 7:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function get() {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "reset",
    value: function() {
      var _reset = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3() {
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                this.accessToken = void 0;
                _context3.next = 3;
                return this.refreshTokenStorage.reset();
              case 3:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function reset() {
        return _reset.apply(this, arguments);
      }
      return reset;
    }()
  }, {
    key: "subscribe",
    value: function subscribe(_) {
      throw new Error("Method not implemented.");
    }
  }, {
    key: "getRefreshToken",
    value: function() {
      var _getRefreshToken = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4() {
        var _result$refreshToken;
        var result;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.refreshTokenStorage.get();
              case 2:
                result = _context4.sent;
                return _context4.abrupt("return", (_result$refreshToken = result === null || result === void 0 ? void 0 : result.refreshToken) !== null && _result$refreshToken !== void 0 ? _result$refreshToken : null);
              case 4:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function getRefreshToken() {
        return _getRefreshToken.apply(this, arguments);
      }
      return getRefreshToken;
    }()
  }]);
  return CredentialsStorage2;
}();
var Authentication = /* @__PURE__ */ function() {
  function Authentication2(context) {
    _classCallCheck3(this, Authentication2);
    this.api = new AuthenticationApi(context);
    this.credentials = new CredentialsStorage(context.storage, context.environment.name);
  }
  _createClass3(Authentication2, [{
    key: "authenticateWith",
    value: function() {
      var _authenticateWith = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(_ref) {
        var refreshToken, credentials;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                refreshToken = _ref.refreshToken;
                credentials = new Credentials(void 0, refreshToken);
                _context.next = 4;
                return this.credentials.set(credentials);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function authenticateWith(_x) {
        return _authenticateWith.apply(this, arguments);
      }
      return authenticateWith;
    }()
  }, {
    key: "generateChallenge",
    value: function() {
      var _generateChallenge = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.api.challenge(request));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function generateChallenge(_x2) {
        return _generateChallenge.apply(this, arguments);
      }
      return generateChallenge;
    }()
  }, {
    key: "authenticate",
    value: function() {
      var _authenticate = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(request) {
        var credentials;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.api.authenticate(request);
              case 2:
                credentials = _context3.sent;
                _context3.next = 5;
                return this.credentials.set(credentials);
              case 5:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function authenticate(_x3) {
        return _authenticate.apply(this, arguments);
      }
      return authenticate;
    }()
  }, {
    key: "upgradeCredentials",
    value: function() {
      var _upgradeCredentials = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", requireAuthHeaders(this, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(headers) {
                    var credentials;
                    return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                      while (1)
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.next = 2;
                            return _this.api.upgrade(request, headers);
                          case 2:
                            credentials = _context4.sent;
                            _context4.next = 5;
                            return _this.credentials.set(credentials);
                          case 5:
                          case "end":
                            return _context4.stop();
                        }
                    }, _callee4);
                  }));
                  return function(_x5) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context5.stop();
            }
        }, _callee5, this);
      }));
      function upgradeCredentials(_x4) {
        return _upgradeCredentials.apply(this, arguments);
      }
      return upgradeCredentials;
    }()
  }, {
    key: "verify",
    value: function() {
      var _verify = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(accessToken) {
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", this.api.verify(accessToken));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function verify(_x6) {
        return _verify.apply(this, arguments);
      }
      return verify;
    }()
  }, {
    key: "isAuthenticated",
    value: function() {
      var _isAuthenticated = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7() {
        var credentials, newCredentials;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.credentials.get();
              case 2:
                credentials = _context7.sent;
                if (credentials) {
                  _context7.next = 5;
                  break;
                }
                return _context7.abrupt("return", false);
              case 5:
                if (credentials.shouldRefresh()) {
                  _context7.next = 7;
                  break;
                }
                return _context7.abrupt("return", true);
              case 7:
                if (!credentials.canRefresh()) {
                  _context7.next = 14;
                  break;
                }
                _context7.next = 10;
                return this.api.refresh(credentials.refreshToken);
              case 10:
                newCredentials = _context7.sent;
                _context7.next = 13;
                return this.credentials.set(newCredentials);
              case 13:
                return _context7.abrupt("return", true);
              case 14:
                return _context7.abrupt("return", false);
              case 15:
              case "end":
                return _context7.stop();
            }
        }, _callee7, this);
      }));
      function isAuthenticated() {
        return _isAuthenticated.apply(this, arguments);
      }
      return isAuthenticated;
    }()
  }, {
    key: "getAccessToken",
    value: function() {
      var _getAccessToken = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8() {
        var credentials, newCredentials;
        return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
          while (1)
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.credentials.get();
              case 2:
                credentials = _context8.sent;
                if (credentials) {
                  _context8.next = 5;
                  break;
                }
                return _context8.abrupt("return", failure(new NotAuthenticatedError()));
              case 5:
                if (!(!credentials.shouldRefresh() && credentials.accessToken)) {
                  _context8.next = 7;
                  break;
                }
                return _context8.abrupt("return", success(credentials.accessToken));
              case 7:
                if (!credentials.canRefresh()) {
                  _context8.next = 16;
                  break;
                }
                _context8.next = 10;
                return this.api.refresh(credentials.refreshToken);
              case 10:
                newCredentials = _context8.sent;
                _context8.next = 13;
                return this.credentials.set(newCredentials);
              case 13:
                if (newCredentials.accessToken) {
                  _context8.next = 15;
                  break;
                }
                return _context8.abrupt("return", failure(new CredentialsExpiredError()));
              case 15:
                return _context8.abrupt("return", success(newCredentials.accessToken));
              case 16:
                return _context8.abrupt("return", failure(new CredentialsExpiredError()));
              case 17:
              case "end":
                return _context8.stop();
            }
        }, _callee8, this);
      }));
      function getAccessToken() {
        return _getAccessToken.apply(this, arguments);
      }
      return getAccessToken;
    }()
  }, {
    key: "getProfileId",
    value: function() {
      var _getProfileId = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9() {
        var result;
        return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
          while (1)
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.getCredentials();
              case 2:
                result = _context9.sent;
                if (!result.isFailure()) {
                  _context9.next = 5;
                  break;
                }
                return _context9.abrupt("return", null);
              case 5:
                return _context9.abrupt("return", result.value.getProfileId());
              case 6:
              case "end":
                return _context9.stop();
            }
        }, _callee9, this);
      }));
      function getProfileId() {
        return _getProfileId.apply(this, arguments);
      }
      return getProfileId;
    }()
  }, {
    key: "getWalletAddress",
    value: function() {
      var _getWalletAddress = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee10() {
        var result;
        return _regeneratorRuntime2().wrap(function _callee10$(_context10) {
          while (1)
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.getCredentials();
              case 2:
                result = _context10.sent;
                if (!result.isFailure()) {
                  _context10.next = 5;
                  break;
                }
                return _context10.abrupt("return", null);
              case 5:
                return _context10.abrupt("return", result.value.getWalletAddress());
              case 6:
              case "end":
                return _context10.stop();
            }
        }, _callee10, this);
      }));
      function getWalletAddress() {
        return _getWalletAddress.apply(this, arguments);
      }
      return getWalletAddress;
    }()
  }, {
    key: "getAuthorizationId",
    value: function() {
      var _getAuthorizationId = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee11() {
        var result;
        return _regeneratorRuntime2().wrap(function _callee11$(_context11) {
          while (1)
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.getCredentials();
              case 2:
                result = _context11.sent;
                if (!result.isFailure()) {
                  _context11.next = 5;
                  break;
                }
                return _context11.abrupt("return", null);
              case 5:
                return _context11.abrupt("return", result.value.getAuthorizationId());
              case 6:
              case "end":
                return _context11.stop();
            }
        }, _callee11, this);
      }));
      function getAuthorizationId() {
        return _getAuthorizationId.apply(this, arguments);
      }
      return getAuthorizationId;
    }()
  }, {
    key: "logout",
    value: function() {
      var _logout = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee12() {
        return _regeneratorRuntime2().wrap(function _callee12$(_context12) {
          while (1)
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.credentials.reset();
              case 2:
              case "end":
                return _context12.stop();
            }
        }, _callee12, this);
      }));
      function logout() {
        return _logout.apply(this, arguments);
      }
      return logout;
    }()
  }, {
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee14() {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee14$(_context14) {
          while (1)
            switch (_context14.prev = _context14.next) {
              case 0:
                return _context14.abrupt("return", requireAuthHeaders(this, /* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee13(headers) {
                    return _regeneratorRuntime2().wrap(function _callee13$(_context13) {
                      while (1)
                        switch (_context13.prev = _context13.next) {
                          case 0:
                            return _context13.abrupt("return", _this2.api.currentSession(headers));
                          case 1:
                          case "end":
                            return _context13.stop();
                        }
                    }, _callee13);
                  }));
                  return function(_x7) {
                    return _ref3.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context14.stop();
            }
        }, _callee14, this);
      }));
      function fetch2() {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "fetchAll",
    value: function() {
      var _fetchAll = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee16() {
        var _this3 = this;
        var request, _args16 = arguments;
        return _regeneratorRuntime2().wrap(function _callee16$(_context16) {
          while (1)
            switch (_context16.prev = _context16.next) {
              case 0:
                request = _args16.length > 0 && _args16[0] !== void 0 ? _args16[0] : {};
                return _context16.abrupt("return", requireAuthHeaders(this, /* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee15(headers) {
                    return _regeneratorRuntime2().wrap(function _callee15$(_context15) {
                      while (1)
                        switch (_context15.prev = _context15.next) {
                          case 0:
                            return _context15.abrupt("return", _this3.api.approvedAuthentications(request, headers));
                          case 1:
                          case "end":
                            return _context15.stop();
                        }
                    }, _callee15);
                  }));
                  return function(_x8) {
                    return _ref4.apply(this, arguments);
                  };
                }()));
              case 2:
              case "end":
                return _context16.stop();
            }
        }, _callee16, this);
      }));
      function fetchAll() {
        return _fetchAll.apply(this, arguments);
      }
      return fetchAll;
    }()
  }, {
    key: "revoke",
    value: function() {
      var _revoke = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee18(request) {
        var _this4 = this;
        return _regeneratorRuntime2().wrap(function _callee18$(_context18) {
          while (1)
            switch (_context18.prev = _context18.next) {
              case 0:
                return _context18.abrupt("return", requireAuthHeaders(this, /* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee17(headers) {
                    return _regeneratorRuntime2().wrap(function _callee17$(_context17) {
                      while (1)
                        switch (_context17.prev = _context17.next) {
                          case 0:
                            _context17.next = 2;
                            return _this4.api.revoke(request, headers);
                          case 2:
                          case "end":
                            return _context17.stop();
                        }
                    }, _callee17);
                  }));
                  return function(_x10) {
                    return _ref5.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context18.stop();
            }
        }, _callee18, this);
      }));
      function revoke(_x9) {
        return _revoke.apply(this, arguments);
      }
      return revoke;
    }()
    // privileged methods
  }, {
    key: "requireAuthentication",
    value: function() {
      var _requireAuthentication = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee19(handler) {
        var result, profileId;
        return _regeneratorRuntime2().wrap(function _callee19$(_context19) {
          while (1)
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.getCredentials();
              case 2:
                result = _context19.sent;
                if (!result.isFailure()) {
                  _context19.next = 5;
                  break;
                }
                return _context19.abrupt("return", result);
              case 5:
                profileId = result.value.getProfileId();
                if (profileId) {
                  _context19.next = 8;
                  break;
                }
                return _context19.abrupt("return", failure(new NotAuthenticatedError()));
              case 8:
                return _context19.abrupt("return", handler(profileId));
              case 9:
              case "end":
                return _context19.stop();
            }
        }, _callee19, this);
      }));
      function requireAuthentication(_x11) {
        return _requireAuthentication.apply(this, arguments);
      }
      return requireAuthentication;
    }()
  }, {
    key: "requireAtLeastWalletAuthentication",
    value: function() {
      var _requireAtLeastWalletAuthentication = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee20(handler) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee20$(_context20) {
          while (1)
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.next = 2;
                return this.getCredentials();
              case 2:
                result = _context20.sent;
                if (!result.isFailure()) {
                  _context20.next = 5;
                  break;
                }
                return _context20.abrupt("return", result);
              case 5:
                return _context20.abrupt("return", handler(result.value.getProfileId()));
              case 6:
              case "end":
                return _context20.stop();
            }
        }, _callee20, this);
      }));
      function requireAtLeastWalletAuthentication(_x12) {
        return _requireAtLeastWalletAuthentication.apply(this, arguments);
      }
      return requireAtLeastWalletAuthentication;
    }()
  }, {
    key: "getRequestHeader",
    value: function() {
      var _getRequestHeader = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee21() {
        var credentials, newCredentials;
        return _regeneratorRuntime2().wrap(function _callee21$(_context21) {
          while (1)
            switch (_context21.prev = _context21.next) {
              case 0:
                _context21.next = 2;
                return this.credentials.get();
              case 2:
                credentials = _context21.sent;
                if (credentials) {
                  _context21.next = 5;
                  break;
                }
                return _context21.abrupt("return", failure(new NotAuthenticatedError()));
              case 5:
                if (credentials.shouldRefresh()) {
                  _context21.next = 7;
                  break;
                }
                return _context21.abrupt("return", success(buildAuthorizationHeader(credentials.accessToken)));
              case 7:
                if (!credentials.canRefresh()) {
                  _context21.next = 14;
                  break;
                }
                _context21.next = 10;
                return this.api.refresh(credentials.refreshToken);
              case 10:
                newCredentials = _context21.sent;
                _context21.next = 13;
                return this.credentials.set(newCredentials);
              case 13:
                return _context21.abrupt("return", success(buildAuthorizationHeader(newCredentials.accessToken)));
              case 14:
                return _context21.abrupt("return", failure(new CredentialsExpiredError()));
              case 15:
              case "end":
                return _context21.stop();
            }
        }, _callee21, this);
      }));
      function getRequestHeader() {
        return _getRequestHeader.apply(this, arguments);
      }
      return getRequestHeader;
    }()
  }, {
    key: "getCredentials",
    value: function() {
      var _getCredentials = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee22() {
        var credentials;
        return _regeneratorRuntime2().wrap(function _callee22$(_context22) {
          while (1)
            switch (_context22.prev = _context22.next) {
              case 0:
                _context22.next = 2;
                return this.credentials.get();
              case 2:
                credentials = _context22.sent;
                if (credentials) {
                  _context22.next = 5;
                  break;
                }
                return _context22.abrupt("return", failure(new NotAuthenticatedError()));
              case 5:
                if (credentials.canRefresh()) {
                  _context22.next = 7;
                  break;
                }
                return _context22.abrupt("return", failure(new CredentialsExpiredError()));
              case 7:
                return _context22.abrupt("return", success(credentials));
              case 8:
              case "end":
                return _context22.stop();
            }
        }, _callee22, this);
      }));
      function getCredentials() {
        return _getCredentials.apply(this, arguments);
      }
      return getCredentials;
    }()
  }]);
  return Authentication2;
}();
function buildRequestFromConfig(config2) {
  var _config$mediaTransfor, _config$mediaTransfor2, _config$mediaTransfor3;
  return {
    publicationImageTransform: (_config$mediaTransfor = config2.mediaTransforms) === null || _config$mediaTransfor === void 0 ? void 0 : _config$mediaTransfor.publication,
    profileCoverTransform: (_config$mediaTransfor2 = config2.mediaTransforms) === null || _config$mediaTransfor2 === void 0 ? void 0 : _config$mediaTransfor2.profileCover,
    profilePictureTransform: (_config$mediaTransfor3 = config2.mediaTransforms) === null || _config$mediaTransfor3 === void 0 ? void 0 : _config$mediaTransfor3.profilePicture
  };
}
var POLL_INTERVAL = 1e3;
var POLL_MAX_ATTEMPTS = 60;
function poll(_x) {
  return _poll.apply(this, arguments);
}
function _poll() {
  _poll = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(_ref) {
    var fn, validate2, onMaxAttempts, _ref$interval, interval, _ref$maxAttempts, maxAttempts, attempts, executePoll;
    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
      while (1)
        switch (_context2.prev = _context2.next) {
          case 0:
            fn = _ref.fn, validate2 = _ref.validate, onMaxAttempts = _ref.onMaxAttempts, _ref$interval = _ref.interval, interval = _ref$interval === void 0 ? POLL_INTERVAL : _ref$interval, _ref$maxAttempts = _ref.maxAttempts, maxAttempts = _ref$maxAttempts === void 0 ? POLL_MAX_ATTEMPTS : _ref$maxAttempts;
            attempts = 0;
            executePoll = /* @__PURE__ */ function() {
              var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(resolve, reject) {
                var _result;
                return _regeneratorRuntime2().wrap(function _callee$(_context) {
                  while (1)
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return fn();
                      case 3:
                        _result = _context.sent;
                        attempts++;
                        if (!validate2(_result)) {
                          _context.next = 9;
                          break;
                        }
                        return _context.abrupt("return", resolve(_result));
                      case 9:
                        if (!(maxAttempts && attempts === maxAttempts)) {
                          _context.next = 13;
                          break;
                        }
                        return _context.abrupt("return", reject(onMaxAttempts()));
                      case 13:
                        setTimeout(executePoll, interval, resolve, reject);
                      case 14:
                        _context.next = 19;
                        break;
                      case 16:
                        _context.prev = 16;
                        _context.t0 = _context["catch"](0);
                        return _context.abrupt("return", reject(_context.t0));
                      case 19:
                      case "end":
                        return _context.stop();
                    }
                }, _callee, null, [[0, 16]]);
              }));
              return function executePoll2(_x2, _x3) {
                return _ref2.apply(this, arguments);
              };
            }();
            return _context2.abrupt("return", new Promise(executePoll));
          case 4:
          case "end":
            return _context2.stop();
        }
    }, _callee2);
  }));
  return _poll.apply(this, arguments);
}
var sdkAuthHeaderWrapper = function sdkAuthHeaderWrapper2(authentication) {
  return /* @__PURE__ */ function() {
    var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(action) {
      var header;
      return _regeneratorRuntime2().wrap(function _callee$(_context) {
        while (1)
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return getHeader(authentication);
            case 2:
              header = _context.sent;
              return _context.abrupt("return", action(header));
            case 4:
            case "end":
              return _context.stop();
          }
      }, _callee);
    }));
    return function(_x) {
      return _ref.apply(this, arguments);
    };
  }();
};
function getHeader(_x2) {
  return _getHeader.apply(this, arguments);
}
function _getHeader() {
  _getHeader = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(authentication) {
    var headerResult;
    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
      while (1)
        switch (_context2.prev = _context2.next) {
          case 0:
            if (authentication) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return", {});
          case 2:
            _context2.next = 4;
            return authentication.getRequestHeader();
          case 4:
            headerResult = _context2.sent;
            if (!headerResult.isFailure()) {
              _context2.next = 7;
              break;
            }
            return _context2.abrupt("return", {});
          case 7:
            return _context2.abrupt("return", headerResult.value);
          case 8:
          case "end":
            return _context2.stop();
        }
    }, _callee2);
  }));
  return _getHeader.apply(this, arguments);
}
var ExplorePublicationsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ExplorePublications"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ExplorePublicationRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationImageTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationOperationsActedArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "PublicationOperationsActedArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationStatsInput"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationStatsInput"
          }
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationStatsCountOpenActionArgs"
          }
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "explorePublications"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Post"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Post"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Quote"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Quote"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Post"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Post"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "App"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "App"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "proof"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationOperations"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationOperations"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isNotInterested"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasBookmarked"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasReported"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canAct"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasActed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "OptimisticStatusResult"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "actedOn"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "OpenActionResult"
            }
          }]
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "hasUpvoted"
        },
        name: {
          kind: "Name",
          value: "hasReacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "hasDownvoted"
        },
        name: {
          kind: "Name",
          value: "hasReacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canComment"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canMirror"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canQuote"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasMirrored"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canDecrypt"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CanDecryptResponse"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "InlineFragment",
        typeCondition: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "KnownCollectOpenActionResult"
          }
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "KnownCollectOpenActionResult"
            }
          }]
        }
      }, {
        kind: "InlineFragment",
        typeCondition: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "UnknownOpenActionResult"
          }
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "UnknownOpenActionResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownCollectOpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownCollectOpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownOpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownOpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "category"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initReturnData"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CanDecryptResponse"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CanDecryptResponse"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "result"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reasons"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "extraDetails"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AudioMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AudioMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaAudio"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MarketplaceMetadata"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MarketplaceMetadata"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "externalURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMarketplaceMetadataAttribute"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "animationUrl"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMarketplaceMetadataAttribute"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMarketplaceMetadataAttribute"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "displayType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "traitType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ImageSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationImageTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataLitEncryption"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataLitEncryption"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptionKey"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "accessCondition"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "RootCondition"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedPaths"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RootCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RootCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AndCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AndCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "OrCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OrCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenIds"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20OwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20OwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "condition"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EoaOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EoaOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "profileId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FollowCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FollowCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "follow"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CollectCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CollectCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publicationId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "thisPublication"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AndCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AndCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AdvancedContractCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AdvancedContractCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "functionName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "abi"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "params"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comparison"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OrCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OrCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaAudio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaAudio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "audio"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableAudioSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "cover"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "duration"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "credits"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "artist"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "genre"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recordLabel"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "lyrics"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableAudioSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableAudioSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableAudio"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Audio"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableAudio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableAudio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Audio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Audio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableImageSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImage"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaVideo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaVideo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "video"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableVideoSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "cover"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "duration"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "altTag"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableVideoSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableVideoSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableVideo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Video"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableVideo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableVideo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Video"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Video"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "altTag"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "VideoMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "VideoMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaVideo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isShortVideo"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ImageMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaImage"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ArticleMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ArticleMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EventMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EventMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "geographic"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "GeoLocation"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "links"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "location"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "GeoLocation"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "GeoLocation"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "latitude"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "longitude"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LinkMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LinkMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sharingLink"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EmbedMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EmbedMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "embed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CheckingInMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CheckingInMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "location"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "geographic"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "GeoLocation"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "TextOnlyMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "TextOnlyMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ThreeDMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ThreeDMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "assets"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ThreeDMetadataV3Asset"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ThreeDMetadataV3Asset"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ThreeDMetadataV3Asset"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "zipPath"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "playerURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "format"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "StoryMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "StoryMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "TransactionMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "TransactionMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MintMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MintMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mintLink"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "SpaceMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "SpaceMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "link"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LiveStreamMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LiveStreamMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "playbackURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "liveURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "checkLiveAPI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyFreeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyFreeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyLimitedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyLimitedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyLimitedTimedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyLimitedTimedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endTimestamp"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyRevertCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyRevertCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyTimedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyTimedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endTimestamp"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyMultirecipientFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyMultirecipientFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipients"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "recipient"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "split"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacySimpleCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacySimpleCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyERC4626FeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyERC4626FeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "vault"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyAaveFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyAaveFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MultirecipientFeeCollectOpenActionSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MultirecipientFeeCollectOpenActionSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipients"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "recipient"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "split"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "SimpleCollectOpenActionSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "SimpleCollectOpenActionSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownOpenActionModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownOpenActionModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectNft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FollowOnlyReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FollowOnlyReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "DegreesOfSeparationReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "DegreesOfSeparationReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentsRestricted"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrorsRestricted"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "degreesOfSeparation"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "bookmarks"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Quote"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Quote"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "FragmentSpread",
        name: {
          kind: "Name",
          value: "QuoteBase"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quoteOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Post"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CommentBase"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "QuoteBase"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "QuoteBase"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Quote"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CommentBase"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Comment"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var ExploreProfilesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ExploreProfiles"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ExploreProfilesRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "exploreProfiles"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Profile"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var defaultWrapper$i = function defaultWrapper2(action, _operationName, _operationType) {
  return action();
};
var ExplorePublicationsDocumentString = print(ExplorePublicationsDocument);
var ExploreProfilesDocumentString = print(ExploreProfilesDocument);
function getSdk$i(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$i;
  return {
    ExplorePublications: function ExplorePublications(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ExplorePublicationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ExplorePublications", "query");
    },
    ExploreProfiles: function ExploreProfiles(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ExploreProfilesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ExploreProfiles", "query");
    }
  };
}
var Explore = /* @__PURE__ */ function() {
  function Explore2(context, authentication) {
    _classCallCheck3(this, Explore2);
    this.context = context;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$i(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Explore2, [{
    key: "publications",
    value: function() {
      var _publications = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.ExplorePublications(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this.context)));
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2);
      }));
      function publications(_x) {
        return _publications.apply(this, arguments);
      }
      return publications;
    }()
  }, {
    key: "profiles",
    value: function() {
      var _profiles = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.ExploreProfiles(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this2.context)));
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4);
      }));
      function profiles(_x3) {
        return _profiles.apply(this, arguments);
      }
      return profiles;
    }()
  }]);
  return Explore2;
}();
var FeedDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Feed" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FeedRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "feed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeedItem" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ReactionEvent" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ReactionEvent" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "reaction" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeedItem" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeedItem" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrors" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Mirror" } }] } }, { kind: "Field", name: { kind: "Name", value: "reactions" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ReactionEvent" } }] } }, { kind: "Field", name: { kind: "Name", value: "comments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Mirror" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrorOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var FeedHighlightsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "FeedHighlights" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FeedHighlightsRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "feedHighlights" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var LatestPaidActionsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "LatestPaidActions" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "latestPaidActions" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowPaidAction" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowPaidAction" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionPaidAction" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionPaidAction" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LatestActed" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LatestActed" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "profile" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedAt" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowPaidAction" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowPaidAction" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "latestActed" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LatestActed" } }] } }, { kind: "Field", name: { kind: "Name", value: "followed" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionPaidAction" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionPaidAction" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "latestActed" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LatestActed" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var defaultWrapper$h = function defaultWrapper3(action, _operationName, _operationType) {
  return action();
};
var FeedDocumentString = print(FeedDocument);
var FeedHighlightsDocumentString = print(FeedHighlightsDocument);
var LatestPaidActionsDocumentString = print(LatestPaidActionsDocument);
function getSdk$h(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$h;
  return { Feed: function Feed2(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FeedDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Feed", "query");
  }, FeedHighlights: function FeedHighlights(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FeedHighlightsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "FeedHighlights", "query");
  }, LatestPaidActions: function LatestPaidActions(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(LatestPaidActionsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "LatestPaidActions", "query");
  } };
}
var Feed = /* @__PURE__ */ function() {
  function Feed2(context, authentication) {
    _classCallCheck3(this, Feed2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$h(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Feed2, [{
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(headers) {
                    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                      while (1)
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                              var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                                var result;
                                return _regeneratorRuntime2().wrap(function _callee$(_context) {
                                  while (1)
                                    switch (_context.prev = _context.next) {
                                      case 0:
                                        _context.next = 2;
                                        return _this.sdk.Feed(_objectSpread2({
                                          request: currRequest
                                        }, buildRequestFromConfig(_this.context)), headers);
                                      case 2:
                                        result = _context.sent;
                                        return _context.abrupt("return", result.data.result);
                                      case 4:
                                      case "end":
                                        return _context.stop();
                                    }
                                }, _callee);
                              }));
                              return function(_x3) {
                                return _ref2.apply(this, arguments);
                              };
                            }(), request));
                          case 1:
                          case "end":
                            return _context2.stop();
                        }
                    }, _callee2);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function fetch2(_x) {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "highlights",
    value: function() {
      var _highlights = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(headers) {
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            return _context5.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                              var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(currRequest) {
                                var result;
                                return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                                  while (1)
                                    switch (_context4.prev = _context4.next) {
                                      case 0:
                                        _context4.next = 2;
                                        return _this2.sdk.FeedHighlights(_objectSpread2({
                                          request: currRequest
                                        }, buildRequestFromConfig(_this2.context)), headers);
                                      case 2:
                                        result = _context4.sent;
                                        return _context4.abrupt("return", result.data.result);
                                      case 4:
                                      case "end":
                                        return _context4.stop();
                                    }
                                }, _callee4);
                              }));
                              return function(_x6) {
                                return _ref4.apply(this, arguments);
                              };
                            }(), request));
                          case 1:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x5) {
                    return _ref3.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function highlights(_x4) {
        return _highlights.apply(this, arguments);
      }
      return highlights;
    }()
  }, {
    key: "latestPaidActions",
    value: function() {
      var _latestPaidActions = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9() {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
          while (1)
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8(headers) {
                    return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
                      while (1)
                        switch (_context8.prev = _context8.next) {
                          case 0:
                            return _context8.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7() {
                              var result;
                              return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
                                while (1)
                                  switch (_context7.prev = _context7.next) {
                                    case 0:
                                      _context7.next = 2;
                                      return _this3.sdk.LatestPaidActions(_objectSpread2({}, buildRequestFromConfig(_this3.context)), headers);
                                    case 2:
                                      result = _context7.sent;
                                      return _context7.abrupt("return", result.data.result);
                                    case 4:
                                    case "end":
                                      return _context7.stop();
                                  }
                              }, _callee7);
                            })), {}));
                          case 1:
                          case "end":
                            return _context8.stop();
                        }
                    }, _callee8);
                  }));
                  return function(_x7) {
                    return _ref5.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context9.stop();
            }
        }, _callee9, this);
      }));
      function latestPaidActions() {
        return _latestPaidActions.apply(this, arguments);
      }
      return latestPaidActions;
    }()
  }]);
  return Feed2;
}();
var HandleToAddressDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "HandleToAddress"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "HandleToAddressRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "handleToAddress"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var defaultWrapper$g = function defaultWrapper4(action, _operationName, _operationType) {
  return action();
};
var HandleToAddressDocumentString = print(HandleToAddressDocument);
function getSdk$g(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$g;
  return {
    HandleToAddress: function HandleToAddress(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(HandleToAddressDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "HandleToAddress", "query");
    }
  };
}
var Handle = /* @__PURE__ */ function() {
  function Handle2(context, authentication) {
    _classCallCheck3(this, Handle2);
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$g(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Handle2, [{
    key: "resolveAddress",
    value: function() {
      var _resolveAddress = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(request) {
        var response;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.sdk.HandleToAddress({
                  request
                });
              case 2:
                response = _context.sent;
                return _context.abrupt("return", response.data.result);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function resolveAddress(_x) {
        return _resolveAddress.apply(this, arguments);
      }
      return resolveAddress;
    }()
  }]);
  return Handle2;
}();
var InvitedProfilesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "InvitedProfiles"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "invitedProfiles"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "InvitedResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "InvitedResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "InvitedResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "profileMinted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "when"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }]
};
var ProfileAlreadyInvitedDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ProfileAlreadyInvited"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "AlreadyInvitedCheckRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "profileAlreadyInvited"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var InviteDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "Invite"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "InviteRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "invite"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var defaultWrapper$f = function defaultWrapper5(action, _operationName, _operationType) {
  return action();
};
var InvitedProfilesDocumentString = print(InvitedProfilesDocument);
var ProfileAlreadyInvitedDocumentString = print(ProfileAlreadyInvitedDocument);
var InviteDocumentString = print(InviteDocument);
function getSdk$f(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$f;
  return {
    InvitedProfiles: function InvitedProfiles(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(InvitedProfilesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "InvitedProfiles", "query");
    },
    ProfileAlreadyInvited: function ProfileAlreadyInvited(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ProfileAlreadyInvitedDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ProfileAlreadyInvited", "query");
    },
    Invite: function Invite(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(InviteDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "Invite", "mutation");
    }
  };
}
var Invites = /* @__PURE__ */ function() {
  function Invites2(context, authentication) {
    _classCallCheck3(this, Invites2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$f(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Invites2, [{
    key: "invitedProfiles",
    value: function() {
      var _invitedProfiles = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2() {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.InvitedProfiles(buildRequestFromConfig(_this.context), headers);
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function invitedProfiles() {
        return _invitedProfiles.apply(this, arguments);
      }
      return invitedProfiles;
    }()
  }, {
    key: "profileAlreadyInvited",
    value: function() {
      var _profileAlreadyInvited = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.sdk.ProfileAlreadyInvited({
                  request
                });
              case 2:
                result = _context3.sent;
                return _context3.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function profileAlreadyInvited(_x2) {
        return _profileAlreadyInvited.apply(this, arguments);
      }
      return profileAlreadyInvited;
    }()
  }, {
    key: "inviteProfile",
    value: function() {
      var _inviteProfile = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(headers) {
                    return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                      while (1)
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.next = 2;
                            return _this2.sdk.Invite({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context4.stop();
                        }
                    }, _callee4);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context5.stop();
            }
        }, _callee5, this);
      }));
      function inviteProfile(_x3) {
        return _inviteProfile.apply(this, arguments);
      }
      return inviteProfile;
    }()
  }]);
  return Invites2;
}();
var CurrenciesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "Currencies"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PaginatedOffsetRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "currencies"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var ApprovedModuleAllowanceAmountDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ApprovedModuleAllowanceAmount"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ApprovedModuleAllowanceAmountRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "approvedModuleAllowanceAmount"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ApprovedAllowanceAmountResult"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ApprovedAllowanceAmountResult"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ApprovedAllowanceAmountResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ApprovedAllowanceAmountResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleContract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "allowance"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }]
};
var GenerateModuleCurrencyApprovalDataDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "GenerateModuleCurrencyApprovalData"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "GenerateModuleCurrencyApprovalDataRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "generateModuleCurrencyApprovalData"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "GenerateModuleCurrencyApprovalResult"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "GenerateModuleCurrencyApprovalResult"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "GenerateModuleCurrencyApprovalResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "GenerateModuleCurrencyApprovalResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "to"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "from"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "data"
        }
      }]
    }
  }]
};
var SupportedFollowModulesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "SupportedFollowModules"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "SupportedModulesRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "supportedFollowModules"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "KnownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "KnownSupportedModule"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "UnknownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "UnknownSupportedModule"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ModuleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ModuleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "redeemInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "returnDataInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var SupportedReferenceModulesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "SupportedReferenceModules"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "SupportedModulesRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "supportedReferenceModules"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "KnownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "KnownSupportedModule"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "UnknownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "UnknownSupportedModule"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ModuleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ModuleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "redeemInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "returnDataInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var SupportedOpenActionModulesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "SupportedOpenActionModules"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "SupportedModulesRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "supportedOpenActionModules"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "KnownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "KnownSupportedModule"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "UnknownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "UnknownSupportedModule"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ModuleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ModuleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "redeemInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "returnDataInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var SupportedOpenActionCollectModulesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "SupportedOpenActionCollectModules"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "SupportedModulesRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "supportedOpenActionCollectModules"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "KnownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "KnownSupportedModule"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "UnknownSupportedModule"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "UnknownSupportedModule"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ModuleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ModuleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "redeemInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "returnDataInput"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleInfo"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownSupportedModule"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownSupportedModule"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var ModuleMetadataDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ModuleMetadata"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ModuleMetadataRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "moduleMetadata"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ModuleMetadataResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ModuleMetadataResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "GetModuleMetadataResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "authors"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "description"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "initializeCalldataABI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "initializeResultDataABI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "name"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "processCalldataABI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "title"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "moduleType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }]
};
var defaultWrapper$e = function defaultWrapper6(action, _operationName, _operationType) {
  return action();
};
var CurrenciesDocumentString = print(CurrenciesDocument);
var ApprovedModuleAllowanceAmountDocumentString = print(ApprovedModuleAllowanceAmountDocument);
var GenerateModuleCurrencyApprovalDataDocumentString = print(GenerateModuleCurrencyApprovalDataDocument);
var SupportedFollowModulesDocumentString = print(SupportedFollowModulesDocument);
var SupportedReferenceModulesDocumentString = print(SupportedReferenceModulesDocument);
var SupportedOpenActionModulesDocumentString = print(SupportedOpenActionModulesDocument);
var SupportedOpenActionCollectModulesDocumentString = print(SupportedOpenActionCollectModulesDocument);
var ModuleMetadataDocumentString = print(ModuleMetadataDocument);
function getSdk$e(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$e;
  return {
    Currencies: function Currencies(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(CurrenciesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "Currencies", "query");
    },
    ApprovedModuleAllowanceAmount: function ApprovedModuleAllowanceAmount(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ApprovedModuleAllowanceAmountDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ApprovedModuleAllowanceAmount", "query");
    },
    GenerateModuleCurrencyApprovalData: function GenerateModuleCurrencyApprovalData(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(GenerateModuleCurrencyApprovalDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "GenerateModuleCurrencyApprovalData", "query");
    },
    SupportedFollowModules: function SupportedFollowModules(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(SupportedFollowModulesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "SupportedFollowModules", "query");
    },
    SupportedReferenceModules: function SupportedReferenceModules(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(SupportedReferenceModulesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "SupportedReferenceModules", "query");
    },
    SupportedOpenActionModules: function SupportedOpenActionModules(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(SupportedOpenActionModulesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "SupportedOpenActionModules", "query");
    },
    SupportedOpenActionCollectModules: function SupportedOpenActionCollectModules(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(SupportedOpenActionCollectModulesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "SupportedOpenActionCollectModules", "query");
    },
    ModuleMetadata: function ModuleMetadata(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ModuleMetadataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ModuleMetadata", "query");
    }
  };
}
var Modules = /* @__PURE__ */ function() {
  function Modules2(context, authentication) {
    _classCallCheck3(this, Modules2);
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$e(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Modules2, [{
    key: "fetchCurrencies",
    value: function() {
      var _fetchCurrencies = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2() {
        var _this = this;
        var request, _args2 = arguments;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                request = _args2.length > 0 && _args2[0] !== void 0 ? _args2[0] : {};
                return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.Currencies({
                              request: currRequest
                            });
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context2.stop();
            }
        }, _callee2);
      }));
      function fetchCurrencies() {
        return _fetchCurrencies.apply(this, arguments);
      }
      return fetchCurrencies;
    }()
  }, {
    key: "approvedAllowanceAmount",
    value: function() {
      var _approvedAllowanceAmount = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.ApprovedModuleAllowanceAmount({
                              request
                            }, headers);
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x3) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function approvedAllowanceAmount(_x2) {
        return _approvedAllowanceAmount.apply(this, arguments);
      }
      return approvedAllowanceAmount;
    }()
  }, {
    key: "generateCurrencyApprovalData",
    value: function() {
      var _generateCurrencyApprovalData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.next = 2;
                            return _this3.sdk.GenerateModuleCurrencyApprovalData({
                              request
                            }, headers);
                          case 2:
                            result = _context5.sent;
                            return _context5.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x5) {
                    return _ref3.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function generateCurrencyApprovalData(_x4) {
        return _generateCurrencyApprovalData.apply(this, arguments);
      }
      return generateCurrencyApprovalData;
    }()
  }, {
    key: "supportedFollowModules",
    value: function() {
      var _supportedFollowModules = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8() {
        var _this4 = this;
        var request, _args8 = arguments;
        return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
          while (1)
            switch (_context8.prev = _context8.next) {
              case 0:
                request = _args8.length > 0 && _args8[0] !== void 0 ? _args8[0] : {};
                return _context8.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
                      while (1)
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            _context7.next = 2;
                            return _this4.sdk.SupportedFollowModules({
                              request: currRequest
                            });
                          case 2:
                            result = _context7.sent;
                            return _context7.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context7.stop();
                        }
                    }, _callee7);
                  }));
                  return function(_x6) {
                    return _ref4.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context8.stop();
            }
        }, _callee8);
      }));
      function supportedFollowModules() {
        return _supportedFollowModules.apply(this, arguments);
      }
      return supportedFollowModules;
    }()
  }, {
    key: "supportedReferenceModules",
    value: function() {
      var _supportedReferenceModules = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee10() {
        var _this5 = this;
        var request, _args10 = arguments;
        return _regeneratorRuntime2().wrap(function _callee10$(_context10) {
          while (1)
            switch (_context10.prev = _context10.next) {
              case 0:
                request = _args10.length > 0 && _args10[0] !== void 0 ? _args10[0] : {};
                return _context10.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
                      while (1)
                        switch (_context9.prev = _context9.next) {
                          case 0:
                            _context9.next = 2;
                            return _this5.sdk.SupportedReferenceModules({
                              request: currRequest
                            });
                          case 2:
                            result = _context9.sent;
                            return _context9.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context9.stop();
                        }
                    }, _callee9);
                  }));
                  return function(_x7) {
                    return _ref5.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context10.stop();
            }
        }, _callee10);
      }));
      function supportedReferenceModules() {
        return _supportedReferenceModules.apply(this, arguments);
      }
      return supportedReferenceModules;
    }()
  }, {
    key: "supportedOpenActionModules",
    value: function() {
      var _supportedOpenActionModules = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee12() {
        var _this6 = this;
        var request, _args12 = arguments;
        return _regeneratorRuntime2().wrap(function _callee12$(_context12) {
          while (1)
            switch (_context12.prev = _context12.next) {
              case 0:
                request = _args12.length > 0 && _args12[0] !== void 0 ? _args12[0] : {};
                return _context12.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref6 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee11(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee11$(_context11) {
                      while (1)
                        switch (_context11.prev = _context11.next) {
                          case 0:
                            _context11.next = 2;
                            return _this6.sdk.SupportedOpenActionModules({
                              request: currRequest
                            });
                          case 2:
                            result = _context11.sent;
                            return _context11.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context11.stop();
                        }
                    }, _callee11);
                  }));
                  return function(_x8) {
                    return _ref6.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context12.stop();
            }
        }, _callee12);
      }));
      function supportedOpenActionModules() {
        return _supportedOpenActionModules.apply(this, arguments);
      }
      return supportedOpenActionModules;
    }()
  }, {
    key: "supportedOpenActionCollectModules",
    value: function() {
      var _supportedOpenActionCollectModules = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee14() {
        var _this7 = this;
        var request, _args14 = arguments;
        return _regeneratorRuntime2().wrap(function _callee14$(_context14) {
          while (1)
            switch (_context14.prev = _context14.next) {
              case 0:
                request = _args14.length > 0 && _args14[0] !== void 0 ? _args14[0] : {};
                return _context14.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref7 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee13(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee13$(_context13) {
                      while (1)
                        switch (_context13.prev = _context13.next) {
                          case 0:
                            _context13.next = 2;
                            return _this7.sdk.SupportedOpenActionCollectModules({
                              request: currRequest
                            });
                          case 2:
                            result = _context13.sent;
                            return _context13.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context13.stop();
                        }
                    }, _callee13);
                  }));
                  return function(_x9) {
                    return _ref7.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context14.stop();
            }
        }, _callee14);
      }));
      function supportedOpenActionCollectModules() {
        return _supportedOpenActionCollectModules.apply(this, arguments);
      }
      return supportedOpenActionCollectModules;
    }()
  }, {
    key: "fetchMetadata",
    value: function() {
      var _fetchMetadata = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee15(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee15$(_context15) {
          while (1)
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.sdk.ModuleMetadata({
                  request
                });
              case 2:
                result = _context15.sent;
                return _context15.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context15.stop();
            }
        }, _callee15, this);
      }));
      function fetchMetadata(_x10) {
        return _fetchMetadata.apply(this, arguments);
      }
      return fetchMetadata;
    }()
  }]);
  return Modules2;
}();
var MomokaSubmittersDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "MomokaSubmitters"
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "momokaSubmitters"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaSubmitterResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaSubmitterResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaSubmitterResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "totalTransactions"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var MomokaSummaryDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "MomokaSummary"
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "momokaSummary"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "totalTransactions"
            }
          }]
        }
      }]
    }
  }]
};
var MomokaTransactionDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "MomokaTransaction"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "MomokaTransactionRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "momokaTransaction"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaPostTransaction"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaPostTransaction"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaCommentTransaction"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaCommentTransaction"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaMirrorTransaction"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaMirrorTransaction"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaQuoteTransaction"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaQuoteTransaction"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaVerificationStatusSuccess"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaVerificationStatusSuccess"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaVerificationStatusFailure"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaVerificationStatusFailure"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "status"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaPostTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaPostTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaCommentTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaCommentTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaMirrorTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaMirrorTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrorOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaQuoteTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaQuoteTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quoteOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "App"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "App"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }]
    }
  }]
};
var MomokaTransactionsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "momokaTransactions"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "MomokaTransactionsRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "momokaTransactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "MomokaPostTransaction"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "MomokaPostTransaction"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "MomokaCommentTransaction"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "MomokaCommentTransaction"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "MomokaMirrorTransaction"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "MomokaMirrorTransaction"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "MomokaQuoteTransaction"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "MomokaQuoteTransaction"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaVerificationStatusSuccess"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaVerificationStatusSuccess"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaVerificationStatusFailure"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaVerificationStatusFailure"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "status"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaPostTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaPostTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaCommentTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaCommentTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaMirrorTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaMirrorTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrorOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaQuoteTransaction"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaQuoteTransaction"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "transactionId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "submitter"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "app"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verificationStatus"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusSuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusSuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MomokaVerificationStatusFailure"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MomokaVerificationStatusFailure"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publication"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quoteOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "id"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "App"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "App"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var defaultWrapper$d = function defaultWrapper7(action, _operationName, _operationType) {
  return action();
};
var MomokaSubmittersDocumentString = print(MomokaSubmittersDocument);
var MomokaSummaryDocumentString = print(MomokaSummaryDocument);
var MomokaTransactionDocumentString = print(MomokaTransactionDocument);
var MomokaTransactionsDocumentString = print(MomokaTransactionsDocument);
function getSdk$d(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$d;
  return {
    MomokaSubmitters: function MomokaSubmitters(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(MomokaSubmittersDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "MomokaSubmitters", "query");
    },
    MomokaSummary: function MomokaSummary(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(MomokaSummaryDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "MomokaSummary", "query");
    },
    MomokaTransaction: function MomokaTransaction(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(MomokaTransactionDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "MomokaTransaction", "query");
    },
    momokaTransactions: function momokaTransactions(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(MomokaTransactionsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "momokaTransactions", "query");
    }
  };
}
var Momoka = /* @__PURE__ */ function() {
  function Momoka2(context, authentication) {
    _classCallCheck3(this, Momoka2);
    this.context = context;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$d(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Momoka2, [{
    key: "submitters",
    value: function() {
      var _submitters = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2() {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.MomokaSubmitters(currRequest);
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x) {
                    return _ref.apply(this, arguments);
                  };
                }(), {}));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2);
      }));
      function submitters() {
        return _submitters.apply(this, arguments);
      }
      return submitters;
    }()
  }, {
    key: "summary",
    value: function() {
      var _summary = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3() {
        var result;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.sdk.MomokaSummary(void 0);
              case 2:
                result = _context3.sent;
                return _context3.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function summary() {
        return _summary.apply(this, arguments);
      }
      return summary;
    }()
  }, {
    key: "transaction",
    value: function() {
      var _transaction = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.sdk.MomokaTransaction({
                  request
                });
              case 2:
                result = _context4.sent;
                return _context4.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function transaction(_x2) {
        return _transaction.apply(this, arguments);
      }
      return transaction;
    }()
  }, {
    key: "transactions",
    value: function() {
      var _transactions = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6() {
        var _this2 = this;
        var request, _args6 = arguments;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                request = _args6.length > 0 && _args6[0] !== void 0 ? _args6[0] : {};
                return _context6.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.next = 2;
                            return _this2.sdk.momokaTransactions(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this2.context)));
                          case 2:
                            result = _context5.sent;
                            return _context5.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x3) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context6.stop();
            }
        }, _callee6);
      }));
      function transactions() {
        return _transactions.apply(this, arguments);
      }
      return transactions;
    }()
  }]);
  return Momoka2;
}();
var NftsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "Nfts"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftsRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "nfts"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Nft"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Owner"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Owner"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftCollection"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftCollection"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "baseUri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftMetadata"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftMetadata"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "raw"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Image"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "optimized"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Image"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Nft"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Nft"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "owner"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Owner"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NftCollection"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NftMetadata"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var NftGalleriesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "NftGalleries"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftGalleriesRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "nftGalleries"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftGallery"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Owner"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Owner"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftCollection"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftCollection"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "baseUri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftMetadata"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftMetadata"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "raw"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Image"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "optimized"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Image"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Nft"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Nft"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "owner"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Owner"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NftCollection"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NftMetadata"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftGallery"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftGallery"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "updatedAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "items"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Nft"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var NftCollectionOwnersDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "NftCollectionOwners"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftCollectionOwnersRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "nftCollectionOwners"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Profile"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }]
};
var NftCollectionsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "NftCollections"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftCollectionsRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "nftCollections"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftCollection"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftCollection"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftCollection"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "baseUri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var MutualNftCollectionsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "MutualNftCollections"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "MutualNftCollectionsRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "mutualNftCollections"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftCollection"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftCollection"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftCollection"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "baseUri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var PopularNftCollectionsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "PopularNftCollections"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PopularNftCollectionsRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "popularNftCollections"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftCollectionWithOwners"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftCollection"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftCollection"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "baseUri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftCollectionWithOwners"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftCollectionWithOwners"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NftCollection"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "totalOwners"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var NftOwnershipChallengeDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "NftOwnershipChallenge"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftOwnershipChallengeRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "nftOwnershipChallenge"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NftOwnershipChallengeResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftOwnershipChallengeResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftOwnershipChallengeResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "success"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "info"
        }
      }]
    }
  }]
};
var CreateNftGalleryDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "CreateNFTGallery"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftGalleryCreateRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "createNftGallery"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var UpdateNftGalleryInfoDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "UpdateNFTGalleryInfo"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftGalleryUpdateInfoRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "updateNftGalleryInfo"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var UpdateNftGalleryOrderDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "UpdateNFTGalleryOrder"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftGalleryUpdateItemOrderRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "updateNftGalleryOrder"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var UpdateNftGalleryItemsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "UpdateNFTGalleryItems"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftGalleryUpdateItemsRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "updateNftGalleryItems"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var DeleteNftGalleryDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "DeleteNFTGallery"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "NftGalleryDeleteRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "deleteNftGallery"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var defaultWrapper$c = function defaultWrapper8(action, _operationName, _operationType) {
  return action();
};
var NftsDocumentString = print(NftsDocument);
var NftGalleriesDocumentString = print(NftGalleriesDocument);
var NftCollectionOwnersDocumentString = print(NftCollectionOwnersDocument);
var NftCollectionsDocumentString = print(NftCollectionsDocument);
var MutualNftCollectionsDocumentString = print(MutualNftCollectionsDocument);
var PopularNftCollectionsDocumentString = print(PopularNftCollectionsDocument);
var NftOwnershipChallengeDocumentString = print(NftOwnershipChallengeDocument);
var CreateNftGalleryDocumentString = print(CreateNftGalleryDocument);
var UpdateNftGalleryInfoDocumentString = print(UpdateNftGalleryInfoDocument);
var UpdateNftGalleryOrderDocumentString = print(UpdateNftGalleryOrderDocument);
var UpdateNftGalleryItemsDocumentString = print(UpdateNftGalleryItemsDocument);
var DeleteNftGalleryDocumentString = print(DeleteNftGalleryDocument);
function getSdk$c(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$c;
  return {
    Nfts: function Nfts2(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(NftsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "Nfts", "query");
    },
    NftGalleries: function NftGalleries(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(NftGalleriesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "NftGalleries", "query");
    },
    NftCollectionOwners: function NftCollectionOwners(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(NftCollectionOwnersDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "NftCollectionOwners", "query");
    },
    NftCollections: function NftCollections(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(NftCollectionsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "NftCollections", "query");
    },
    MutualNftCollections: function MutualNftCollections(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(MutualNftCollectionsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "MutualNftCollections", "query");
    },
    PopularNftCollections: function PopularNftCollections(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(PopularNftCollectionsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "PopularNftCollections", "query");
    },
    NftOwnershipChallenge: function NftOwnershipChallenge(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(NftOwnershipChallengeDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "NftOwnershipChallenge", "mutation");
    },
    CreateNFTGallery: function CreateNFTGallery(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(CreateNftGalleryDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "CreateNFTGallery", "mutation");
    },
    UpdateNFTGalleryInfo: function UpdateNFTGalleryInfo(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(UpdateNftGalleryInfoDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "UpdateNFTGalleryInfo", "mutation");
    },
    UpdateNFTGalleryOrder: function UpdateNFTGalleryOrder(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(UpdateNftGalleryOrderDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "UpdateNFTGalleryOrder", "mutation");
    },
    UpdateNFTGalleryItems: function UpdateNFTGalleryItems(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(UpdateNftGalleryItemsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "UpdateNFTGalleryItems", "mutation");
    },
    DeleteNFTGallery: function DeleteNFTGallery(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(DeleteNftGalleryDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "DeleteNFTGallery", "mutation");
    }
  };
}
var Nfts = /* @__PURE__ */ function() {
  function Nfts2(context, authentication) {
    _classCallCheck3(this, Nfts2);
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$c(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Nfts2, [{
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3() {
        var _this = this;
        var request, buildRequest, isAuthenticated, _args3 = arguments;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                request = _args3.length > 0 && _args3[0] !== void 0 ? _args3[0] : {};
                buildRequest = /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee() {
                    var profileId, walletAddress;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.authentication.getProfileId();
                          case 2:
                            profileId = _context.sent;
                            if (!profileId) {
                              _context.next = 5;
                              break;
                            }
                            return _context.abrupt("return", {
                              where: {
                                forProfileId: profileId
                              }
                            });
                          case 5:
                            _context.next = 7;
                            return _this.authentication.getWalletAddress();
                          case 7:
                            walletAddress = _context.sent;
                            return _context.abrupt("return", {
                              where: {
                                forAddress: walletAddress
                              }
                            });
                          case 9:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function buildRequest2() {
                    return _ref.apply(this, arguments);
                  };
                }();
                _context3.next = 4;
                return this.authentication.isAuthenticated();
              case 4:
                isAuthenticated = _context3.sent;
                if (!(!isAuthenticated && Object.keys(request).length === 0)) {
                  _context3.next = 7;
                  break;
                }
                throw new NotAuthenticatedError();
              case 7:
                if (!(Object.keys(request).length === 0)) {
                  _context3.next = 11;
                  break;
                }
                _context3.next = 10;
                return buildRequest();
              case 10:
                request = _context3.sent;
              case 11:
                return _context3.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                      while (1)
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.next = 2;
                            return _this.sdk.Nfts({
                              request: currRequest
                            });
                          case 2:
                            result = _context2.sent;
                            return _context2.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context2.stop();
                        }
                    }, _callee2);
                  }));
                  return function(_x) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 12:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function fetch2() {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "collections",
    value: function() {
      var _collections = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5() {
        var _this2 = this;
        var request, _args5 = arguments;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                request = _args5.length > 0 && _args5[0] !== void 0 ? _args5[0] : {};
                return _context5.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                      while (1)
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.next = 2;
                            return _this2.sdk.NftCollections({
                              request: currRequest
                            });
                          case 2:
                            result = _context4.sent;
                            return _context4.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context4.stop();
                        }
                    }, _callee4);
                  }));
                  return function(_x2) {
                    return _ref3.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context5.stop();
            }
        }, _callee5);
      }));
      function collections() {
        return _collections.apply(this, arguments);
      }
      return collections;
    }()
  }, {
    key: "mutualCollections",
    value: function() {
      var _mutualCollections = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
                      while (1)
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            _context6.next = 2;
                            return _this3.sdk.MutualNftCollections({
                              request: currRequest
                            });
                          case 2:
                            result = _context6.sent;
                            return _context6.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context6.stop();
                        }
                    }, _callee6);
                  }));
                  return function(_x4) {
                    return _ref4.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context7.stop();
            }
        }, _callee7);
      }));
      function mutualCollections(_x3) {
        return _mutualCollections.apply(this, arguments);
      }
      return mutualCollections;
    }()
  }, {
    key: "popularCollections",
    value: function() {
      var _popularCollections = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9() {
        var _this4 = this;
        var request, _args9 = arguments;
        return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
          while (1)
            switch (_context9.prev = _context9.next) {
              case 0:
                request = _args9.length > 0 && _args9[0] !== void 0 ? _args9[0] : {};
                return _context9.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
                      while (1)
                        switch (_context8.prev = _context8.next) {
                          case 0:
                            _context8.next = 2;
                            return _this4.sdk.PopularNftCollections({
                              request: currRequest
                            });
                          case 2:
                            result = _context8.sent;
                            return _context8.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context8.stop();
                        }
                    }, _callee8);
                  }));
                  return function(_x5) {
                    return _ref5.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context9.stop();
            }
        }, _callee9);
      }));
      function popularCollections() {
        return _popularCollections.apply(this, arguments);
      }
      return popularCollections;
    }()
  }, {
    key: "collectionOwners",
    value: function() {
      var _collectionOwners = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee11(request) {
        var _this5 = this;
        return _regeneratorRuntime2().wrap(function _callee11$(_context11) {
          while (1)
            switch (_context11.prev = _context11.next) {
              case 0:
                return _context11.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref6 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee10(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee10$(_context10) {
                      while (1)
                        switch (_context10.prev = _context10.next) {
                          case 0:
                            _context10.next = 2;
                            return _this5.sdk.NftCollectionOwners({
                              request: currRequest
                            });
                          case 2:
                            result = _context10.sent;
                            return _context10.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context10.stop();
                        }
                    }, _callee10);
                  }));
                  return function(_x7) {
                    return _ref6.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context11.stop();
            }
        }, _callee11);
      }));
      function collectionOwners(_x6) {
        return _collectionOwners.apply(this, arguments);
      }
      return collectionOwners;
    }()
  }, {
    key: "ownershipChallenge",
    value: function() {
      var _ownershipChallenge = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee13(request) {
        var _this6 = this;
        return _regeneratorRuntime2().wrap(function _callee13$(_context13) {
          while (1)
            switch (_context13.prev = _context13.next) {
              case 0:
                return _context13.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref7 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee12(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee12$(_context12) {
                      while (1)
                        switch (_context12.prev = _context12.next) {
                          case 0:
                            _context12.next = 2;
                            return _this6.sdk.NftOwnershipChallenge({
                              request
                            }, headers);
                          case 2:
                            result = _context12.sent;
                            return _context12.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context12.stop();
                        }
                    }, _callee12);
                  }));
                  return function(_x9) {
                    return _ref7.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context13.stop();
            }
        }, _callee13, this);
      }));
      function ownershipChallenge(_x8) {
        return _ownershipChallenge.apply(this, arguments);
      }
      return ownershipChallenge;
    }()
  }, {
    key: "fetchGalleries",
    value: function() {
      var _fetchGalleries = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee15(request) {
        var _this7 = this;
        return _regeneratorRuntime2().wrap(function _callee15$(_context15) {
          while (1)
            switch (_context15.prev = _context15.next) {
              case 0:
                return _context15.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref8 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee14(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee14$(_context14) {
                      while (1)
                        switch (_context14.prev = _context14.next) {
                          case 0:
                            _context14.next = 2;
                            return _this7.sdk.NftGalleries({
                              request: currRequest
                            });
                          case 2:
                            result = _context14.sent;
                            return _context14.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context14.stop();
                        }
                    }, _callee14);
                  }));
                  return function(_x11) {
                    return _ref8.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context15.stop();
            }
        }, _callee15);
      }));
      function fetchGalleries(_x10) {
        return _fetchGalleries.apply(this, arguments);
      }
      return fetchGalleries;
    }()
  }, {
    key: "createGallery",
    value: function() {
      var _createGallery = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee17(request) {
        var _this8 = this;
        return _regeneratorRuntime2().wrap(function _callee17$(_context17) {
          while (1)
            switch (_context17.prev = _context17.next) {
              case 0:
                return _context17.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref9 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee16(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee16$(_context16) {
                      while (1)
                        switch (_context16.prev = _context16.next) {
                          case 0:
                            _context16.next = 2;
                            return _this8.sdk.CreateNFTGallery({
                              request
                            }, headers);
                          case 2:
                            result = _context16.sent;
                            return _context16.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context16.stop();
                        }
                    }, _callee16);
                  }));
                  return function(_x13) {
                    return _ref9.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context17.stop();
            }
        }, _callee17, this);
      }));
      function createGallery(_x12) {
        return _createGallery.apply(this, arguments);
      }
      return createGallery;
    }()
  }, {
    key: "updateGalleryInfo",
    value: function() {
      var _updateGalleryInfo = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee19(request) {
        var _this9 = this;
        return _regeneratorRuntime2().wrap(function _callee19$(_context19) {
          while (1)
            switch (_context19.prev = _context19.next) {
              case 0:
                return _context19.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref10 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee18(headers) {
                    return _regeneratorRuntime2().wrap(function _callee18$(_context18) {
                      while (1)
                        switch (_context18.prev = _context18.next) {
                          case 0:
                            _context18.next = 2;
                            return _this9.sdk.UpdateNFTGalleryInfo({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context18.stop();
                        }
                    }, _callee18);
                  }));
                  return function(_x15) {
                    return _ref10.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context19.stop();
            }
        }, _callee19, this);
      }));
      function updateGalleryInfo(_x14) {
        return _updateGalleryInfo.apply(this, arguments);
      }
      return updateGalleryInfo;
    }()
  }, {
    key: "updateGalleryItems",
    value: function() {
      var _updateGalleryItems = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee21(request) {
        var _this10 = this;
        return _regeneratorRuntime2().wrap(function _callee21$(_context21) {
          while (1)
            switch (_context21.prev = _context21.next) {
              case 0:
                return _context21.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref11 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee20(headers) {
                    return _regeneratorRuntime2().wrap(function _callee20$(_context20) {
                      while (1)
                        switch (_context20.prev = _context20.next) {
                          case 0:
                            _context20.next = 2;
                            return _this10.sdk.UpdateNFTGalleryItems({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context20.stop();
                        }
                    }, _callee20);
                  }));
                  return function(_x17) {
                    return _ref11.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context21.stop();
            }
        }, _callee21, this);
      }));
      function updateGalleryItems(_x16) {
        return _updateGalleryItems.apply(this, arguments);
      }
      return updateGalleryItems;
    }()
  }, {
    key: "updateGalleryOrder",
    value: function() {
      var _updateGalleryOrder = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee23(request) {
        var _this11 = this;
        return _regeneratorRuntime2().wrap(function _callee23$(_context23) {
          while (1)
            switch (_context23.prev = _context23.next) {
              case 0:
                return _context23.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref12 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee22(headers) {
                    return _regeneratorRuntime2().wrap(function _callee22$(_context22) {
                      while (1)
                        switch (_context22.prev = _context22.next) {
                          case 0:
                            _context22.next = 2;
                            return _this11.sdk.UpdateNFTGalleryOrder({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context22.stop();
                        }
                    }, _callee22);
                  }));
                  return function(_x19) {
                    return _ref12.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context23.stop();
            }
        }, _callee23, this);
      }));
      function updateGalleryOrder(_x18) {
        return _updateGalleryOrder.apply(this, arguments);
      }
      return updateGalleryOrder;
    }()
  }, {
    key: "deleteGallery",
    value: function() {
      var _deleteGallery = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee25(request) {
        var _this12 = this;
        return _regeneratorRuntime2().wrap(function _callee25$(_context25) {
          while (1)
            switch (_context25.prev = _context25.next) {
              case 0:
                return _context25.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref13 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee24(headers) {
                    return _regeneratorRuntime2().wrap(function _callee24$(_context24) {
                      while (1)
                        switch (_context24.prev = _context24.next) {
                          case 0:
                            _context24.next = 2;
                            return _this12.sdk.DeleteNFTGallery({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context24.stop();
                        }
                    }, _callee24);
                  }));
                  return function(_x21) {
                    return _ref13.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context25.stop();
            }
        }, _callee25, this);
      }));
      function deleteGallery(_x20) {
        return _deleteGallery.apply(this, arguments);
      }
      return deleteGallery;
    }()
  }]);
  return Nfts2;
}();
var NotificationsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Notifications" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "NotificationRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "notifications" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ReactionNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ReactionNotification" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CommentNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentNotification" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MirrorNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MirrorNotification" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "QuoteNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteNotification" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ActedNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ActedNotification" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowNotification" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MentionNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MentionNotification" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ReactionNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ReactionNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "reactions" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "profile" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "reactions" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "reaction" } }, { kind: "Field", name: { kind: "Name", value: "reactedAt" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "publication" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CommentNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MirrorNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MirrorNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "mirrorId" } }, { kind: "Field", name: { kind: "Name", value: "mirroredAt" } }, { kind: "Field", name: { kind: "Name", value: "profile" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "publication" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "QuoteNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "quote" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionProfileActed" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionProfileActed" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "action" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ActedNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ActedNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "actions" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionProfileActed" } }] } }, { kind: "Field", name: { kind: "Name", value: "publication" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Mirror" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MentionNotification" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MentionNotification" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publication" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Mirror" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrorOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var defaultWrapper$b = function defaultWrapper9(action, _operationName, _operationType) {
  return action();
};
var NotificationsDocumentString = print(NotificationsDocument);
function getSdk$b(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$b;
  return { Notifications: function Notifications2(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(NotificationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Notifications", "query");
  } };
}
var Notifications = /* @__PURE__ */ function() {
  function Notifications2(context, authentication) {
    _classCallCheck3(this, Notifications2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$b(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Notifications2, [{
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3() {
        var _this = this;
        var request, _args3 = arguments;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                request = _args3.length > 0 && _args3[0] !== void 0 ? _args3[0] : {};
                return _context3.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(headers) {
                    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                      while (1)
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                              var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                                var result;
                                return _regeneratorRuntime2().wrap(function _callee$(_context) {
                                  while (1)
                                    switch (_context.prev = _context.next) {
                                      case 0:
                                        _context.next = 2;
                                        return _this.sdk.Notifications(_objectSpread2({
                                          request: currRequest
                                        }, buildRequestFromConfig(_this.context)), headers);
                                      case 2:
                                        result = _context.sent;
                                        return _context.abrupt("return", result.data.result);
                                      case 4:
                                      case "end":
                                        return _context.stop();
                                    }
                                }, _callee);
                              }));
                              return function(_x2) {
                                return _ref2.apply(this, arguments);
                              };
                            }(), request));
                          case 1:
                          case "end":
                            return _context2.stop();
                        }
                    }, _callee2);
                  }));
                  return function(_x) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 2:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function fetch2() {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }]);
  return Notifications2;
}();
var PoapsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "Poaps"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "UserPoapsQueryRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "poaps"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PoapToken"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PoapEvent"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PoapEvent"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fancyId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "imageUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "country"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "city"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "year"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiryDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "virtualEvent"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fromAdmin"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "animationUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventTemplateId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "privateEvent"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PoapToken"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PoapToken"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "owner"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "layer"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "created"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "migrated"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "event"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PoapEvent"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var MutualPoapsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "MutualPoaps"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "MutualPoapsQueryRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "mutualPoaps"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PoapEvent"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PoapEvent"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PoapEvent"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fancyId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "imageUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "country"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "city"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "year"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiryDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "virtualEvent"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fromAdmin"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "animationUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventTemplateId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "privateEvent"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var PoapHoldersDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "PoapHolders"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PoapHoldersQueryRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "poapHolders"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Profile"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }]
};
var PoapEventDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "PoapEvent"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PoapEventQueryRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "poapEvent"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PoapEvent"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PoapEvent"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PoapEvent"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fancyId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "imageUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "country"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "city"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "year"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiryDate"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "virtualEvent"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fromAdmin"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "animationUrl"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "eventTemplateId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "privateEvent"
        }
      }]
    }
  }]
};
var defaultWrapper$a = function defaultWrapper10(action, _operationName, _operationType) {
  return action();
};
var PoapsDocumentString = print(PoapsDocument);
var MutualPoapsDocumentString = print(MutualPoapsDocument);
var PoapHoldersDocumentString = print(PoapHoldersDocument);
var PoapEventDocumentString = print(PoapEventDocument);
function getSdk$a(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$a;
  return {
    Poaps: function Poaps2(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(PoapsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "Poaps", "query");
    },
    MutualPoaps: function MutualPoaps(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(MutualPoapsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "MutualPoaps", "query");
    },
    PoapHolders: function PoapHolders(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(PoapHoldersDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "PoapHolders", "query");
    },
    PoapEvent: function PoapEvent(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(PoapEventDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "PoapEvent", "query");
    }
  };
}
var Poaps = /* @__PURE__ */ function() {
  function Poaps2(context, authentication) {
    _classCallCheck3(this, Poaps2);
    this.context = context;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$a(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Poaps2, [{
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.Poaps({
                              request: currRequest
                            });
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2);
      }));
      function fetch2(_x) {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "holders",
    value: function() {
      var _holders = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.PoapHolders(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this2.context)));
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4);
      }));
      function holders(_x3) {
        return _holders.apply(this, arguments);
      }
      return holders;
    }()
  }, {
    key: "mutualEvents",
    value: function() {
      var _mutualEvents = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.next = 2;
                            return _this3.sdk.MutualPoaps({
                              request: currRequest
                            });
                          case 2:
                            result = _context5.sent;
                            return _context5.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x6) {
                    return _ref3.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6);
      }));
      function mutualEvents(_x5) {
        return _mutualEvents.apply(this, arguments);
      }
      return mutualEvents;
    }()
  }, {
    key: "event",
    value: function() {
      var _event = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.sdk.PoapEvent({
                  request
                });
              case 2:
                result = _context7.sent;
                return _context7.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context7.stop();
            }
        }, _callee7, this);
      }));
      function event(_x7) {
        return _event.apply(this, arguments);
      }
      return event;
    }()
  }]);
  return Poaps2;
}();
var ProfileDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Profile" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfileRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "profile" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }] };
var DefaultProfileDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "DefaultProfile" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "DefaultProfileRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "defaultProfile" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }] };
var ProfilesDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Profiles" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfilesRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "profiles" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var ProfileManagersDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "ProfileManagers" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfileManagersRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "profileManagers" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileManager" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileManager" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfilesManagedResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "isLensManager" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var ProfileRecommendationsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "ProfileRecommendations" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfileRecommendationsRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "profileRecommendations" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var FollowingDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Following" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FollowingRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "following" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var FollowersDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Followers" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FollowersRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "followers" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var MutualFollowersDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "MutualFollowers" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MutualFollowersRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "mutualFollowers" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var FollowStatusBulkDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "FollowStatusBulk" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FollowStatusBulkRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "followStatusBulk" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowStatusBulkResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowStatusBulkResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowStatusBulkResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "follower" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "status" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }] };
var WhoActedOnPublicationDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "WhoActedOnPublication" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "WhoActedOnPublicationRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "whoActedOnPublication" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var ProfileActionHistoryDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "ProfileActionHistory" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfileActionHistoryRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "profileActionHistory" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileActionHistory" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileActionHistory" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileActionHistory" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "actionType" } }, { kind: "Field", name: { kind: "Name", value: "who" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "actionedOn" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var WhoHaveBlockedDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "WhoHaveBlocked" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "WhoHaveBlockedRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "whoHaveBlocked" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var CreateProfileWithHandleDocument$1 = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateProfileWithHandle" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "CreateProfileWithHandleRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createProfileWithHandle" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateProfileWithHandleErrorResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateProfileWithHandleErrorResult" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateProfileWithHandleErrorResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateProfileWithHandleErrorResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "reason" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }] };
var AddProfileInterestsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "AddProfileInterests" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfileInterestsRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "addProfileInterests" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var RemoveProfileInterestsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "RemoveProfileInterests" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ProfileInterestsRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "removeProfileInterests" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var SetProfileMetadataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "SetProfileMetadata" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainSetProfileMetadataRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "setProfileMetadata" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var BlockDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "Block" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "BlockRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "block" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var UnblockDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "Unblock" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "UnblockRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "unblock" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var FollowDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "Follow" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FollowLensManagerRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "follow" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var UnfollowDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "Unfollow" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "UnfollowRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "unfollow" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var DismissRecommendedProfilesDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "DismissRecommendedProfiles" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "DismissRecommendedProfilesRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "dismissRecommendedProfiles" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var SetDefaultProfileDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "SetDefaultProfile" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "SetDefaultProfileRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "setDefaultProfile" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var CreateOnchainSetProfileMetadataTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateOnchainSetProfileMetadataTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainSetProfileMetadataRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createOnchainSetProfileMetadataTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateOnchainSetProfileMetadataBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateOnchainSetProfileMetadataBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateOnchainSetProfileMetadataBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "SetProfileMetadataURI" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "metadataURI" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateChangeProfileManagersTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateChangeProfileManagersTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ChangeProfileManagersRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createChangeProfileManagersTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateChangeProfileManagersBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateChangeProfileManagersBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateChangeProfileManagersBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "ChangeDelegatedExecutorsConfig" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "delegatorProfileId" } }, { kind: "Field", name: { kind: "Name", value: "delegatedExecutors" } }, { kind: "Field", name: { kind: "Name", value: "approvals" } }, { kind: "Field", name: { kind: "Name", value: "configNumber" } }, { kind: "Field", name: { kind: "Name", value: "switchToGivenConfig" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateBlockProfilesTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateBlockProfilesTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "BlockRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createBlockProfilesTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateBlockProfilesBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateBlockProfilesBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateBlockProfilesBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "SetBlockStatus" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "byProfileId" } }, { kind: "Field", name: { kind: "Name", value: "idsOfProfilesToSetBlockStatus" } }, { kind: "Field", name: { kind: "Name", value: "blockStatus" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateUnblockProfilesTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateUnblockProfilesTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "UnblockRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createUnblockProfilesTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateUnblockProfilesBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateUnblockProfilesBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateUnblockProfilesBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "SetBlockStatus" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "byProfileId" } }, { kind: "Field", name: { kind: "Name", value: "idsOfProfilesToSetBlockStatus" } }, { kind: "Field", name: { kind: "Name", value: "blockStatus" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateFollowTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateFollowTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FollowRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createFollowTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateFollowBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateFollowBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateFollowBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Follow" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "followerProfileId" } }, { kind: "Field", name: { kind: "Name", value: "idsOfProfilesToFollow" } }, { kind: "Field", name: { kind: "Name", value: "followTokenIds" } }, { kind: "Field", name: { kind: "Name", value: "datas" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateUnfollowTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateUnfollowTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "UnfollowRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createUnfollowTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateUnfollowBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateUnfollowBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateUnfollowBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Unfollow" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "unfollowerProfileId" } }, { kind: "Field", name: { kind: "Name", value: "idsOfProfilesToUnfollow" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var SetFollowModuleDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "SetFollowModule" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "SetFollowModuleRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "setFollowModule" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var CreateSetFollowModuleTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateSetFollowModuleTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "SetFollowModuleRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createSetFollowModuleTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateSetFollowModuleBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateSetFollowModuleBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateSetFollowModuleBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "SetFollowModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "followModule" } }, { kind: "Field", name: { kind: "Name", value: "followModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var LinkHandleToProfileDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "LinkHandleToProfile" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "LinkHandleToProfileRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "linkHandleToProfile" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var UnlinkHandleFromProfileDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "UnlinkHandleFromProfile" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "UnlinkHandleFromProfileRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "unlinkHandleFromProfile" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var CreateLinkHandleToProfileTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateLinkHandleToProfileTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "LinkHandleToProfileRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createLinkHandleToProfileTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateLinkHandleToProfileBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateLinkHandleToProfileBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateLinkHandleToProfileBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Link" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataField" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "handleId" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataField" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataField" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] };
var CreateUnlinkHandleFromProfileTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateUnlinkHandleFromProfileTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "UnlinkHandleFromProfileRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createUnlinkHandleFromProfileTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateUnlinkHandleFromProfileBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateUnlinkHandleFromProfileBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateUnlinkHandleFromProfileBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Unlink" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataField" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "handleId" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataField" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataField" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] };
var ReportProfileDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "ReportProfile" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ReportProfileRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "reportProfile" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var defaultWrapper$9 = function defaultWrapper11(action, _operationName, _operationType) {
  return action();
};
var ProfileDocumentString = print(ProfileDocument);
var DefaultProfileDocumentString = print(DefaultProfileDocument);
var ProfilesDocumentString = print(ProfilesDocument);
var ProfileManagersDocumentString = print(ProfileManagersDocument);
var ProfileRecommendationsDocumentString = print(ProfileRecommendationsDocument);
var FollowingDocumentString = print(FollowingDocument);
var FollowersDocumentString = print(FollowersDocument);
var MutualFollowersDocumentString = print(MutualFollowersDocument);
var FollowStatusBulkDocumentString = print(FollowStatusBulkDocument);
var WhoActedOnPublicationDocumentString = print(WhoActedOnPublicationDocument);
var ProfileActionHistoryDocumentString = print(ProfileActionHistoryDocument);
var WhoHaveBlockedDocumentString = print(WhoHaveBlockedDocument);
var CreateProfileWithHandleDocumentString$1 = print(CreateProfileWithHandleDocument$1);
var AddProfileInterestsDocumentString = print(AddProfileInterestsDocument);
var RemoveProfileInterestsDocumentString = print(RemoveProfileInterestsDocument);
var SetProfileMetadataDocumentString = print(SetProfileMetadataDocument);
var BlockDocumentString = print(BlockDocument);
var UnblockDocumentString = print(UnblockDocument);
var FollowDocumentString = print(FollowDocument);
var UnfollowDocumentString = print(UnfollowDocument);
var DismissRecommendedProfilesDocumentString = print(DismissRecommendedProfilesDocument);
var SetDefaultProfileDocumentString = print(SetDefaultProfileDocument);
var CreateOnchainSetProfileMetadataTypedDataDocumentString = print(CreateOnchainSetProfileMetadataTypedDataDocument);
var CreateChangeProfileManagersTypedDataDocumentString = print(CreateChangeProfileManagersTypedDataDocument);
var CreateBlockProfilesTypedDataDocumentString = print(CreateBlockProfilesTypedDataDocument);
var CreateUnblockProfilesTypedDataDocumentString = print(CreateUnblockProfilesTypedDataDocument);
var CreateFollowTypedDataDocumentString = print(CreateFollowTypedDataDocument);
var CreateUnfollowTypedDataDocumentString = print(CreateUnfollowTypedDataDocument);
var SetFollowModuleDocumentString = print(SetFollowModuleDocument);
var CreateSetFollowModuleTypedDataDocumentString = print(CreateSetFollowModuleTypedDataDocument);
var LinkHandleToProfileDocumentString = print(LinkHandleToProfileDocument);
var UnlinkHandleFromProfileDocumentString = print(UnlinkHandleFromProfileDocument);
var CreateLinkHandleToProfileTypedDataDocumentString = print(CreateLinkHandleToProfileTypedDataDocument);
var CreateUnlinkHandleFromProfileTypedDataDocumentString = print(CreateUnlinkHandleFromProfileTypedDataDocument);
var ReportProfileDocumentString = print(ReportProfileDocument);
function getSdk$9(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$9;
  return { Profile: function Profile2(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Profile", "query");
  }, DefaultProfile: function DefaultProfile(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(DefaultProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "DefaultProfile", "query");
  }, Profiles: function Profiles(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ProfilesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Profiles", "query");
  }, ProfileManagers: function ProfileManagers(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ProfileManagersDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "ProfileManagers", "query");
  }, ProfileRecommendations: function ProfileRecommendations(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ProfileRecommendationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "ProfileRecommendations", "query");
  }, Following: function Following(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FollowingDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Following", "query");
  }, Followers: function Followers(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FollowersDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Followers", "query");
  }, MutualFollowers: function MutualFollowers(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(MutualFollowersDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "MutualFollowers", "query");
  }, FollowStatusBulk: function FollowStatusBulk(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FollowStatusBulkDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "FollowStatusBulk", "query");
  }, WhoActedOnPublication: function WhoActedOnPublication(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(WhoActedOnPublicationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "WhoActedOnPublication", "query");
  }, ProfileActionHistory: function ProfileActionHistory(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ProfileActionHistoryDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "ProfileActionHistory", "query");
  }, WhoHaveBlocked: function WhoHaveBlocked(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(WhoHaveBlockedDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "WhoHaveBlocked", "query");
  }, CreateProfileWithHandle: function CreateProfileWithHandle(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateProfileWithHandleDocumentString$1, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateProfileWithHandle", "mutation");
  }, AddProfileInterests: function AddProfileInterests(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(AddProfileInterestsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "AddProfileInterests", "mutation");
  }, RemoveProfileInterests: function RemoveProfileInterests(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(RemoveProfileInterestsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "RemoveProfileInterests", "mutation");
  }, SetProfileMetadata: function SetProfileMetadata(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(SetProfileMetadataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "SetProfileMetadata", "mutation");
  }, Block: function Block(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(BlockDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Block", "mutation");
  }, Unblock: function Unblock(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(UnblockDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Unblock", "mutation");
  }, Follow: function Follow(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FollowDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Follow", "mutation");
  }, Unfollow: function Unfollow(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(UnfollowDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Unfollow", "mutation");
  }, DismissRecommendedProfiles: function DismissRecommendedProfiles(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(DismissRecommendedProfilesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "DismissRecommendedProfiles", "mutation");
  }, SetDefaultProfile: function SetDefaultProfile(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(SetDefaultProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "SetDefaultProfile", "mutation");
  }, CreateOnchainSetProfileMetadataTypedData: function CreateOnchainSetProfileMetadataTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateOnchainSetProfileMetadataTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateOnchainSetProfileMetadataTypedData", "mutation");
  }, CreateChangeProfileManagersTypedData: function CreateChangeProfileManagersTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateChangeProfileManagersTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateChangeProfileManagersTypedData", "mutation");
  }, CreateBlockProfilesTypedData: function CreateBlockProfilesTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateBlockProfilesTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateBlockProfilesTypedData", "mutation");
  }, CreateUnblockProfilesTypedData: function CreateUnblockProfilesTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateUnblockProfilesTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateUnblockProfilesTypedData", "mutation");
  }, CreateFollowTypedData: function CreateFollowTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateFollowTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateFollowTypedData", "mutation");
  }, CreateUnfollowTypedData: function CreateUnfollowTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateUnfollowTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateUnfollowTypedData", "mutation");
  }, SetFollowModule: function SetFollowModule(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(SetFollowModuleDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "SetFollowModule", "mutation");
  }, CreateSetFollowModuleTypedData: function CreateSetFollowModuleTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateSetFollowModuleTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateSetFollowModuleTypedData", "mutation");
  }, LinkHandleToProfile: function LinkHandleToProfile(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(LinkHandleToProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "LinkHandleToProfile", "mutation");
  }, UnlinkHandleFromProfile: function UnlinkHandleFromProfile(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(UnlinkHandleFromProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "UnlinkHandleFromProfile", "mutation");
  }, CreateLinkHandleToProfileTypedData: function CreateLinkHandleToProfileTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateLinkHandleToProfileTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateLinkHandleToProfileTypedData", "mutation");
  }, CreateUnlinkHandleFromProfileTypedData: function CreateUnlinkHandleFromProfileTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateUnlinkHandleFromProfileTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateUnlinkHandleFromProfileTypedData", "mutation");
  }, ReportProfile: function ReportProfile(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ReportProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "ReportProfile", "mutation");
  } };
}
var Profile = /* @__PURE__ */ function() {
  function Profile2(context, authentication) {
    _classCallCheck3(this, Profile2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$9(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Profile2, [{
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(request, options) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.sdk.Profile(_objectSpread2(_objectSpread2({
                  request
                }, buildRequestFromConfig(this.context)), options));
              case 2:
                result = _context.sent;
                return _context.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function fetch2(_x, _x2) {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "fetchAll",
    value: function() {
      var _fetchAll = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(request, options) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                      while (1)
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.next = 2;
                            return _this.sdk.Profiles(_objectSpread2(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this.context)), options));
                          case 2:
                            result = _context2.sent;
                            return _context2.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context2.stop();
                        }
                    }, _callee2);
                  }));
                  return function(_x5) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context3.stop();
            }
        }, _callee3);
      }));
      function fetchAll(_x3, _x4) {
        return _fetchAll.apply(this, arguments);
      }
      return fetchAll;
    }()
  }, {
    key: "managers",
    value: function() {
      var _managers = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                      while (1)
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.next = 2;
                            return _this2.sdk.ProfileManagers({
                              request: currRequest
                            });
                          case 2:
                            result = _context4.sent;
                            return _context4.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context4.stop();
                        }
                    }, _callee4);
                  }));
                  return function(_x7) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context5.stop();
            }
        }, _callee5);
      }));
      function managers(_x6) {
        return _managers.apply(this, arguments);
      }
      return managers;
    }()
  }, {
    key: "recommendations",
    value: function() {
      var _recommendations = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
                      while (1)
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            _context6.next = 2;
                            return _this3.sdk.ProfileRecommendations(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this3.context)));
                          case 2:
                            result = _context6.sent;
                            return _context6.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context6.stop();
                        }
                    }, _callee6);
                  }));
                  return function(_x9) {
                    return _ref3.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context7.stop();
            }
        }, _callee7);
      }));
      function recommendations(_x8) {
        return _recommendations.apply(this, arguments);
      }
      return recommendations;
    }()
  }, {
    key: "dismissRecommended",
    value: function() {
      var _dismissRecommended = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9(request) {
        var _this4 = this;
        return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
          while (1)
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8(headers) {
                    return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
                      while (1)
                        switch (_context8.prev = _context8.next) {
                          case 0:
                            _context8.next = 2;
                            return _this4.sdk.DismissRecommendedProfiles({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context8.stop();
                        }
                    }, _callee8);
                  }));
                  return function(_x11) {
                    return _ref4.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context9.stop();
            }
        }, _callee9, this);
      }));
      function dismissRecommended(_x10) {
        return _dismissRecommended.apply(this, arguments);
      }
      return dismissRecommended;
    }()
  }, {
    key: "fetchDefault",
    value: function() {
      var _fetchDefault = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee10(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee10$(_context10) {
          while (1)
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.sdk.DefaultProfile(_objectSpread2({
                  request
                }, buildRequestFromConfig(this.context)));
              case 2:
                result = _context10.sent;
                return _context10.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context10.stop();
            }
        }, _callee10, this);
      }));
      function fetchDefault(_x12) {
        return _fetchDefault.apply(this, arguments);
      }
      return fetchDefault;
    }()
  }, {
    key: "setDefault",
    value: function() {
      var _setDefault = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee12(request) {
        var _this5 = this;
        return _regeneratorRuntime2().wrap(function _callee12$(_context12) {
          while (1)
            switch (_context12.prev = _context12.next) {
              case 0:
                return _context12.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee11(headers) {
                    return _regeneratorRuntime2().wrap(function _callee11$(_context11) {
                      while (1)
                        switch (_context11.prev = _context11.next) {
                          case 0:
                            _context11.next = 2;
                            return _this5.sdk.SetDefaultProfile({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context11.stop();
                        }
                    }, _callee11);
                  }));
                  return function(_x14) {
                    return _ref5.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context12.stop();
            }
        }, _callee12, this);
      }));
      function setDefault(_x13) {
        return _setDefault.apply(this, arguments);
      }
      return setDefault;
    }()
  }, {
    key: "following",
    value: function() {
      var _following = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee14(request) {
        var _this6 = this;
        return _regeneratorRuntime2().wrap(function _callee14$(_context14) {
          while (1)
            switch (_context14.prev = _context14.next) {
              case 0:
                return _context14.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref6 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee13(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee13$(_context13) {
                      while (1)
                        switch (_context13.prev = _context13.next) {
                          case 0:
                            _context13.next = 2;
                            return _this6.sdk.Following(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this6.context)));
                          case 2:
                            result = _context13.sent;
                            return _context13.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context13.stop();
                        }
                    }, _callee13);
                  }));
                  return function(_x16) {
                    return _ref6.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context14.stop();
            }
        }, _callee14);
      }));
      function following(_x15) {
        return _following.apply(this, arguments);
      }
      return following;
    }()
  }, {
    key: "followers",
    value: function() {
      var _followers = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee16(request) {
        var _this7 = this;
        return _regeneratorRuntime2().wrap(function _callee16$(_context16) {
          while (1)
            switch (_context16.prev = _context16.next) {
              case 0:
                return _context16.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref7 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee15(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee15$(_context15) {
                      while (1)
                        switch (_context15.prev = _context15.next) {
                          case 0:
                            _context15.next = 2;
                            return _this7.sdk.Followers(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this7.context)));
                          case 2:
                            result = _context15.sent;
                            return _context15.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context15.stop();
                        }
                    }, _callee15);
                  }));
                  return function(_x18) {
                    return _ref7.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context16.stop();
            }
        }, _callee16);
      }));
      function followers(_x17) {
        return _followers.apply(this, arguments);
      }
      return followers;
    }()
  }, {
    key: "mutualFollowers",
    value: function() {
      var _mutualFollowers = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee18(request) {
        var _this8 = this;
        return _regeneratorRuntime2().wrap(function _callee18$(_context18) {
          while (1)
            switch (_context18.prev = _context18.next) {
              case 0:
                return _context18.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref8 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee17(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee17$(_context17) {
                      while (1)
                        switch (_context17.prev = _context17.next) {
                          case 0:
                            _context17.next = 2;
                            return _this8.sdk.MutualFollowers(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this8.context)));
                          case 2:
                            result = _context17.sent;
                            return _context17.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context17.stop();
                        }
                    }, _callee17);
                  }));
                  return function(_x20) {
                    return _ref8.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context18.stop();
            }
        }, _callee18);
      }));
      function mutualFollowers(_x19) {
        return _mutualFollowers.apply(this, arguments);
      }
      return mutualFollowers;
    }()
  }, {
    key: "followStatusBulk",
    value: function() {
      var _followStatusBulk = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee19(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee19$(_context19) {
          while (1)
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.sdk.FollowStatusBulk({
                  request
                });
              case 2:
                result = _context19.sent;
                return _context19.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context19.stop();
            }
        }, _callee19, this);
      }));
      function followStatusBulk(_x21) {
        return _followStatusBulk.apply(this, arguments);
      }
      return followStatusBulk;
    }()
  }, {
    key: "whoActedOnPublication",
    value: function() {
      var _whoActedOnPublication = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee21(request) {
        var _this9 = this;
        return _regeneratorRuntime2().wrap(function _callee21$(_context21) {
          while (1)
            switch (_context21.prev = _context21.next) {
              case 0:
                return _context21.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref9 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee20(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee20$(_context20) {
                      while (1)
                        switch (_context20.prev = _context20.next) {
                          case 0:
                            _context20.next = 2;
                            return _this9.sdk.WhoActedOnPublication(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this9.context)));
                          case 2:
                            result = _context20.sent;
                            return _context20.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context20.stop();
                        }
                    }, _callee20);
                  }));
                  return function(_x23) {
                    return _ref9.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context21.stop();
            }
        }, _callee21);
      }));
      function whoActedOnPublication(_x22) {
        return _whoActedOnPublication.apply(this, arguments);
      }
      return whoActedOnPublication;
    }()
  }, {
    key: "whoHaveBeenBlocked",
    value: function() {
      var _whoHaveBeenBlocked = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee24() {
        var _this10 = this;
        var request, _args24 = arguments;
        return _regeneratorRuntime2().wrap(function _callee24$(_context24) {
          while (1)
            switch (_context24.prev = _context24.next) {
              case 0:
                request = _args24.length > 0 && _args24[0] !== void 0 ? _args24[0] : {};
                return _context24.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref10 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee23(headers) {
                    return _regeneratorRuntime2().wrap(function _callee23$(_context23) {
                      while (1)
                        switch (_context23.prev = _context23.next) {
                          case 0:
                            return _context23.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                              var _ref11 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee22(currRequest) {
                                var result;
                                return _regeneratorRuntime2().wrap(function _callee22$(_context22) {
                                  while (1)
                                    switch (_context22.prev = _context22.next) {
                                      case 0:
                                        _context22.next = 2;
                                        return _this10.sdk.WhoHaveBlocked(_objectSpread2({
                                          request: currRequest
                                        }, buildRequestFromConfig(_this10.context)), headers);
                                      case 2:
                                        result = _context22.sent;
                                        return _context22.abrupt("return", result.data.result);
                                      case 4:
                                      case "end":
                                        return _context22.stop();
                                    }
                                }, _callee22);
                              }));
                              return function(_x25) {
                                return _ref11.apply(this, arguments);
                              };
                            }(), request));
                          case 1:
                          case "end":
                            return _context23.stop();
                        }
                    }, _callee23);
                  }));
                  return function(_x24) {
                    return _ref10.apply(this, arguments);
                  };
                }()));
              case 2:
              case "end":
                return _context24.stop();
            }
        }, _callee24, this);
      }));
      function whoHaveBeenBlocked() {
        return _whoHaveBeenBlocked.apply(this, arguments);
      }
      return whoHaveBeenBlocked;
    }()
  }, {
    key: "actionHistory",
    value: function() {
      var _actionHistory = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee27() {
        var _this11 = this;
        var request, _args27 = arguments;
        return _regeneratorRuntime2().wrap(function _callee27$(_context27) {
          while (1)
            switch (_context27.prev = _context27.next) {
              case 0:
                request = _args27.length > 0 && _args27[0] !== void 0 ? _args27[0] : {};
                return _context27.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref12 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee26(headers) {
                    return _regeneratorRuntime2().wrap(function _callee26$(_context26) {
                      while (1)
                        switch (_context26.prev = _context26.next) {
                          case 0:
                            return _context26.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                              var _ref13 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee25(currRequest) {
                                var result;
                                return _regeneratorRuntime2().wrap(function _callee25$(_context25) {
                                  while (1)
                                    switch (_context25.prev = _context25.next) {
                                      case 0:
                                        _context25.next = 2;
                                        return _this11.sdk.ProfileActionHistory({
                                          request: currRequest
                                        }, headers);
                                      case 2:
                                        result = _context25.sent;
                                        return _context25.abrupt("return", result.data.result);
                                      case 4:
                                      case "end":
                                        return _context25.stop();
                                    }
                                }, _callee25);
                              }));
                              return function(_x27) {
                                return _ref13.apply(this, arguments);
                              };
                            }(), request));
                          case 1:
                          case "end":
                            return _context26.stop();
                        }
                    }, _callee26);
                  }));
                  return function(_x26) {
                    return _ref12.apply(this, arguments);
                  };
                }()));
              case 2:
              case "end":
                return _context27.stop();
            }
        }, _callee27, this);
      }));
      function actionHistory() {
        return _actionHistory.apply(this, arguments);
      }
      return actionHistory;
    }()
  }, {
    key: "create",
    value: function() {
      var _create = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee28(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee28$(_context28) {
          while (1)
            switch (_context28.prev = _context28.next) {
              case 0:
                if (!(this.context.environment.name === "production")) {
                  _context28.next = 2;
                  break;
                }
                throw new Error("Cannot create profile in production environment");
              case 2:
                _context28.next = 4;
                return this.sdk.CreateProfileWithHandle({
                  request
                });
              case 4:
                result = _context28.sent;
                return _context28.abrupt("return", result.data.result);
              case 6:
              case "end":
                return _context28.stop();
            }
        }, _callee28, this);
      }));
      function create4(_x28) {
        return _create.apply(this, arguments);
      }
      return create4;
    }()
  }, {
    key: "setProfileMetadata",
    value: function() {
      var _setProfileMetadata = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee30(request) {
        var _this12 = this;
        return _regeneratorRuntime2().wrap(function _callee30$(_context30) {
          while (1)
            switch (_context30.prev = _context30.next) {
              case 0:
                return _context30.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref14 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee29(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee29$(_context29) {
                      while (1)
                        switch (_context29.prev = _context29.next) {
                          case 0:
                            _context29.next = 2;
                            return _this12.sdk.SetProfileMetadata({
                              request
                            }, headers);
                          case 2:
                            result = _context29.sent;
                            return _context29.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context29.stop();
                        }
                    }, _callee29);
                  }));
                  return function(_x30) {
                    return _ref14.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context30.stop();
            }
        }, _callee30, this);
      }));
      function setProfileMetadata(_x29) {
        return _setProfileMetadata.apply(this, arguments);
      }
      return setProfileMetadata;
    }()
  }, {
    key: "createSetProfileMetadataTypedData",
    value: function() {
      var _createSetProfileMetadataTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee32(request, options) {
        var _this13 = this;
        return _regeneratorRuntime2().wrap(function _callee32$(_context32) {
          while (1)
            switch (_context32.prev = _context32.next) {
              case 0:
                return _context32.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref15 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee31(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee31$(_context31) {
                      while (1)
                        switch (_context31.prev = _context31.next) {
                          case 0:
                            _context31.next = 2;
                            return _this13.sdk.CreateOnchainSetProfileMetadataTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context31.sent;
                            return _context31.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context31.stop();
                        }
                    }, _callee31);
                  }));
                  return function(_x33) {
                    return _ref15.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context32.stop();
            }
        }, _callee32, this);
      }));
      function createSetProfileMetadataTypedData(_x31, _x32) {
        return _createSetProfileMetadataTypedData.apply(this, arguments);
      }
      return createSetProfileMetadataTypedData;
    }()
  }, {
    key: "createChangeProfileManagersTypedData",
    value: function() {
      var _createChangeProfileManagersTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee34(request, options) {
        var _this14 = this;
        return _regeneratorRuntime2().wrap(function _callee34$(_context34) {
          while (1)
            switch (_context34.prev = _context34.next) {
              case 0:
                return _context34.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref16 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee33(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee33$(_context33) {
                      while (1)
                        switch (_context33.prev = _context33.next) {
                          case 0:
                            _context33.next = 2;
                            return _this14.sdk.CreateChangeProfileManagersTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context33.sent;
                            return _context33.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context33.stop();
                        }
                    }, _callee33);
                  }));
                  return function(_x36) {
                    return _ref16.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context34.stop();
            }
        }, _callee34, this);
      }));
      function createChangeProfileManagersTypedData(_x34, _x35) {
        return _createChangeProfileManagersTypedData.apply(this, arguments);
      }
      return createChangeProfileManagersTypedData;
    }()
  }, {
    key: "setFollowModule",
    value: function() {
      var _setFollowModule = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee36(request) {
        var _this15 = this;
        return _regeneratorRuntime2().wrap(function _callee36$(_context36) {
          while (1)
            switch (_context36.prev = _context36.next) {
              case 0:
                return _context36.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref17 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee35(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee35$(_context35) {
                      while (1)
                        switch (_context35.prev = _context35.next) {
                          case 0:
                            _context35.next = 2;
                            return _this15.sdk.SetFollowModule({
                              request
                            }, headers);
                          case 2:
                            result = _context35.sent;
                            return _context35.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context35.stop();
                        }
                    }, _callee35);
                  }));
                  return function(_x38) {
                    return _ref17.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context36.stop();
            }
        }, _callee36, this);
      }));
      function setFollowModule(_x37) {
        return _setFollowModule.apply(this, arguments);
      }
      return setFollowModule;
    }()
  }, {
    key: "createSetFollowModuleTypedData",
    value: function() {
      var _createSetFollowModuleTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee38(request, options) {
        var _this16 = this;
        return _regeneratorRuntime2().wrap(function _callee38$(_context38) {
          while (1)
            switch (_context38.prev = _context38.next) {
              case 0:
                return _context38.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref18 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee37(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee37$(_context37) {
                      while (1)
                        switch (_context37.prev = _context37.next) {
                          case 0:
                            _context37.next = 2;
                            return _this16.sdk.CreateSetFollowModuleTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context37.sent;
                            return _context37.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context37.stop();
                        }
                    }, _callee37);
                  }));
                  return function(_x41) {
                    return _ref18.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context38.stop();
            }
        }, _callee38, this);
      }));
      function createSetFollowModuleTypedData(_x39, _x40) {
        return _createSetFollowModuleTypedData.apply(this, arguments);
      }
      return createSetFollowModuleTypedData;
    }()
  }, {
    key: "block",
    value: function() {
      var _block = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee40(request) {
        var _this17 = this;
        return _regeneratorRuntime2().wrap(function _callee40$(_context40) {
          while (1)
            switch (_context40.prev = _context40.next) {
              case 0:
                return _context40.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref19 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee39(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee39$(_context39) {
                      while (1)
                        switch (_context39.prev = _context39.next) {
                          case 0:
                            _context39.next = 2;
                            return _this17.sdk.Block({
                              request
                            }, headers);
                          case 2:
                            result = _context39.sent;
                            return _context39.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context39.stop();
                        }
                    }, _callee39);
                  }));
                  return function(_x43) {
                    return _ref19.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context40.stop();
            }
        }, _callee40, this);
      }));
      function block2(_x42) {
        return _block.apply(this, arguments);
      }
      return block2;
    }()
  }, {
    key: "createBlockProfilesTypedData",
    value: function() {
      var _createBlockProfilesTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee42(request, options) {
        var _this18 = this;
        return _regeneratorRuntime2().wrap(function _callee42$(_context42) {
          while (1)
            switch (_context42.prev = _context42.next) {
              case 0:
                return _context42.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref20 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee41(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee41$(_context41) {
                      while (1)
                        switch (_context41.prev = _context41.next) {
                          case 0:
                            _context41.next = 2;
                            return _this18.sdk.CreateBlockProfilesTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context41.sent;
                            return _context41.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context41.stop();
                        }
                    }, _callee41);
                  }));
                  return function(_x46) {
                    return _ref20.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context42.stop();
            }
        }, _callee42, this);
      }));
      function createBlockProfilesTypedData(_x44, _x45) {
        return _createBlockProfilesTypedData.apply(this, arguments);
      }
      return createBlockProfilesTypedData;
    }()
  }, {
    key: "unblock",
    value: function() {
      var _unblock = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee44(request) {
        var _this19 = this;
        return _regeneratorRuntime2().wrap(function _callee44$(_context44) {
          while (1)
            switch (_context44.prev = _context44.next) {
              case 0:
                return _context44.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref21 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee43(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee43$(_context43) {
                      while (1)
                        switch (_context43.prev = _context43.next) {
                          case 0:
                            _context43.next = 2;
                            return _this19.sdk.Unblock({
                              request
                            }, headers);
                          case 2:
                            result = _context43.sent;
                            return _context43.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context43.stop();
                        }
                    }, _callee43);
                  }));
                  return function(_x48) {
                    return _ref21.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context44.stop();
            }
        }, _callee44, this);
      }));
      function unblock(_x47) {
        return _unblock.apply(this, arguments);
      }
      return unblock;
    }()
  }, {
    key: "createUnblockProfilesTypedData",
    value: function() {
      var _createUnblockProfilesTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee46(request, options) {
        var _this20 = this;
        return _regeneratorRuntime2().wrap(function _callee46$(_context46) {
          while (1)
            switch (_context46.prev = _context46.next) {
              case 0:
                return _context46.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref22 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee45(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee45$(_context45) {
                      while (1)
                        switch (_context45.prev = _context45.next) {
                          case 0:
                            _context45.next = 2;
                            return _this20.sdk.CreateUnblockProfilesTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context45.sent;
                            return _context45.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context45.stop();
                        }
                    }, _callee45);
                  }));
                  return function(_x51) {
                    return _ref22.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context46.stop();
            }
        }, _callee46, this);
      }));
      function createUnblockProfilesTypedData(_x49, _x50) {
        return _createUnblockProfilesTypedData.apply(this, arguments);
      }
      return createUnblockProfilesTypedData;
    }()
  }, {
    key: "follow",
    value: function() {
      var _follow = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee48(request) {
        var _this21 = this;
        return _regeneratorRuntime2().wrap(function _callee48$(_context48) {
          while (1)
            switch (_context48.prev = _context48.next) {
              case 0:
                return _context48.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref23 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee47(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee47$(_context47) {
                      while (1)
                        switch (_context47.prev = _context47.next) {
                          case 0:
                            _context47.next = 2;
                            return _this21.sdk.Follow({
                              request
                            }, headers);
                          case 2:
                            result = _context47.sent;
                            return _context47.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context47.stop();
                        }
                    }, _callee47);
                  }));
                  return function(_x53) {
                    return _ref23.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context48.stop();
            }
        }, _callee48, this);
      }));
      function follow(_x52) {
        return _follow.apply(this, arguments);
      }
      return follow;
    }()
  }, {
    key: "createFollowTypedData",
    value: function() {
      var _createFollowTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee50(request, options) {
        var _this22 = this;
        return _regeneratorRuntime2().wrap(function _callee50$(_context50) {
          while (1)
            switch (_context50.prev = _context50.next) {
              case 0:
                return _context50.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref24 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee49(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee49$(_context49) {
                      while (1)
                        switch (_context49.prev = _context49.next) {
                          case 0:
                            _context49.next = 2;
                            return _this22.sdk.CreateFollowTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context49.sent;
                            return _context49.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context49.stop();
                        }
                    }, _callee49);
                  }));
                  return function(_x56) {
                    return _ref24.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context50.stop();
            }
        }, _callee50, this);
      }));
      function createFollowTypedData(_x54, _x55) {
        return _createFollowTypedData.apply(this, arguments);
      }
      return createFollowTypedData;
    }()
  }, {
    key: "unfollow",
    value: function() {
      var _unfollow = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee52(request) {
        var _this23 = this;
        return _regeneratorRuntime2().wrap(function _callee52$(_context52) {
          while (1)
            switch (_context52.prev = _context52.next) {
              case 0:
                return _context52.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref25 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee51(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee51$(_context51) {
                      while (1)
                        switch (_context51.prev = _context51.next) {
                          case 0:
                            _context51.next = 2;
                            return _this23.sdk.Unfollow({
                              request
                            }, headers);
                          case 2:
                            result = _context51.sent;
                            return _context51.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context51.stop();
                        }
                    }, _callee51);
                  }));
                  return function(_x58) {
                    return _ref25.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context52.stop();
            }
        }, _callee52, this);
      }));
      function unfollow(_x57) {
        return _unfollow.apply(this, arguments);
      }
      return unfollow;
    }()
  }, {
    key: "createUnfollowTypedData",
    value: function() {
      var _createUnfollowTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee54(request, options) {
        var _this24 = this;
        return _regeneratorRuntime2().wrap(function _callee54$(_context54) {
          while (1)
            switch (_context54.prev = _context54.next) {
              case 0:
                return _context54.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref26 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee53(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee53$(_context53) {
                      while (1)
                        switch (_context53.prev = _context53.next) {
                          case 0:
                            _context53.next = 2;
                            return _this24.sdk.CreateUnfollowTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context53.sent;
                            return _context53.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context53.stop();
                        }
                    }, _callee53);
                  }));
                  return function(_x61) {
                    return _ref26.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context54.stop();
            }
        }, _callee54, this);
      }));
      function createUnfollowTypedData(_x59, _x60) {
        return _createUnfollowTypedData.apply(this, arguments);
      }
      return createUnfollowTypedData;
    }()
  }, {
    key: "linkHandle",
    value: function() {
      var _linkHandle = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee56(request) {
        var _this25 = this;
        return _regeneratorRuntime2().wrap(function _callee56$(_context56) {
          while (1)
            switch (_context56.prev = _context56.next) {
              case 0:
                return _context56.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref27 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee55(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee55$(_context55) {
                      while (1)
                        switch (_context55.prev = _context55.next) {
                          case 0:
                            _context55.next = 2;
                            return _this25.sdk.LinkHandleToProfile({
                              request
                            }, headers);
                          case 2:
                            result = _context55.sent;
                            return _context55.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context55.stop();
                        }
                    }, _callee55);
                  }));
                  return function(_x63) {
                    return _ref27.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context56.stop();
            }
        }, _callee56, this);
      }));
      function linkHandle(_x62) {
        return _linkHandle.apply(this, arguments);
      }
      return linkHandle;
    }()
  }, {
    key: "createLinkHandleTypedData",
    value: function() {
      var _createLinkHandleTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee58(request, options) {
        var _this26 = this;
        return _regeneratorRuntime2().wrap(function _callee58$(_context58) {
          while (1)
            switch (_context58.prev = _context58.next) {
              case 0:
                return _context58.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref28 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee57(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee57$(_context57) {
                      while (1)
                        switch (_context57.prev = _context57.next) {
                          case 0:
                            _context57.next = 2;
                            return _this26.sdk.CreateLinkHandleToProfileTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context57.sent;
                            return _context57.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context57.stop();
                        }
                    }, _callee57);
                  }));
                  return function(_x66) {
                    return _ref28.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context58.stop();
            }
        }, _callee58, this);
      }));
      function createLinkHandleTypedData(_x64, _x65) {
        return _createLinkHandleTypedData.apply(this, arguments);
      }
      return createLinkHandleTypedData;
    }()
  }, {
    key: "unlinkHandle",
    value: function() {
      var _unlinkHandle = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee60(request) {
        var _this27 = this;
        return _regeneratorRuntime2().wrap(function _callee60$(_context60) {
          while (1)
            switch (_context60.prev = _context60.next) {
              case 0:
                return _context60.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref29 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee59(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee59$(_context59) {
                      while (1)
                        switch (_context59.prev = _context59.next) {
                          case 0:
                            _context59.next = 2;
                            return _this27.sdk.UnlinkHandleFromProfile({
                              request
                            }, headers);
                          case 2:
                            result = _context59.sent;
                            return _context59.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context59.stop();
                        }
                    }, _callee59);
                  }));
                  return function(_x68) {
                    return _ref29.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context60.stop();
            }
        }, _callee60, this);
      }));
      function unlinkHandle(_x67) {
        return _unlinkHandle.apply(this, arguments);
      }
      return unlinkHandle;
    }()
  }, {
    key: "createUnlinkHandleTypedData",
    value: function() {
      var _createUnlinkHandleTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee62(request, options) {
        var _this28 = this;
        return _regeneratorRuntime2().wrap(function _callee62$(_context62) {
          while (1)
            switch (_context62.prev = _context62.next) {
              case 0:
                return _context62.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref30 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee61(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee61$(_context61) {
                      while (1)
                        switch (_context61.prev = _context61.next) {
                          case 0:
                            _context61.next = 2;
                            return _this28.sdk.CreateUnlinkHandleFromProfileTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context61.sent;
                            return _context61.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context61.stop();
                        }
                    }, _callee61);
                  }));
                  return function(_x71) {
                    return _ref30.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context62.stop();
            }
        }, _callee62, this);
      }));
      function createUnlinkHandleTypedData(_x69, _x70) {
        return _createUnlinkHandleTypedData.apply(this, arguments);
      }
      return createUnlinkHandleTypedData;
    }()
  }, {
    key: "addInterests",
    value: function() {
      var _addInterests = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee64(request) {
        var _this29 = this;
        return _regeneratorRuntime2().wrap(function _callee64$(_context64) {
          while (1)
            switch (_context64.prev = _context64.next) {
              case 0:
                return _context64.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref31 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee63(headers) {
                    return _regeneratorRuntime2().wrap(function _callee63$(_context63) {
                      while (1)
                        switch (_context63.prev = _context63.next) {
                          case 0:
                            _context63.next = 2;
                            return _this29.sdk.AddProfileInterests({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context63.stop();
                        }
                    }, _callee63);
                  }));
                  return function(_x73) {
                    return _ref31.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context64.stop();
            }
        }, _callee64, this);
      }));
      function addInterests(_x72) {
        return _addInterests.apply(this, arguments);
      }
      return addInterests;
    }()
  }, {
    key: "removeInterests",
    value: function() {
      var _removeInterests = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee66(request) {
        var _this30 = this;
        return _regeneratorRuntime2().wrap(function _callee66$(_context66) {
          while (1)
            switch (_context66.prev = _context66.next) {
              case 0:
                return _context66.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref32 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee65(headers) {
                    return _regeneratorRuntime2().wrap(function _callee65$(_context65) {
                      while (1)
                        switch (_context65.prev = _context65.next) {
                          case 0:
                            _context65.next = 2;
                            return _this30.sdk.RemoveProfileInterests({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context65.stop();
                        }
                    }, _callee65);
                  }));
                  return function(_x75) {
                    return _ref32.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context66.stop();
            }
        }, _callee66, this);
      }));
      function removeInterests(_x74) {
        return _removeInterests.apply(this, arguments);
      }
      return removeInterests;
    }()
  }, {
    key: "report",
    value: function() {
      var _report = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee68(request) {
        var _this31 = this;
        return _regeneratorRuntime2().wrap(function _callee68$(_context68) {
          while (1)
            switch (_context68.prev = _context68.next) {
              case 0:
                return _context68.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref33 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee67(headers) {
                    return _regeneratorRuntime2().wrap(function _callee67$(_context67) {
                      while (1)
                        switch (_context67.prev = _context67.next) {
                          case 0:
                            _context67.next = 2;
                            return _this31.sdk.ReportProfile({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context67.stop();
                        }
                    }, _callee67);
                  }));
                  return function(_x77) {
                    return _ref33.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context68.stop();
            }
        }, _callee68, this);
      }));
      function report(_x76) {
        return _report.apply(this, arguments);
      }
      return report;
    }()
  }]);
  return Profile2;
}();
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(r2, l) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e2, n2, i, u, a = [], f2 = true, o2 = false;
    try {
      if (i = (t2 = t2.call(r2)).next, 0 === l) {
        if (Object(t2) !== t2)
          return;
        f2 = false;
      } else
        for (; !(f2 = (e2 = i.call(t2)).done) && (a.push(e2.value), a.length !== l); f2 = true)
          ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2.return && (u = t2.return(), Object(u) !== u))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a;
  }
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o2, minLen);
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
var LensTransactionStatusType = /* @__PURE__ */ function(LensTransactionStatusType2) {
  LensTransactionStatusType2["Complete"] = "COMPLETE";
  LensTransactionStatusType2["Failed"] = "FAILED";
  LensTransactionStatusType2["OptimisticallyUpdated"] = "OPTIMISTICALLY_UPDATED";
  LensTransactionStatusType2["Processing"] = "PROCESSING";
  return LensTransactionStatusType2;
}({});
var LimitType = /* @__PURE__ */ function(LimitType2) {
  LimitType2["Fifty"] = "Fifty";
  LimitType2["Ten"] = "Ten";
  LimitType2["TwentyFive"] = "TwentyFive";
  return LimitType2;
}({});
var PublicationDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Publication" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "publication" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Mirror" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Mirror" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrorOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }] };
var PublicationsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "Publications" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationsRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "publications" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Mirror" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Mirror" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrorOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var PublicationsTagsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "PublicationsTags" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationsTagsRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "publicationsTags" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TagResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TagResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TagResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "tag" } }, { kind: "Field", name: { kind: "Name", value: "total" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var ValidatePublicationMetadataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "ValidatePublicationMetadata" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ValidatePublicationMetadataRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "validatePublicationMetadata" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationValidateMetadataResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationValidateMetadataResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationValidateMetadataResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "valid" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var CreateOnchainPostTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateOnchainPostTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainPostRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createOnchainPostTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateOnchainPostBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateOnchainPostBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateOnchainPostBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Post" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "contentURI" } }, { kind: "Field", name: { kind: "Name", value: "actionModules" } }, { kind: "Field", name: { kind: "Name", value: "actionModulesInitDatas" } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateOnchainCommentTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateOnchainCommentTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainCommentRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createOnchainCommentTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateOnchainCommentBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateOnchainCommentBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateOnchainCommentBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Comment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "contentURI" } }, { kind: "Field", name: { kind: "Name", value: "pointedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "pointedPubId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileIds" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubIds" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleData" } }, { kind: "Field", name: { kind: "Name", value: "actionModules" } }, { kind: "Field", name: { kind: "Name", value: "actionModulesInitDatas" } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateOnchainMirrorTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateOnchainMirrorTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainMirrorRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createOnchainMirrorTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateOnchainMirrorBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateOnchainMirrorBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateOnchainMirrorBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Mirror" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "metadataURI" } }, { kind: "Field", name: { kind: "Name", value: "pointedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "pointedPubId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileIds" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubIds" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateOnchainQuoteTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateOnchainQuoteTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainQuoteRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createOnchainQuoteTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateOnchainQuoteBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateOnchainQuoteBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateOnchainQuoteBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Quote" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataField" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "contentURI" } }, { kind: "Field", name: { kind: "Name", value: "pointedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "pointedPubId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileIds" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubIds" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleData" } }, { kind: "Field", name: { kind: "Name", value: "actionModules" } }, { kind: "Field", name: { kind: "Name", value: "actionModulesInitDatas" } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataField" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataField" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] };
var CreateMomokaPostTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateMomokaPostTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaPostRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createMomokaPostTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaPostBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaPostBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPostBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Post" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "contentURI" } }, { kind: "Field", name: { kind: "Name", value: "actionModules" } }, { kind: "Field", name: { kind: "Name", value: "actionModulesInitDatas" } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateMomokaCommentTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateMomokaCommentTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaCommentRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createMomokaCommentTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaCommentBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaCommentBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaCommentBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Comment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "contentURI" } }, { kind: "Field", name: { kind: "Name", value: "pointedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "pointedPubId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileIds" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubIds" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleData" } }, { kind: "Field", name: { kind: "Name", value: "actionModules" } }, { kind: "Field", name: { kind: "Name", value: "actionModulesInitDatas" } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateMomokaMirrorTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateMomokaMirrorTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaMirrorRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createMomokaMirrorTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaMirrorBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaMirrorBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaMirrorBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Mirror" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "metadataURI" } }, { kind: "Field", name: { kind: "Name", value: "pointedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "pointedPubId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileIds" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubIds" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var CreateMomokaQuoteTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateMomokaQuoteTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaQuoteRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createMomokaQuoteTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaQuoteBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaQuoteBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaQuoteBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "Quote" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }, { kind: "Field", name: { kind: "Name", value: "contentURI" } }, { kind: "Field", name: { kind: "Name", value: "pointedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "pointedPubId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileIds" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubIds" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleData" } }, { kind: "Field", name: { kind: "Name", value: "actionModules" } }, { kind: "Field", name: { kind: "Name", value: "actionModulesInitDatas" } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleInitData" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }] };
var PostOnchainDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "PostOnchain" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainPostRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "postOnchain" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var CommentOnchainDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CommentOnchain" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainCommentRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "commentOnchain" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var MirrorOnchainDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "MirrorOnchain" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainMirrorRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "mirrorOnchain" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var QuoteOnchainDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "QuoteOnchain" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "OnchainQuoteRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "quoteOnchain" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var PostOnMomokaDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "PostOnMomoka" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaPostRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "postOnMomoka" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaPublicationResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }, { kind: "Field", name: { kind: "Name", value: "momokaId" } }] } }] };
var CommentOnMomokaDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CommentOnMomoka" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaCommentRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "commentOnMomoka" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaPublicationResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }, { kind: "Field", name: { kind: "Name", value: "momokaId" } }] } }] };
var MirrorOnMomokaDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "MirrorOnMomoka" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaMirrorRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "mirrorOnMomoka" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaPublicationResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }, { kind: "Field", name: { kind: "Name", value: "momokaId" } }] } }] };
var QuoteOnMomokaDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "QuoteOnMomoka" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "MomokaQuoteRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "quoteOnMomoka" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateMomokaPublicationResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateMomokaPublicationResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }, { kind: "Field", name: { kind: "Name", value: "momokaId" } }] } }] };
var HidePublicationDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "HidePublication" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "HidePublicationRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "hidePublication" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var ReportPublicationDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "ReportPublication" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "ReportPublicationRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "reportPublication" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }] }] } }] };
var LegacyCollectDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "LegacyCollect" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "LegacyCollectRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "legacyCollect" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RelaySuccess" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LensProfileManagerRelayError" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RelaySuccess" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RelaySuccess" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "txId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LensProfileManagerRelayError" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LensProfileManagerRelayError" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "reason" } }] } }] };
var CreateLegacyCollectTypedDataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "CreateLegacyCollectTypedData" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "LegacyCollectRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "options" } }, type: { kind: "NamedType", name: { kind: "Name", value: "TypedDataOptions" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "createLegacyCollectTypedData" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }, { kind: "Argument", name: { kind: "Name", value: "options" }, value: { kind: "Variable", name: { kind: "Name", value: "options" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateLegacyCollectBroadcastItemResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateLegacyCollectEIP712TypedData" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateLegacyCollectEIP712TypedData" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "types" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "CollectLegacy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataField" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "domain" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EIP712TypedDataDomain" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "nonce" } }, { kind: "Field", name: { kind: "Name", value: "deadline" } }, { kind: "Field", name: { kind: "Name", value: "publicationCollectedProfileId" } }, { kind: "Field", name: { kind: "Name", value: "publicationCollectedId" } }, { kind: "Field", name: { kind: "Name", value: "collectorProfileId" } }, { kind: "Field", name: { kind: "Name", value: "referrerProfileId" } }, { kind: "Field", name: { kind: "Name", value: "referrerPubId" } }, { kind: "Field", name: { kind: "Name", value: "collectModuleData" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CreateLegacyCollectBroadcastItemResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CreateLegacyCollectBroadcastItemResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "expiresAt" } }, { kind: "Field", name: { kind: "Name", value: "typedData" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CreateLegacyCollectEIP712TypedData" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataDomain" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataDomain" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "version" } }, { kind: "Field", name: { kind: "Name", value: "verifyingContract" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EIP712TypedDataField" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EIP712TypedDataField" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }] };
var RefreshPublicationMetadataDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "mutation", name: { kind: "Name", value: "RefreshPublicationMetadata" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "RefreshPublicationMetadataRequest" } } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "refreshPublicationMetadata" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "result" } }] } }] } }] };
var defaultWrapper$8 = function defaultWrapper12(action, _operationName, _operationType) {
  return action();
};
var PublicationDocumentString = print(PublicationDocument);
var PublicationsDocumentString = print(PublicationsDocument);
var PublicationsTagsDocumentString = print(PublicationsTagsDocument);
var ValidatePublicationMetadataDocumentString = print(ValidatePublicationMetadataDocument);
var CreateOnchainPostTypedDataDocumentString = print(CreateOnchainPostTypedDataDocument);
var CreateOnchainCommentTypedDataDocumentString = print(CreateOnchainCommentTypedDataDocument);
var CreateOnchainMirrorTypedDataDocumentString = print(CreateOnchainMirrorTypedDataDocument);
var CreateOnchainQuoteTypedDataDocumentString = print(CreateOnchainQuoteTypedDataDocument);
var CreateMomokaPostTypedDataDocumentString = print(CreateMomokaPostTypedDataDocument);
var CreateMomokaCommentTypedDataDocumentString = print(CreateMomokaCommentTypedDataDocument);
var CreateMomokaMirrorTypedDataDocumentString = print(CreateMomokaMirrorTypedDataDocument);
var CreateMomokaQuoteTypedDataDocumentString = print(CreateMomokaQuoteTypedDataDocument);
var PostOnchainDocumentString = print(PostOnchainDocument);
var CommentOnchainDocumentString = print(CommentOnchainDocument);
var MirrorOnchainDocumentString = print(MirrorOnchainDocument);
var QuoteOnchainDocumentString = print(QuoteOnchainDocument);
var PostOnMomokaDocumentString = print(PostOnMomokaDocument);
var CommentOnMomokaDocumentString = print(CommentOnMomokaDocument);
var MirrorOnMomokaDocumentString = print(MirrorOnMomokaDocument);
var QuoteOnMomokaDocumentString = print(QuoteOnMomokaDocument);
var HidePublicationDocumentString = print(HidePublicationDocument);
var ReportPublicationDocumentString = print(ReportPublicationDocument);
var LegacyCollectDocumentString = print(LegacyCollectDocument);
var CreateLegacyCollectTypedDataDocumentString = print(CreateLegacyCollectTypedDataDocument);
var RefreshPublicationMetadataDocumentString = print(RefreshPublicationMetadataDocument);
function getSdk$8(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$8;
  return { Publication: function Publication2(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(PublicationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Publication", "query");
  }, Publications: function Publications(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(PublicationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "Publications", "query");
  }, PublicationsTags: function PublicationsTags(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(PublicationsTagsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "PublicationsTags", "query");
  }, ValidatePublicationMetadata: function ValidatePublicationMetadata(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ValidatePublicationMetadataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "ValidatePublicationMetadata", "query");
  }, CreateOnchainPostTypedData: function CreateOnchainPostTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateOnchainPostTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateOnchainPostTypedData", "mutation");
  }, CreateOnchainCommentTypedData: function CreateOnchainCommentTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateOnchainCommentTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateOnchainCommentTypedData", "mutation");
  }, CreateOnchainMirrorTypedData: function CreateOnchainMirrorTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateOnchainMirrorTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateOnchainMirrorTypedData", "mutation");
  }, CreateOnchainQuoteTypedData: function CreateOnchainQuoteTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateOnchainQuoteTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateOnchainQuoteTypedData", "mutation");
  }, CreateMomokaPostTypedData: function CreateMomokaPostTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateMomokaPostTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateMomokaPostTypedData", "mutation");
  }, CreateMomokaCommentTypedData: function CreateMomokaCommentTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateMomokaCommentTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateMomokaCommentTypedData", "mutation");
  }, CreateMomokaMirrorTypedData: function CreateMomokaMirrorTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateMomokaMirrorTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateMomokaMirrorTypedData", "mutation");
  }, CreateMomokaQuoteTypedData: function CreateMomokaQuoteTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateMomokaQuoteTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateMomokaQuoteTypedData", "mutation");
  }, PostOnchain: function PostOnchain(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(PostOnchainDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "PostOnchain", "mutation");
  }, CommentOnchain: function CommentOnchain(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CommentOnchainDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CommentOnchain", "mutation");
  }, MirrorOnchain: function MirrorOnchain(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(MirrorOnchainDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "MirrorOnchain", "mutation");
  }, QuoteOnchain: function QuoteOnchain(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(QuoteOnchainDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "QuoteOnchain", "mutation");
  }, PostOnMomoka: function PostOnMomoka(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(PostOnMomokaDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "PostOnMomoka", "mutation");
  }, CommentOnMomoka: function CommentOnMomoka(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CommentOnMomokaDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CommentOnMomoka", "mutation");
  }, MirrorOnMomoka: function MirrorOnMomoka(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(MirrorOnMomokaDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "MirrorOnMomoka", "mutation");
  }, QuoteOnMomoka: function QuoteOnMomoka(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(QuoteOnMomokaDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "QuoteOnMomoka", "mutation");
  }, HidePublication: function HidePublication(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(HidePublicationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "HidePublication", "mutation");
  }, ReportPublication: function ReportPublication(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(ReportPublicationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "ReportPublication", "mutation");
  }, LegacyCollect: function LegacyCollect(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(LegacyCollectDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "LegacyCollect", "mutation");
  }, CreateLegacyCollectTypedData: function CreateLegacyCollectTypedData(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(CreateLegacyCollectTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "CreateLegacyCollectTypedData", "mutation");
  }, RefreshPublicationMetadata: function RefreshPublicationMetadata(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(RefreshPublicationMetadataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "RefreshPublicationMetadata", "mutation");
  } };
}
var PublicationBookmarksDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "PublicationBookmarks"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationBookmarksRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationImageTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationOperationsActedArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "PublicationOperationsActedArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationStatsInput"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationStatsInput"
          }
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationStatsCountOpenActionArgs"
          }
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "publicationBookmarks"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Post"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Post"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Comment"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Comment"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Mirror"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Mirror"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Quote"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Quote"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Post"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Post"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "App"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "App"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "proof"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationOperations"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationOperations"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isNotInterested"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasBookmarked"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasReported"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canAct"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasActed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "OptimisticStatusResult"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "actedOn"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "OpenActionResult"
            }
          }]
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "hasUpvoted"
        },
        name: {
          kind: "Name",
          value: "hasReacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "hasDownvoted"
        },
        name: {
          kind: "Name",
          value: "hasReacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canComment"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canMirror"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canQuote"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasMirrored"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canDecrypt"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CanDecryptResponse"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "InlineFragment",
        typeCondition: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "KnownCollectOpenActionResult"
          }
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "KnownCollectOpenActionResult"
            }
          }]
        }
      }, {
        kind: "InlineFragment",
        typeCondition: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "UnknownOpenActionResult"
          }
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "UnknownOpenActionResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownCollectOpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownCollectOpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownOpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownOpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "category"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initReturnData"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CanDecryptResponse"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CanDecryptResponse"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "result"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reasons"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "extraDetails"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AudioMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AudioMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaAudio"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MarketplaceMetadata"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MarketplaceMetadata"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "externalURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMarketplaceMetadataAttribute"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "animationUrl"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMarketplaceMetadataAttribute"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMarketplaceMetadataAttribute"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "displayType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "traitType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ImageSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationImageTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataLitEncryption"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataLitEncryption"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptionKey"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "accessCondition"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "RootCondition"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedPaths"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RootCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RootCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AndCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AndCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "OrCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OrCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenIds"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20OwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20OwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "condition"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EoaOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EoaOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "profileId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FollowCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FollowCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "follow"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CollectCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CollectCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publicationId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "thisPublication"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AndCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AndCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AdvancedContractCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AdvancedContractCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "functionName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "abi"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "params"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comparison"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OrCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OrCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaAudio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaAudio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "audio"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableAudioSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "cover"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "duration"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "credits"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "artist"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "genre"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recordLabel"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "lyrics"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableAudioSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableAudioSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableAudio"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Audio"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableAudio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableAudio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Audio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Audio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableImageSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImage"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaVideo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaVideo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "video"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableVideoSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "cover"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "duration"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "altTag"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableVideoSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableVideoSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableVideo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Video"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableVideo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableVideo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Video"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Video"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "altTag"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "VideoMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "VideoMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaVideo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isShortVideo"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ImageMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaImage"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ArticleMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ArticleMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EventMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EventMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "geographic"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "GeoLocation"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "links"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "location"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "GeoLocation"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "GeoLocation"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "latitude"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "longitude"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LinkMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LinkMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sharingLink"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EmbedMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EmbedMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "embed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CheckingInMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CheckingInMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "location"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "geographic"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "GeoLocation"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "TextOnlyMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "TextOnlyMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ThreeDMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ThreeDMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "assets"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ThreeDMetadataV3Asset"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ThreeDMetadataV3Asset"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ThreeDMetadataV3Asset"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "zipPath"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "playerURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "format"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "StoryMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "StoryMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "TransactionMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "TransactionMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MintMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MintMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mintLink"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "SpaceMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "SpaceMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "link"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LiveStreamMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LiveStreamMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "playbackURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "liveURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "checkLiveAPI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyFreeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyFreeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyLimitedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyLimitedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyLimitedTimedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyLimitedTimedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endTimestamp"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyRevertCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyRevertCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyTimedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyTimedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endTimestamp"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyMultirecipientFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyMultirecipientFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipients"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "recipient"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "split"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacySimpleCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacySimpleCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyERC4626FeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyERC4626FeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "vault"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyAaveFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyAaveFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MultirecipientFeeCollectOpenActionSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MultirecipientFeeCollectOpenActionSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipients"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "recipient"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "split"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "SimpleCollectOpenActionSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "SimpleCollectOpenActionSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownOpenActionModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownOpenActionModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectNft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FollowOnlyReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FollowOnlyReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "DegreesOfSeparationReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "DegreesOfSeparationReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentsRestricted"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrorsRestricted"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "degreesOfSeparation"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "bookmarks"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Comment"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Comment"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "FragmentSpread",
        name: {
          kind: "Name",
          value: "CommentBase"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "root"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Post"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Post"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CommentBase"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "QuoteBase"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "firstComment"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CommentBase"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CommentBase"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Comment"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "QuoteBase"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Quote"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Mirror"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Mirror"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrorOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Post"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Comment"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Quote"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Quote"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Quote"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "FragmentSpread",
        name: {
          kind: "Name",
          value: "QuoteBase"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quoteOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Post"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CommentBase"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "QuoteBase"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var AddPublicationBookmarkDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "AddPublicationBookmark"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationBookmarkRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "addPublicationBookmark"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var RemovePublicationBookmarkDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "RemovePublicationBookmark"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationBookmarkRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "removePublicationBookmark"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var defaultWrapper$7 = function defaultWrapper13(action, _operationName, _operationType) {
  return action();
};
var PublicationBookmarksDocumentString = print(PublicationBookmarksDocument);
var AddPublicationBookmarkDocumentString = print(AddPublicationBookmarkDocument);
var RemovePublicationBookmarkDocumentString = print(RemovePublicationBookmarkDocument);
function getSdk$7(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$7;
  return {
    PublicationBookmarks: function PublicationBookmarks(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(PublicationBookmarksDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "PublicationBookmarks", "query");
    },
    AddPublicationBookmark: function AddPublicationBookmark(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AddPublicationBookmarkDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AddPublicationBookmark", "mutation");
    },
    RemovePublicationBookmark: function RemovePublicationBookmark(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(RemovePublicationBookmarkDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "RemovePublicationBookmark", "mutation");
    }
  };
}
var Bookmarks = /* @__PURE__ */ function() {
  function Bookmarks2(context, authentication) {
    _classCallCheck3(this, Bookmarks2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$7(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Bookmarks2, [{
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3() {
        var _this = this;
        var request, _args3 = arguments;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                request = _args3.length > 0 && _args3[0] !== void 0 ? _args3[0] : {};
                return _context3.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(headers) {
                    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                      while (1)
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                              var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                                var result;
                                return _regeneratorRuntime2().wrap(function _callee$(_context) {
                                  while (1)
                                    switch (_context.prev = _context.next) {
                                      case 0:
                                        _context.next = 2;
                                        return _this.sdk.PublicationBookmarks(_objectSpread2({
                                          request: currRequest
                                        }, buildRequestFromConfig(_this.context)), headers);
                                      case 2:
                                        result = _context.sent;
                                        return _context.abrupt("return", result.data.result);
                                      case 4:
                                      case "end":
                                        return _context.stop();
                                    }
                                }, _callee);
                              }));
                              return function(_x2) {
                                return _ref2.apply(this, arguments);
                              };
                            }(), request));
                          case 1:
                          case "end":
                            return _context2.stop();
                        }
                    }, _callee2);
                  }));
                  return function(_x) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 2:
              case "end":
                return _context3.stop();
            }
        }, _callee3, this);
      }));
      function fetch2() {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "add",
    value: function() {
      var _add = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(headers) {
                    return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                      while (1)
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.next = 2;
                            return _this2.sdk.AddPublicationBookmark({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context4.stop();
                        }
                    }, _callee4);
                  }));
                  return function(_x4) {
                    return _ref3.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context5.stop();
            }
        }, _callee5, this);
      }));
      function add3(_x3) {
        return _add.apply(this, arguments);
      }
      return add3;
    }()
  }, {
    key: "remove",
    value: function() {
      var _remove = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(headers) {
                    return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
                      while (1)
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            _context6.next = 2;
                            return _this3.sdk.RemovePublicationBookmark({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context6.stop();
                        }
                    }, _callee6);
                  }));
                  return function(_x6) {
                    return _ref4.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context7.stop();
            }
        }, _callee7, this);
      }));
      function remove(_x5) {
        return _remove.apply(this, arguments);
      }
      return remove;
    }()
  }]);
  return Bookmarks2;
}();
var AddReactionDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "AddReaction"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ReactionRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "addReaction"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var RemoveReactionDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "RemoveReaction"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ReactionRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "removeReaction"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var WhoReactedPublicationDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "WhoReactedPublication"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "WhoReactedPublicationRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "whoReactedPublication"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileWhoReactedResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileReactionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileReactionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "reaction"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reactionAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileWhoReactedResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileWhoReactedResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "profile"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reactions"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileReactionResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var defaultWrapper$6 = function defaultWrapper14(action, _operationName, _operationType) {
  return action();
};
var AddReactionDocumentString = print(AddReactionDocument);
var RemoveReactionDocumentString = print(RemoveReactionDocument);
var WhoReactedPublicationDocumentString = print(WhoReactedPublicationDocument);
function getSdk$6(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$6;
  return {
    AddReaction: function AddReaction(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AddReactionDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AddReaction", "mutation");
    },
    RemoveReaction: function RemoveReaction(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(RemoveReactionDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "RemoveReaction", "mutation");
    },
    WhoReactedPublication: function WhoReactedPublication(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(WhoReactedPublicationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "WhoReactedPublication", "query");
    }
  };
}
var Reactions = /* @__PURE__ */ function() {
  function Reactions2(context, authentication) {
    _classCallCheck3(this, Reactions2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$6(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Reactions2, [{
    key: "add",
    value: function() {
      var _add = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(headers) {
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.AddReaction({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function add3(_x) {
        return _add.apply(this, arguments);
      }
      return add3;
    }()
  }, {
    key: "remove",
    value: function() {
      var _remove = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(headers) {
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.RemoveReaction({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function remove(_x3) {
        return _remove.apply(this, arguments);
      }
      return remove;
    }()
  }, {
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.next = 2;
                            return _this3.sdk.WhoReactedPublication(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this3.context)));
                          case 2:
                            result = _context5.sent;
                            return _context5.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x6) {
                    return _ref3.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6);
      }));
      function fetch2(_x5) {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }]);
  return Reactions2;
}();
var AddPublicationNotInterestedDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "AddPublicationNotInterested"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationNotInterestedRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "addPublicationNotInterested"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var UndoPublicationNotInterestedDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "UndoPublicationNotInterested"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationNotInterestedRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "undoPublicationNotInterested"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }]
      }]
    }
  }]
};
var defaultWrapper$5 = function defaultWrapper15(action, _operationName, _operationType) {
  return action();
};
var AddPublicationNotInterestedDocumentString = print(AddPublicationNotInterestedDocument);
var UndoPublicationNotInterestedDocumentString = print(UndoPublicationNotInterestedDocument);
function getSdk$5(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$5;
  return {
    AddPublicationNotInterested: function AddPublicationNotInterested(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(AddPublicationNotInterestedDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "AddPublicationNotInterested", "mutation");
    },
    UndoPublicationNotInterested: function UndoPublicationNotInterested(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(UndoPublicationNotInterestedDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "UndoPublicationNotInterested", "mutation");
    }
  };
}
var NotInterested = /* @__PURE__ */ function() {
  function NotInterested2(context, authentication) {
    _classCallCheck3(this, NotInterested2);
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$5(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(NotInterested2, [{
    key: "add",
    value: function() {
      var _add = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(headers) {
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.AddPublicationNotInterested({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function add3(_x) {
        return _add.apply(this, arguments);
      }
      return add3;
    }()
  }, {
    key: "undo",
    value: function() {
      var _undo = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(headers) {
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.UndoPublicationNotInterested({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function undo(_x3) {
        return _undo.apply(this, arguments);
      }
      return undo;
    }()
  }]);
  return NotInterested2;
}();
var ActOnOpenActionDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "ActOnOpenAction"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ActOnOpenActionLensManagerRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "actOnOpenAction"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RelaySuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RelaySuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LensProfileManagerRelayError"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LensProfileManagerRelayError"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelaySuccess"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelaySuccess"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LensProfileManagerRelayError"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LensProfileManagerRelayError"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reason"
        }
      }]
    }
  }]
};
var CreateActOnOpenActionTypedDataDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "CreateActOnOpenActionTypedData"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ActOnOpenActionRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "options"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "TypedDataOptions"
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "createActOnOpenActionTypedData"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }, {
          kind: "Argument",
          name: {
            kind: "Name",
            value: "options"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "options"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CreateActOnOpenActionBroadcastItemResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CreateActOnOpenActionEIP712TypedData"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CreateActOnOpenActionEIP712TypedData"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "types"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "Act"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EIP712TypedDataField"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "domain"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EIP712TypedDataDomain"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "nonce"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "deadline"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "publicationActedProfileId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "publicationActedId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "actorProfileId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "referrerProfileIds"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "referrerPubIds"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "actionModuleAddress"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "actionModuleData"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CreateActOnOpenActionBroadcastItemResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CreateActOnOpenActionBroadcastItemResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiresAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "typedData"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CreateActOnOpenActionEIP712TypedData"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EIP712TypedDataField"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EIP712TypedDataField"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EIP712TypedDataDomain"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EIP712TypedDataDomain"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "version"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verifyingContract"
        }
      }]
    }
  }]
};
var defaultWrapper$4 = function defaultWrapper16(action, _operationName, _operationType) {
  return action();
};
var ActOnOpenActionDocumentString = print(ActOnOpenActionDocument);
var CreateActOnOpenActionTypedDataDocumentString = print(CreateActOnOpenActionTypedDataDocument);
function getSdk$4(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$4;
  return {
    ActOnOpenAction: function ActOnOpenAction(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ActOnOpenActionDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ActOnOpenAction", "mutation");
    },
    CreateActOnOpenActionTypedData: function CreateActOnOpenActionTypedData(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(CreateActOnOpenActionTypedDataDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "CreateActOnOpenActionTypedData", "mutation");
    }
  };
}
var Actions = /* @__PURE__ */ function() {
  function Actions2(context, authentication) {
    _classCallCheck3(this, Actions2);
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$4(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Actions2, [{
    key: "actOn",
    value: function() {
      var _actOn = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.ActOnOpenAction({
                              request
                            }, headers);
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function actOn(_x) {
        return _actOn.apply(this, arguments);
      }
      return actOn;
    }()
  }, {
    key: "createActOnTypedData",
    value: function() {
      var _createActOnTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request, options) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.CreateActOnOpenActionTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x5) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function createActOnTypedData(_x3, _x4) {
        return _createActOnTypedData.apply(this, arguments);
      }
      return createActOnTypedData;
    }()
  }]);
  return Actions2;
}();
var Publication = /* @__PURE__ */ function() {
  function Publication2(context, authentication) {
    _classCallCheck3(this, Publication2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$8(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Publication2, [{
    key: "bookmarks",
    get: function get() {
      return new Bookmarks(this.context, this.authentication);
    }
    /**
     * The Reactions module
     */
  }, {
    key: "reactions",
    get: function get() {
      return new Reactions(this.context, this.authentication);
    }
    /**
     * The NotInterested module
     */
  }, {
    key: "notInterested",
    get: function get() {
      return new NotInterested(this.context, this.authentication);
    }
    /**
     * The Actions module
     */
  }, {
    key: "actions",
    get: function get() {
      return new Actions(this.context, this.authentication);
    }
    /**
     * Fetch a publication
     *
     * @param request - Request object for the query
     * @param options - Additional options for the query
     * @returns {@link AnyPublicationFragment} or null if not found
     *
     * @example
     * ```ts
     * const result = await client.publication.fetch({
     *   forId: '0x123-0x456',
     * });
     * ```
     */
  }, {
    key: "fetch",
    value: function() {
      var _fetch = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(request, options) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.sdk.Publication(_objectSpread2(_objectSpread2({
                  request
                }, buildRequestFromConfig(this.context)), options));
              case 2:
                result = _context.sent;
                return _context.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function fetch2(_x, _x2) {
        return _fetch.apply(this, arguments);
      }
      return fetch2;
    }()
  }, {
    key: "fetchAll",
    value: function() {
      var _fetchAll = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(request, options) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
          while (1)
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
                      while (1)
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.next = 2;
                            return _this.sdk.Publications(_objectSpread2(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this.context)), options));
                          case 2:
                            result = _context2.sent;
                            return _context2.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context2.stop();
                        }
                    }, _callee2);
                  }));
                  return function(_x5) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context3.stop();
            }
        }, _callee3);
      }));
      function fetchAll(_x3, _x4) {
        return _fetchAll.apply(this, arguments);
      }
      return fetchAll;
    }()
  }, {
    key: "tags",
    value: function() {
      var _tags = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5() {
        var _this2 = this;
        var request, _args5 = arguments;
        return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
          while (1)
            switch (_context5.prev = _context5.next) {
              case 0:
                request = _args5.length > 0 && _args5[0] !== void 0 ? _args5[0] : {};
                return _context5.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
                      while (1)
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.next = 2;
                            return _this2.sdk.PublicationsTags({
                              request: currRequest
                            });
                          case 2:
                            result = _context4.sent;
                            return _context4.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context4.stop();
                        }
                    }, _callee4);
                  }));
                  return function(_x6) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 2:
              case "end":
                return _context5.stop();
            }
        }, _callee5);
      }));
      function tags() {
        return _tags.apply(this, arguments);
      }
      return tags;
    }()
  }, {
    key: "validateMetadata",
    value: function() {
      var _validateMetadata = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.sdk.ValidatePublicationMetadata({
                  request
                });
              case 2:
                result = _context6.sent;
                return _context6.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function validateMetadata(_x7) {
        return _validateMetadata.apply(this, arguments);
      }
      return validateMetadata;
    }()
  }, {
    key: "refreshMetadata",
    value: function() {
      var _refreshMetadata = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.sdk.RefreshPublicationMetadata({
                  request
                });
              case 2:
                result = _context7.sent;
                return _context7.abrupt("return", result.data.result.result);
              case 4:
              case "end":
                return _context7.stop();
            }
        }, _callee7, this);
      }));
      function refreshMetadata(_x8) {
        return _refreshMetadata.apply(this, arguments);
      }
      return refreshMetadata;
    }()
  }, {
    key: "hide",
    value: function() {
      var _hide = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
          while (1)
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8(headers) {
                    return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
                      while (1)
                        switch (_context8.prev = _context8.next) {
                          case 0:
                            _context8.next = 2;
                            return _this3.sdk.HidePublication({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context8.stop();
                        }
                    }, _callee8);
                  }));
                  return function(_x10) {
                    return _ref3.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context9.stop();
            }
        }, _callee9, this);
      }));
      function hide(_x9) {
        return _hide.apply(this, arguments);
      }
      return hide;
    }()
  }, {
    key: "report",
    value: function() {
      var _report = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee11(request) {
        var _this4 = this;
        return _regeneratorRuntime2().wrap(function _callee11$(_context11) {
          while (1)
            switch (_context11.prev = _context11.next) {
              case 0:
                return _context11.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee10(headers) {
                    return _regeneratorRuntime2().wrap(function _callee10$(_context10) {
                      while (1)
                        switch (_context10.prev = _context10.next) {
                          case 0:
                            _context10.next = 2;
                            return _this4.sdk.ReportPublication({
                              request
                            }, headers);
                          case 2:
                          case "end":
                            return _context10.stop();
                        }
                    }, _callee10);
                  }));
                  return function(_x12) {
                    return _ref4.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context11.stop();
            }
        }, _callee11, this);
      }));
      function report(_x11) {
        return _report.apply(this, arguments);
      }
      return report;
    }()
  }, {
    key: "postOnchain",
    value: function() {
      var _postOnchain = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee13(request, overwrites) {
        var _this5 = this;
        var overwrittenHeaders, result;
        return _regeneratorRuntime2().wrap(function _callee13$(_context13) {
          while (1)
            switch (_context13.prev = _context13.next) {
              case 0:
                if (!(overwrites !== null && overwrites !== void 0 && overwrites.accessToken)) {
                  _context13.next = 6;
                  break;
                }
                overwrittenHeaders = buildAuthorizationHeader(overwrites.accessToken);
                _context13.next = 4;
                return this.sdk.PostOnchain({
                  request
                }, overwrittenHeaders);
              case 4:
                result = _context13.sent;
                return _context13.abrupt("return", success(result.data.result));
              case 6:
                return _context13.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee12(headers) {
                    var result2;
                    return _regeneratorRuntime2().wrap(function _callee12$(_context12) {
                      while (1)
                        switch (_context12.prev = _context12.next) {
                          case 0:
                            _context12.next = 2;
                            return _this5.sdk.PostOnchain({
                              request
                            }, headers);
                          case 2:
                            result2 = _context12.sent;
                            return _context12.abrupt("return", result2.data.result);
                          case 4:
                          case "end":
                            return _context12.stop();
                        }
                    }, _callee12);
                  }));
                  return function(_x15) {
                    return _ref5.apply(this, arguments);
                  };
                }()));
              case 7:
              case "end":
                return _context13.stop();
            }
        }, _callee13, this);
      }));
      function postOnchain(_x13, _x14) {
        return _postOnchain.apply(this, arguments);
      }
      return postOnchain;
    }()
  }, {
    key: "commentOnchain",
    value: function() {
      var _commentOnchain = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee15(request) {
        var _this6 = this;
        return _regeneratorRuntime2().wrap(function _callee15$(_context15) {
          while (1)
            switch (_context15.prev = _context15.next) {
              case 0:
                return _context15.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref6 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee14(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee14$(_context14) {
                      while (1)
                        switch (_context14.prev = _context14.next) {
                          case 0:
                            _context14.next = 2;
                            return _this6.sdk.CommentOnchain({
                              request
                            }, headers);
                          case 2:
                            result = _context14.sent;
                            return _context14.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context14.stop();
                        }
                    }, _callee14);
                  }));
                  return function(_x17) {
                    return _ref6.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context15.stop();
            }
        }, _callee15, this);
      }));
      function commentOnchain(_x16) {
        return _commentOnchain.apply(this, arguments);
      }
      return commentOnchain;
    }()
  }, {
    key: "mirrorOnchain",
    value: function() {
      var _mirrorOnchain = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee17(request) {
        var _this7 = this;
        return _regeneratorRuntime2().wrap(function _callee17$(_context17) {
          while (1)
            switch (_context17.prev = _context17.next) {
              case 0:
                return _context17.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref7 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee16(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee16$(_context16) {
                      while (1)
                        switch (_context16.prev = _context16.next) {
                          case 0:
                            _context16.next = 2;
                            return _this7.sdk.MirrorOnchain({
                              request
                            }, headers);
                          case 2:
                            result = _context16.sent;
                            return _context16.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context16.stop();
                        }
                    }, _callee16);
                  }));
                  return function(_x19) {
                    return _ref7.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context17.stop();
            }
        }, _callee17, this);
      }));
      function mirrorOnchain(_x18) {
        return _mirrorOnchain.apply(this, arguments);
      }
      return mirrorOnchain;
    }()
  }, {
    key: "quoteOnchain",
    value: function() {
      var _quoteOnchain = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee19(request) {
        var _this8 = this;
        return _regeneratorRuntime2().wrap(function _callee19$(_context19) {
          while (1)
            switch (_context19.prev = _context19.next) {
              case 0:
                return _context19.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref8 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee18(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee18$(_context18) {
                      while (1)
                        switch (_context18.prev = _context18.next) {
                          case 0:
                            _context18.next = 2;
                            return _this8.sdk.QuoteOnchain({
                              request
                            }, headers);
                          case 2:
                            result = _context18.sent;
                            return _context18.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context18.stop();
                        }
                    }, _callee18);
                  }));
                  return function(_x21) {
                    return _ref8.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context19.stop();
            }
        }, _callee19, this);
      }));
      function quoteOnchain(_x20) {
        return _quoteOnchain.apply(this, arguments);
      }
      return quoteOnchain;
    }()
  }, {
    key: "postOnMomoka",
    value: function() {
      var _postOnMomoka = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee21(request) {
        var _this9 = this;
        return _regeneratorRuntime2().wrap(function _callee21$(_context21) {
          while (1)
            switch (_context21.prev = _context21.next) {
              case 0:
                return _context21.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref9 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee20(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee20$(_context20) {
                      while (1)
                        switch (_context20.prev = _context20.next) {
                          case 0:
                            _context20.next = 2;
                            return _this9.sdk.PostOnMomoka({
                              request
                            }, headers);
                          case 2:
                            result = _context20.sent;
                            return _context20.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context20.stop();
                        }
                    }, _callee20);
                  }));
                  return function(_x23) {
                    return _ref9.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context21.stop();
            }
        }, _callee21, this);
      }));
      function postOnMomoka(_x22) {
        return _postOnMomoka.apply(this, arguments);
      }
      return postOnMomoka;
    }()
  }, {
    key: "commentOnMomoka",
    value: function() {
      var _commentOnMomoka = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee23(request) {
        var _this10 = this;
        return _regeneratorRuntime2().wrap(function _callee23$(_context23) {
          while (1)
            switch (_context23.prev = _context23.next) {
              case 0:
                return _context23.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref10 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee22(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee22$(_context22) {
                      while (1)
                        switch (_context22.prev = _context22.next) {
                          case 0:
                            _context22.next = 2;
                            return _this10.sdk.CommentOnMomoka({
                              request
                            }, headers);
                          case 2:
                            result = _context22.sent;
                            return _context22.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context22.stop();
                        }
                    }, _callee22);
                  }));
                  return function(_x25) {
                    return _ref10.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context23.stop();
            }
        }, _callee23, this);
      }));
      function commentOnMomoka(_x24) {
        return _commentOnMomoka.apply(this, arguments);
      }
      return commentOnMomoka;
    }()
  }, {
    key: "mirrorOnMomoka",
    value: function() {
      var _mirrorOnMomoka = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee25(request) {
        var _this11 = this;
        return _regeneratorRuntime2().wrap(function _callee25$(_context25) {
          while (1)
            switch (_context25.prev = _context25.next) {
              case 0:
                return _context25.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref11 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee24(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee24$(_context24) {
                      while (1)
                        switch (_context24.prev = _context24.next) {
                          case 0:
                            _context24.next = 2;
                            return _this11.sdk.MirrorOnMomoka({
                              request
                            }, headers);
                          case 2:
                            result = _context24.sent;
                            return _context24.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context24.stop();
                        }
                    }, _callee24);
                  }));
                  return function(_x27) {
                    return _ref11.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context25.stop();
            }
        }, _callee25, this);
      }));
      function mirrorOnMomoka(_x26) {
        return _mirrorOnMomoka.apply(this, arguments);
      }
      return mirrorOnMomoka;
    }()
  }, {
    key: "quoteOnMomoka",
    value: function() {
      var _quoteOnMomoka = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee27(request) {
        var _this12 = this;
        return _regeneratorRuntime2().wrap(function _callee27$(_context27) {
          while (1)
            switch (_context27.prev = _context27.next) {
              case 0:
                return _context27.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref12 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee26(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee26$(_context26) {
                      while (1)
                        switch (_context26.prev = _context26.next) {
                          case 0:
                            _context26.next = 2;
                            return _this12.sdk.QuoteOnMomoka({
                              request
                            }, headers);
                          case 2:
                            result = _context26.sent;
                            return _context26.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context26.stop();
                        }
                    }, _callee26);
                  }));
                  return function(_x29) {
                    return _ref12.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context27.stop();
            }
        }, _callee27, this);
      }));
      function quoteOnMomoka(_x28) {
        return _quoteOnMomoka.apply(this, arguments);
      }
      return quoteOnMomoka;
    }()
  }, {
    key: "createOnchainPostTypedData",
    value: function() {
      var _createOnchainPostTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee29(request, options) {
        var _this13 = this;
        return _regeneratorRuntime2().wrap(function _callee29$(_context29) {
          while (1)
            switch (_context29.prev = _context29.next) {
              case 0:
                return _context29.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref13 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee28(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee28$(_context28) {
                      while (1)
                        switch (_context28.prev = _context28.next) {
                          case 0:
                            _context28.next = 2;
                            return _this13.sdk.CreateOnchainPostTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context28.sent;
                            return _context28.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context28.stop();
                        }
                    }, _callee28);
                  }));
                  return function(_x32) {
                    return _ref13.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context29.stop();
            }
        }, _callee29, this);
      }));
      function createOnchainPostTypedData(_x30, _x31) {
        return _createOnchainPostTypedData.apply(this, arguments);
      }
      return createOnchainPostTypedData;
    }()
  }, {
    key: "createOnchainCommentTypedData",
    value: function() {
      var _createOnchainCommentTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee31(request, options) {
        var _this14 = this;
        return _regeneratorRuntime2().wrap(function _callee31$(_context31) {
          while (1)
            switch (_context31.prev = _context31.next) {
              case 0:
                return _context31.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref14 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee30(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee30$(_context30) {
                      while (1)
                        switch (_context30.prev = _context30.next) {
                          case 0:
                            _context30.next = 2;
                            return _this14.sdk.CreateOnchainCommentTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context30.sent;
                            return _context30.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context30.stop();
                        }
                    }, _callee30);
                  }));
                  return function(_x35) {
                    return _ref14.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context31.stop();
            }
        }, _callee31, this);
      }));
      function createOnchainCommentTypedData(_x33, _x34) {
        return _createOnchainCommentTypedData.apply(this, arguments);
      }
      return createOnchainCommentTypedData;
    }()
  }, {
    key: "createOnchainMirrorTypedData",
    value: function() {
      var _createOnchainMirrorTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee33(request, options) {
        var _this15 = this;
        return _regeneratorRuntime2().wrap(function _callee33$(_context33) {
          while (1)
            switch (_context33.prev = _context33.next) {
              case 0:
                return _context33.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref15 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee32(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee32$(_context32) {
                      while (1)
                        switch (_context32.prev = _context32.next) {
                          case 0:
                            _context32.next = 2;
                            return _this15.sdk.CreateOnchainMirrorTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context32.sent;
                            return _context32.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context32.stop();
                        }
                    }, _callee32);
                  }));
                  return function(_x38) {
                    return _ref15.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context33.stop();
            }
        }, _callee33, this);
      }));
      function createOnchainMirrorTypedData(_x36, _x37) {
        return _createOnchainMirrorTypedData.apply(this, arguments);
      }
      return createOnchainMirrorTypedData;
    }()
  }, {
    key: "createOnchainQuoteTypedData",
    value: function() {
      var _createOnchainQuoteTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee35(request, options) {
        var _this16 = this;
        return _regeneratorRuntime2().wrap(function _callee35$(_context35) {
          while (1)
            switch (_context35.prev = _context35.next) {
              case 0:
                return _context35.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref16 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee34(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee34$(_context34) {
                      while (1)
                        switch (_context34.prev = _context34.next) {
                          case 0:
                            _context34.next = 2;
                            return _this16.sdk.CreateOnchainQuoteTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context34.sent;
                            return _context34.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context34.stop();
                        }
                    }, _callee34);
                  }));
                  return function(_x41) {
                    return _ref16.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context35.stop();
            }
        }, _callee35, this);
      }));
      function createOnchainQuoteTypedData(_x39, _x40) {
        return _createOnchainQuoteTypedData.apply(this, arguments);
      }
      return createOnchainQuoteTypedData;
    }()
  }, {
    key: "createMomokaPostTypedData",
    value: function() {
      var _createMomokaPostTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee37(request) {
        var _this17 = this;
        return _regeneratorRuntime2().wrap(function _callee37$(_context37) {
          while (1)
            switch (_context37.prev = _context37.next) {
              case 0:
                return _context37.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref17 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee36(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee36$(_context36) {
                      while (1)
                        switch (_context36.prev = _context36.next) {
                          case 0:
                            _context36.next = 2;
                            return _this17.sdk.CreateMomokaPostTypedData({
                              request
                            }, headers);
                          case 2:
                            result = _context36.sent;
                            return _context36.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context36.stop();
                        }
                    }, _callee36);
                  }));
                  return function(_x43) {
                    return _ref17.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context37.stop();
            }
        }, _callee37, this);
      }));
      function createMomokaPostTypedData(_x42) {
        return _createMomokaPostTypedData.apply(this, arguments);
      }
      return createMomokaPostTypedData;
    }()
  }, {
    key: "createMomokaCommentTypedData",
    value: function() {
      var _createMomokaCommentTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee39(request) {
        var _this18 = this;
        return _regeneratorRuntime2().wrap(function _callee39$(_context39) {
          while (1)
            switch (_context39.prev = _context39.next) {
              case 0:
                return _context39.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref18 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee38(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee38$(_context38) {
                      while (1)
                        switch (_context38.prev = _context38.next) {
                          case 0:
                            _context38.next = 2;
                            return _this18.sdk.CreateMomokaCommentTypedData({
                              request
                            }, headers);
                          case 2:
                            result = _context38.sent;
                            return _context38.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context38.stop();
                        }
                    }, _callee38);
                  }));
                  return function(_x45) {
                    return _ref18.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context39.stop();
            }
        }, _callee39, this);
      }));
      function createMomokaCommentTypedData(_x44) {
        return _createMomokaCommentTypedData.apply(this, arguments);
      }
      return createMomokaCommentTypedData;
    }()
  }, {
    key: "createMomokaMirrorTypedData",
    value: function() {
      var _createMomokaMirrorTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee41(request) {
        var _this19 = this;
        return _regeneratorRuntime2().wrap(function _callee41$(_context41) {
          while (1)
            switch (_context41.prev = _context41.next) {
              case 0:
                return _context41.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref19 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee40(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee40$(_context40) {
                      while (1)
                        switch (_context40.prev = _context40.next) {
                          case 0:
                            _context40.next = 2;
                            return _this19.sdk.CreateMomokaMirrorTypedData({
                              request
                            }, headers);
                          case 2:
                            result = _context40.sent;
                            return _context40.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context40.stop();
                        }
                    }, _callee40);
                  }));
                  return function(_x47) {
                    return _ref19.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context41.stop();
            }
        }, _callee41, this);
      }));
      function createMomokaMirrorTypedData(_x46) {
        return _createMomokaMirrorTypedData.apply(this, arguments);
      }
      return createMomokaMirrorTypedData;
    }()
  }, {
    key: "createMomokaQuoteTypedData",
    value: function() {
      var _createMomokaQuoteTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee43(request) {
        var _this20 = this;
        return _regeneratorRuntime2().wrap(function _callee43$(_context43) {
          while (1)
            switch (_context43.prev = _context43.next) {
              case 0:
                return _context43.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref20 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee42(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee42$(_context42) {
                      while (1)
                        switch (_context42.prev = _context42.next) {
                          case 0:
                            _context42.next = 2;
                            return _this20.sdk.CreateMomokaQuoteTypedData({
                              request
                            }, headers);
                          case 2:
                            result = _context42.sent;
                            return _context42.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context42.stop();
                        }
                    }, _callee42);
                  }));
                  return function(_x49) {
                    return _ref20.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context43.stop();
            }
        }, _callee43, this);
      }));
      function createMomokaQuoteTypedData(_x48) {
        return _createMomokaQuoteTypedData.apply(this, arguments);
      }
      return createMomokaQuoteTypedData;
    }()
  }, {
    key: "legacyCollect",
    value: function() {
      var _legacyCollect = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee45(request) {
        var _this21 = this;
        return _regeneratorRuntime2().wrap(function _callee45$(_context45) {
          while (1)
            switch (_context45.prev = _context45.next) {
              case 0:
                return _context45.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref21 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee44(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee44$(_context44) {
                      while (1)
                        switch (_context44.prev = _context44.next) {
                          case 0:
                            _context44.next = 2;
                            return _this21.sdk.LegacyCollect({
                              request
                            }, headers);
                          case 2:
                            result = _context44.sent;
                            return _context44.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context44.stop();
                        }
                    }, _callee44);
                  }));
                  return function(_x51) {
                    return _ref21.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context45.stop();
            }
        }, _callee45, this);
      }));
      function legacyCollect(_x50) {
        return _legacyCollect.apply(this, arguments);
      }
      return legacyCollect;
    }()
  }, {
    key: "createLegacyCollectTypedData",
    value: function() {
      var _createLegacyCollectTypedData = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee47(request, options) {
        var _this22 = this;
        return _regeneratorRuntime2().wrap(function _callee47$(_context47) {
          while (1)
            switch (_context47.prev = _context47.next) {
              case 0:
                return _context47.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref22 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee46(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee46$(_context46) {
                      while (1)
                        switch (_context46.prev = _context46.next) {
                          case 0:
                            _context46.next = 2;
                            return _this22.sdk.CreateLegacyCollectTypedData({
                              request,
                              options
                            }, headers);
                          case 2:
                            result = _context46.sent;
                            return _context46.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context46.stop();
                        }
                    }, _callee46);
                  }));
                  return function(_x54) {
                    return _ref22.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context47.stop();
            }
        }, _callee47, this);
      }));
      function createLegacyCollectTypedData(_x52, _x53) {
        return _createLegacyCollectTypedData.apply(this, arguments);
      }
      return createLegacyCollectTypedData;
    }()
  }, {
    key: "predictNextOnChainPublicationId",
    value: function() {
      var _predictNextOnChainPublicationId = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee48(_ref23) {
        var from7, result, _result$items$, latest, _latest$id$split, _latest$id$split2, _latest$id$split2$, onchainPublicationId, value, predictedOnchainPublicationId;
        return _regeneratorRuntime2().wrap(function _callee48$(_context48) {
          while (1)
            switch (_context48.prev = _context48.next) {
              case 0:
                from7 = _ref23.from;
                _context48.next = 3;
                return this.fetchAll({
                  limit: LimitType.Ten,
                  where: {
                    from: [from7]
                  }
                });
              case 3:
                result = _context48.sent;
                if (!hasAtLeastOne(result.items)) {
                  _context48.next = 10;
                  break;
                }
                latest = (_result$items$ = result.items[0]) !== null && _result$items$ !== void 0 ? _result$items$ : never();
                _latest$id$split = latest.id.split("-"), _latest$id$split2 = _slicedToArray(_latest$id$split, 2), _latest$id$split2$ = _latest$id$split2[1], onchainPublicationId = _latest$id$split2$ === void 0 ? never() : _latest$id$split2$;
                value = parseInt(onchainPublicationId, 16);
                predictedOnchainPublicationId = (value + 1).toString(16);
                return _context48.abrupt("return", "".concat(from7, "-0x").concat(predictedOnchainPublicationId.length % 2 ? "0" + predictedOnchainPublicationId : predictedOnchainPublicationId));
              case 10:
                return _context48.abrupt("return", "".concat(from7, "-0x01"));
              case 11:
              case "end":
                return _context48.stop();
            }
        }, _callee48, this);
      }));
      function predictNextOnChainPublicationId(_x55) {
        return _predictNextOnChainPublicationId.apply(this, arguments);
      }
      return predictNextOnChainPublicationId;
    }()
  }]);
  return Publication2;
}();
var RevenueFromPublicationsDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "RevenueFromPublications" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "RevenueFromPublicationsRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "revenueFromPublications" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationRevenue" } }] } }, { kind: "Field", name: { kind: "Name", value: "pageInfo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PaginatedResultInfo" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevenueAggregate" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevenueAggregate" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "total" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationRevenue" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationRevenue" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "publication" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Mirror" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "revenue" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevenueAggregate" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Mirror" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrorOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PaginatedResultInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PaginatedResultInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "prev" } }, { kind: "Field", name: { kind: "Name", value: "next" } }] } }] };
var RevenueFromPublicationDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "RevenueFromPublication" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "RevenueFromPublicationRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperationsActedArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsInput" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "PublicationStatsCountOpenActionArgs" } } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ImageTransform" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsArg" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } }, type: { kind: "NamedType", name: { kind: "Name", value: "ProfileStatsCountOpenActionArgs" } }, defaultValue: { kind: "ObjectValue", fields: [] } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "revenueFromPublication" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationRevenue" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevenueAggregate" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevenueAggregate" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "total" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationRevenue" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationRevenue" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "publication" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Mirror" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "revenue" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevenueAggregate" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Post" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "App" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "App" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MomokaInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MomokaInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "proof" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Profile" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Profile" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isBlockedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowedByMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "isFollowingMe" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "canBlock" } }, { kind: "Field", name: { kind: "Name", value: "canUnblock" } }, { kind: "Field", name: { kind: "Name", value: "canFollow" } }, { kind: "Field", name: { kind: "Name", value: "canUnfollow" } }] } }, { kind: "Field", name: { kind: "Name", value: "interests" } }, { kind: "Field", name: { kind: "Name", value: "guardian" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "protected" } }, { kind: "Field", name: { kind: "Name", value: "cooldownEndsOn" } }] } }, { kind: "Field", name: { kind: "Name", value: "invitesLeft" } }, { kind: "Field", name: { kind: "Name", value: "onchainIdentity" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "proofOfHumanity" } }, { kind: "Field", name: { kind: "Name", value: "ens" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "name" } }] } }, { kind: "Field", name: { kind: "Name", value: "sybilDotOrg" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "verified" } }, { kind: "Field", name: { kind: "Name", value: "source" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "twitter" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "handle" } }] } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "worldcoin" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "isHuman" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "followNftAddress" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FeeFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevertFollowModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "displayName" } }, { kind: "Field", name: { kind: "Name", value: "bio" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "picture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftImage" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "coverPicture" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileCoverSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "handle" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "HandleInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "sponsor" } }, { kind: "Field", name: { kind: "Name", value: "signless" } }, { kind: "Field", name: { kind: "Name", value: "invitedBy" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsArg" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OptimisticStatusResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OptimisticStatusResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "isFinalisedOnchain" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FeeFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FeeFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevertFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevertFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownFollowModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownFollowModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfilePictureSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profilePictureTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Image" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Image" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "collection" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "tokenId" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfilePictureSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileCoverSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileCoverTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "HandleInfo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "HandleInfo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "fullHandle" } }, { kind: "Field", name: { kind: "Name", value: "namespace" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }, { kind: "Field", name: { kind: "Name", value: "suggestedFormatted" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "full" } }, { kind: "Field", name: { kind: "Name", value: "localName" } }] } }, { kind: "Field", name: { kind: "Name", value: "linkedTo" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "nftTokenId" } }] } }, { kind: "Field", name: { kind: "Name", value: "ownedBy" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "followers" } }, { kind: "Field", name: { kind: "Name", value: "following" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "posts" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "publications" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "profileStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReacted" }, name: { kind: "Name", value: "reacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationOperations" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationOperations" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "isNotInterested" } }, { kind: "Field", name: { kind: "Name", value: "hasBookmarked" } }, { kind: "Field", name: { kind: "Name", value: "hasReported" } }, { kind: "Field", name: { kind: "Name", value: "canAct" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }] }, { kind: "Field", name: { kind: "Name", value: "hasActed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OptimisticStatusResult" } }] } }, { kind: "Field", name: { kind: "Name", value: "actedOn" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationOperationsActedArgs" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OpenActionResult" } }] } }, { kind: "Field", alias: { kind: "Name", value: "hasUpvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "hasDownvoted" }, name: { kind: "Name", value: "hasReacted" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", name: { kind: "Name", value: "canComment" } }, { kind: "Field", name: { kind: "Name", value: "canMirror" } }, { kind: "Field", name: { kind: "Name", value: "canQuote" } }, { kind: "Field", name: { kind: "Name", value: "hasMirrored" } }, { kind: "Field", name: { kind: "Name", value: "canDecrypt" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CanDecryptResponse" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionResult" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "KnownCollectOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "KnownCollectOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionResult" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionResult" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "category" } }, { kind: "Field", name: { kind: "Name", value: "initReturnData" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CanDecryptResponse" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CanDecryptResponse" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "result" } }, { kind: "Field", name: { kind: "Name", value: "reasons" } }, { kind: "Field", name: { kind: "Name", value: "extraDetails" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AudioMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MarketplaceMetadata" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MarketplaceMetadata" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "description" } }, { kind: "Field", name: { kind: "Name", value: "externalURL" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }] } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "animationUrl" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMarketplaceMetadataAttribute" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "displayType" } }, { kind: "Field", name: { kind: "Name", value: "traitType" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }, { kind: "Field", name: { kind: "Name", value: "transformed" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationImageTransform" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataLitEncryption" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "encryptionKey" } }, { kind: "Field", name: { kind: "Name", value: "accessCondition" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RootCondition" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedPaths" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RootCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RootCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AndCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "OrCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NftOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "contractType" } }, { kind: "Field", name: { kind: "Name", value: "tokenIds" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20OwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "condition" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EoaOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ProfileOwnershipCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "profileId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "follow" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CollectCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "publicationId" } }, { kind: "Field", name: { kind: "Name", value: "thisPublication" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AndCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AndCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "AdvancedContractCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "functionName" } }, { kind: "Field", name: { kind: "Name", value: "abi" } }, { kind: "Field", name: { kind: "Name", value: "params" } }, { kind: "Field", name: { kind: "Name", value: "comparison" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "OrCondition" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "OrCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "criteria" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NftOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NftOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20OwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20OwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EoaOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EoaOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ProfileOwnershipCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ProfileOwnershipCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CollectCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CollectCondition" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AdvancedContractCondition" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AdvancedContractCondition" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "audio" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudioSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "credits" } }, { kind: "Field", name: { kind: "Name", value: "artist" } }, { kind: "Field", name: { kind: "Name", value: "genre" } }, { kind: "Field", name: { kind: "Name", value: "recordLabel" } }, { kind: "Field", name: { kind: "Name", value: "lyrics" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudioSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudioSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableAudio" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Audio" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableAudio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Audio" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Audio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImageSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImageSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Image" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "width" } }, { kind: "Field", name: { kind: "Name", value: "height" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "video" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideoSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "cover" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "duration" } }, { kind: "Field", name: { kind: "Name", value: "license" } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideoSet" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideoSet" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "raw" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "optimized" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Video" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EncryptableVideo" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EncryptableVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Video" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Video" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "mimeType" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationMetadataMediaImage" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "image" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EncryptableImageSet" } }] } }, { kind: "Field", name: { kind: "Name", value: "altTag" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "VideoMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "isShortVideo" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ImageMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ArticleMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EventMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "links" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "GeoLocation" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "GeoLocation" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "latitude" } }, { kind: "Field", name: { kind: "Name", value: "longitude" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LinkMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "sharingLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "EmbedMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "embed" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CheckingInMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "location" } }, { kind: "Field", name: { kind: "Name", value: "geographic" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "GeoLocation" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TextOnlyMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "assets" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }] } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "ThreeDMetadataV3Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3Asset" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "uri" } }, { kind: "Field", name: { kind: "Name", value: "zipPath" } }, { kind: "Field", name: { kind: "Name", value: "playerURL" } }, { kind: "Field", name: { kind: "Name", value: "format" } }, { kind: "Field", name: { kind: "Name", value: "license" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "StoryMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "TransactionMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MintMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "mintLink" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SpaceMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "link" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LiveStreamMetadataV3" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "rawURI" } }, { kind: "Field", name: { kind: "Name", value: "locale" } }, { kind: "Field", name: { kind: "Name", value: "tags" } }, { kind: "Field", name: { kind: "Name", value: "contentWarning" } }, { kind: "Field", name: { kind: "Name", value: "hideFromFeed" } }, { kind: "Field", name: { kind: "Name", value: "appId" } }, { kind: "Field", name: { kind: "Name", value: "marketplace" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MarketplaceMetadata" } }] } }, { kind: "Field", name: { kind: "Name", value: "attributes" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "key" } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "Field", name: { kind: "Name", value: "encryptedWith" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataLitEncryption" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "title" } }, { kind: "Field", name: { kind: "Name", value: "content" } }, { kind: "Field", name: { kind: "Name", value: "startsAt" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }, { kind: "Field", name: { kind: "Name", value: "playbackURL" } }, { kind: "Field", name: { kind: "Name", value: "liveURL" } }, { kind: "Field", name: { kind: "Name", value: "checkLiveAPI" } }, { kind: "Field", name: { kind: "Name", value: "attachments" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaVideo" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaImage" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationMetadataMediaAudio" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "endTimestamp" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "vault" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipients" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "split" } }] } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "amount" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }, { kind: "Field", name: { kind: "Name", value: "recipient" } }, { kind: "Field", name: { kind: "Name", value: "referralFee" } }, { kind: "Field", name: { kind: "Name", value: "followerOnly" } }, { kind: "Field", name: { kind: "Name", value: "collectLimit" } }, { kind: "Field", name: { kind: "Name", value: "endsAt" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "type" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "collectNft" } }, { kind: "Field", name: { kind: "Name", value: "openActionModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "mirrorsRestricted" } }, { kind: "Field", name: { kind: "Name", value: "degreesOfSeparation" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "UnknownReferenceModuleSettings" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModuleReturnData" } }, { kind: "Field", name: { kind: "Name", value: "initializeCalldata" } }, { kind: "Field", name: { kind: "Name", value: "initializeResultData" } }, { kind: "Field", name: { kind: "Name", value: "signlessApproved" } }, { kind: "Field", name: { kind: "Name", value: "sponsoredApproved" } }, { kind: "Field", name: { kind: "Name", value: "verified" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "PublicationStats" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "PublicationStats" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "comments" } }, { kind: "Field", name: { kind: "Name", value: "mirrors" } }, { kind: "Field", name: { kind: "Name", value: "quotes" } }, { kind: "Field", name: { kind: "Name", value: "bookmarks" } }, { kind: "Field", alias: { kind: "Name", value: "upvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvotes" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "collects" }, name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "anyOf" }, value: { kind: "ListValue", values: [{ kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "category" }, value: { kind: "EnumValue", value: "COLLECT" } }] }] } }] } }] }, { kind: "Field", name: { kind: "Name", value: "countOpenActions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsCountOpenActionArgs" } } }] }, { kind: "Field", alias: { kind: "Name", value: "upvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "UPVOTE" } }] } }] }, { kind: "Field", alias: { kind: "Name", value: "downvoteReactions" }, name: { kind: "Name", value: "reactions" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "type" }, value: { kind: "EnumValue", value: "DOWNVOTE" } }] } }] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Mirror" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Mirror" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "mirrorOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Comment" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Quote" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Comment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }, { kind: "Field", name: { kind: "Name", value: "root" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "Field", name: { kind: "Name", value: "commentOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "firstComment" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "CommentBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "QuoteBase" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "id" } }, { kind: "Field", name: { kind: "Name", value: "publishedOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "App" } }] } }, { kind: "Field", name: { kind: "Name", value: "isHidden" } }, { kind: "Field", name: { kind: "Name", value: "momoka" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MomokaInfo" } }] } }, { kind: "Field", name: { kind: "Name", value: "txHash" } }, { kind: "Field", name: { kind: "Name", value: "createdAt" } }, { kind: "Field", name: { kind: "Name", value: "by" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Profile" } }] } }, { kind: "Field", name: { kind: "Name", value: "operations" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationOperations" } }] } }, { kind: "Field", name: { kind: "Name", value: "metadata" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "AudioMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "AudioMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "VideoMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "VideoMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ImageMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ImageMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ArticleMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ArticleMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EventMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EventMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LinkMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LinkMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "EmbedMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "EmbedMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "CheckingInMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CheckingInMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TextOnlyMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TextOnlyMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "ThreeDMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "ThreeDMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "StoryMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "StoryMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "TransactionMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "TransactionMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MintMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MintMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SpaceMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SpaceMetadataV3" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LiveStreamMetadataV3" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LiveStreamMetadataV3" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "openActionModules" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFreeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyLimitedTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyRevertCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyTimedFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyMultirecipientFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacySimpleCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyERC4626FeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "LegacyAaveFeeCollectModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "MultirecipientFeeCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "SimpleCollectOpenActionSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownOpenActionModuleSettings" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "referenceModule" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FollowOnlyReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "DegreesOfSeparationReferenceModuleSettings" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "UnknownReferenceModuleSettings" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Quote" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }, { kind: "Field", name: { kind: "Name", value: "quoteOn" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Post" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Post" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Comment" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "CommentBase" } }] } }, { kind: "InlineFragment", typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Quote" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "QuoteBase" } }] } }] } }, { kind: "Field", name: { kind: "Name", value: "stats" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "publicationStatsInput" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "PublicationStats" } }] } }] } }] };
var FollowRevenuesDocument = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "FollowRevenues" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "request" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "FollowRevenueRequest" } } } }, { kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } }, type: { kind: "NamedType", name: { kind: "Name", value: "RateRequest" } }, defaultValue: { kind: "ObjectValue", fields: [{ kind: "ObjectField", name: { kind: "Name", value: "for" }, value: { kind: "EnumValue", value: "USD" } }] } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", alias: { kind: "Name", value: "result" }, name: { kind: "Name", value: "followRevenues" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "request" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "revenues" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "RevenueAggregate" } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "RevenueAggregate" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "RevenueAggregate" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "total" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Amount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Amount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Amount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Erc20" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }, { kind: "Field", name: { kind: "Name", value: "rate" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "request" }, value: { kind: "Variable", name: { kind: "Name", value: "rateRequest" } } }], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "FiatAmount" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Erc20" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Erc20" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }, { kind: "Field", name: { kind: "Name", value: "contract" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "NetworkAddress" } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "NetworkAddress" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "NetworkAddress" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "address" } }, { kind: "Field", name: { kind: "Name", value: "chainId" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "FiatAmount" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "FiatAmount" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "asset" }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Fiat" } }] } }, { kind: "Field", name: { kind: "Name", value: "value" } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Fiat" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Fiat" } }, selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "__typename" } }, { kind: "Field", name: { kind: "Name", value: "name" } }, { kind: "Field", name: { kind: "Name", value: "symbol" } }, { kind: "Field", name: { kind: "Name", value: "decimals" } }] } }] };
var defaultWrapper$3 = function defaultWrapper17(action, _operationName, _operationType) {
  return action();
};
var RevenueFromPublicationsDocumentString = print(RevenueFromPublicationsDocument);
var RevenueFromPublicationDocumentString = print(RevenueFromPublicationDocument);
var FollowRevenuesDocumentString = print(FollowRevenuesDocument);
function getSdk$3(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$3;
  return { RevenueFromPublications: function RevenueFromPublications(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(RevenueFromPublicationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "RevenueFromPublications", "query");
  }, RevenueFromPublication: function RevenueFromPublication(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(RevenueFromPublicationDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "RevenueFromPublication", "query");
  }, FollowRevenues: function FollowRevenues(variables, requestHeaders) {
    return withWrapper(function(wrappedRequestHeaders) {
      return client.rawRequest(FollowRevenuesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
    }, "FollowRevenues", "query");
  } };
}
var Revenue = /* @__PURE__ */ function() {
  function Revenue2(context, authentication) {
    _classCallCheck3(this, Revenue2);
    this.context = context;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$3(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Revenue2, [{
    key: "fromFollow",
    value: function() {
      var _fromFollow = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.sdk.FollowRevenues({
                  request
                });
              case 2:
                result = _context.sent;
                return _context.abrupt("return", result.data.result.revenues);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function fromFollow(_x) {
        return _fromFollow.apply(this, arguments);
      }
      return fromFollow;
    }()
  }, {
    key: "fromPublication",
    value: function() {
      var _fromPublication = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.sdk.RevenueFromPublication(_objectSpread2({
                  request
                }, buildRequestFromConfig(this.context)));
              case 2:
                result = _context2.sent;
                return _context2.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function fromPublication(_x2) {
        return _fromPublication.apply(this, arguments);
      }
      return fromPublication;
    }()
  }, {
    key: "fromPublications",
    value: function() {
      var _fromPublications = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this.sdk.RevenueFromPublications(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this.context)));
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4);
      }));
      function fromPublications(_x3) {
        return _fromPublications.apply(this, arguments);
      }
      return fromPublications;
    }()
  }]);
  return Revenue2;
}();
var SearchPublicationsDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "SearchPublications"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationSearchRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationImageTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationOperationsActedArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "PublicationOperationsActedArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationStatsInput"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationStatsInput"
          }
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "publicationStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "PublicationStatsCountOpenActionArgs"
          }
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "searchPublications"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Post"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Post"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Comment"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Comment"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "Quote"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "Quote"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Post"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Post"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "App"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "App"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MomokaInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MomokaInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "proof"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationOperations"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationOperations"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isNotInterested"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasBookmarked"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasReported"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canAct"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasActed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "OptimisticStatusResult"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "actedOn"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationOperationsActedArgs"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "OpenActionResult"
            }
          }]
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "hasUpvoted"
        },
        name: {
          kind: "Name",
          value: "hasReacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "hasDownvoted"
        },
        name: {
          kind: "Name",
          value: "hasReacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canComment"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canMirror"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canQuote"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hasMirrored"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canDecrypt"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CanDecryptResponse"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "InlineFragment",
        typeCondition: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "KnownCollectOpenActionResult"
          }
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "KnownCollectOpenActionResult"
            }
          }]
        }
      }, {
        kind: "InlineFragment",
        typeCondition: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "UnknownOpenActionResult"
          }
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "UnknownOpenActionResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "KnownCollectOpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "KnownCollectOpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownOpenActionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownOpenActionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "category"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initReturnData"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CanDecryptResponse"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CanDecryptResponse"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "result"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reasons"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "extraDetails"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AudioMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AudioMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaAudio"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MarketplaceMetadata"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MarketplaceMetadata"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "description"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "externalURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMarketplaceMetadataAttribute"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "animationUrl"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMarketplaceMetadataAttribute"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMarketplaceMetadataAttribute"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "displayType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "traitType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ImageSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationImageTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataLitEncryption"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataLitEncryption"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptionKey"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "accessCondition"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "RootCondition"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedPaths"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RootCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RootCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AndCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AndCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "OrCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OrCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contractType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenIds"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20OwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20OwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "condition"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EoaOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EoaOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileOwnershipCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileOwnershipCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "profileId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FollowCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FollowCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "follow"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CollectCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CollectCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publicationId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "thisPublication"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AndCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AndCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "AdvancedContractCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "AdvancedContractCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "functionName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "abi"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "params"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comparison"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OrCondition"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OrCondition"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "criteria"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "NftOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NftOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Erc20OwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Erc20OwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EoaOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EoaOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ProfileOwnershipCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileOwnershipCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CollectCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CollectCondition"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AdvancedContractCondition"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AdvancedContractCondition"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaAudio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaAudio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "audio"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableAudioSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "cover"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "duration"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "credits"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "artist"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "genre"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recordLabel"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "lyrics"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableAudioSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableAudioSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableAudio"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Audio"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableAudio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableAudio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Audio"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Audio"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableImageSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImage"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaVideo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaVideo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "video"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableVideoSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "cover"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "duration"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "altTag"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableVideoSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableVideoSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableVideo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Video"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EncryptableVideo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EncryptableVideo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Video"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Video"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationMetadataMediaImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationMetadataMediaImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "EncryptableImageSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "altTag"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "VideoMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "VideoMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaVideo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isShortVideo"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ImageMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationMetadataMediaImage"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ArticleMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ArticleMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EventMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EventMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "geographic"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "GeoLocation"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "links"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "location"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "GeoLocation"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "GeoLocation"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "latitude"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "longitude"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LinkMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LinkMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sharingLink"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "EmbedMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "EmbedMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "embed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CheckingInMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CheckingInMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "location"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "geographic"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "GeoLocation"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "TextOnlyMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "TextOnlyMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ThreeDMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ThreeDMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "assets"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ThreeDMetadataV3Asset"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ThreeDMetadataV3Asset"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ThreeDMetadataV3Asset"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "zipPath"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "playerURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "format"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "license"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "StoryMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "StoryMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "TransactionMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "TransactionMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MintMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MintMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mintLink"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "SpaceMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "SpaceMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "link"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LiveStreamMetadataV3"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LiveStreamMetadataV3"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rawURI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "locale"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tags"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contentWarning"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "hideFromFeed"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "appId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "marketplace"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MarketplaceMetadata"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attributes"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "type"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "key"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "value"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "encryptedWith"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataLitEncryption"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataLitEncryption"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "title"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "content"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "startsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "playbackURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "liveURL"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "checkLiveAPI"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "attachments"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaVideo"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaVideo"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaImage"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaImage"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "PublicationMetadataMediaAudio"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PublicationMetadataMediaAudio"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyFreeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyFreeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyLimitedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyLimitedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyLimitedTimedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyLimitedTimedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endTimestamp"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyRevertCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyRevertCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyTimedFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyTimedFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endTimestamp"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyMultirecipientFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyMultirecipientFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipients"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "recipient"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "split"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacySimpleCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacySimpleCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyERC4626FeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyERC4626FeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "vault"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LegacyAaveFeeCollectModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LegacyAaveFeeCollectModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "MultirecipientFeeCollectOpenActionSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "MultirecipientFeeCollectOpenActionSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipients"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "recipient"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "split"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "SimpleCollectOpenActionSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "SimpleCollectOpenActionSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referralFee"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followerOnly"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectLimit"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "endsAt"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownOpenActionModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownOpenActionModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "type"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collectNft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FollowOnlyReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FollowOnlyReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "DegreesOfSeparationReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "DegreesOfSeparationReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentsRestricted"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrorsRestricted"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "degreesOfSeparation"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownReferenceModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownReferenceModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PublicationStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PublicationStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "bookmarks"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Comment"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Comment"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "FragmentSpread",
        name: {
          kind: "Name",
          value: "CommentBase"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "root"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Post"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "commentOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Post"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CommentBase"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "QuoteBase"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "firstComment"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "CommentBase"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CommentBase"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Comment"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "QuoteBase"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Quote"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publishedOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "App"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isHidden"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momoka"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "MomokaInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "by"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationOperations"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "AudioMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "AudioMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "VideoMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "VideoMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ImageMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ImageMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ArticleMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ArticleMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EventMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EventMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LinkMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LinkMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "EmbedMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "EmbedMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CheckingInMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CheckingInMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TextOnlyMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TextOnlyMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ThreeDMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ThreeDMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "StoryMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "StoryMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "TransactionMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "TransactionMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MintMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MintMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SpaceMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SpaceMetadataV3"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LiveStreamMetadataV3"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LiveStreamMetadataV3"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "openActionModules"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFreeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFreeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyLimitedTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyLimitedTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyRevertCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyRevertCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyTimedFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyTimedFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyMultirecipientFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyMultirecipientFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacySimpleCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacySimpleCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyERC4626FeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyERC4626FeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "LegacyAaveFeeCollectModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "LegacyAaveFeeCollectModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "MultirecipientFeeCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "MultirecipientFeeCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "SimpleCollectOpenActionSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "SimpleCollectOpenActionSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownOpenActionModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownOpenActionModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "referenceModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FollowOnlyReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FollowOnlyReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "DegreesOfSeparationReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "DegreesOfSeparationReferenceModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownReferenceModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownReferenceModuleSettings"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Quote"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Quote"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "FragmentSpread",
        name: {
          kind: "Name",
          value: "QuoteBase"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quoteOn"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Post"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Post"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Comment"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CommentBase"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "Quote"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "QuoteBase"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "publicationStatsInput"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "PublicationStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var SearchProfilesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "SearchProfiles"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ProfileSearchRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "searchProfiles"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Profile"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var defaultWrapper$2 = function defaultWrapper18(action, _operationName, _operationType) {
  return action();
};
var SearchPublicationsDocumentString = print(SearchPublicationsDocument);
var SearchProfilesDocumentString = print(SearchProfilesDocument);
function getSdk$2(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$2;
  return {
    SearchPublications: function SearchPublications(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(SearchPublicationsDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "SearchPublications", "query");
    },
    SearchProfiles: function SearchProfiles(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(SearchProfilesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "SearchProfiles", "query");
    }
  };
}
var Search = /* @__PURE__ */ function() {
  function Search2(context, authentication) {
    _classCallCheck3(this, Search2);
    this.context = context;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$2(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Search2, [{
    key: "profiles",
    value: function() {
      var _profiles = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                    var response;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.SearchProfiles(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this.context)));
                          case 2:
                            response = _context.sent;
                            return _context.abrupt("return", response.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2);
      }));
      function profiles(_x) {
        return _profiles.apply(this, arguments);
      }
      return profiles;
    }()
  }, {
    key: "publications",
    value: function() {
      var _publications = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(currRequest) {
                    var response;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.SearchPublications(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this2.context)));
                          case 2:
                            response = _context3.sent;
                            return _context3.abrupt("return", response.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4);
      }));
      function publications(_x3) {
        return _publications.apply(this, arguments);
      }
      return publications;
    }()
  }]);
  return Search2;
}();
var TxIdToTxHashDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "TxIdToTxHash"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "for"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "TxId"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "txIdToTxHash"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "for"
            }
          }
        }]
      }]
    }
  }]
};
var RelayQueuesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "RelayQueues"
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "relayQueues"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "RelayQueueResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelayQueueResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelayQueueResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "key"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "relay"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "queue"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }]
};
var LensTransactionStatusDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "LensTransactionStatus"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "LensTransactionStatusRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "lensTransactionStatus"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "LensTransactionResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "LensTransactionResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "LensTransactionResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "status"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reason"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "extraInfo"
        }
      }]
    }
  }]
};
var BroadcastOnchainDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "BroadcastOnchain"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "BroadcastRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "broadcastOnchain"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RelaySuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RelaySuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RelayError"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RelayError"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelaySuccess"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelaySuccess"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelayError"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelayError"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reason"
        }
      }]
    }
  }]
};
var BroadcastOnMomokaDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "BroadcastOnMomoka"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "BroadcastRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "broadcastOnMomoka"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CreateMomokaPublicationResult"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CreateMomokaPublicationResult"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RelayError"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RelayError"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelayError"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelayError"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "reason"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CreateMomokaPublicationResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CreateMomokaPublicationResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "proof"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "momokaId"
        }
      }]
    }
  }]
};
var defaultWrapper$1 = function defaultWrapper19(action, _operationName, _operationType) {
  return action();
};
var TxIdToTxHashDocumentString = print(TxIdToTxHashDocument);
var RelayQueuesDocumentString = print(RelayQueuesDocument);
var LensTransactionStatusDocumentString = print(LensTransactionStatusDocument);
var BroadcastOnchainDocumentString = print(BroadcastOnchainDocument);
var BroadcastOnMomokaDocumentString = print(BroadcastOnMomokaDocument);
function getSdk$1(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper$1;
  return {
    TxIdToTxHash: function TxIdToTxHash(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(TxIdToTxHashDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "TxIdToTxHash", "query");
    },
    RelayQueues: function RelayQueues(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(RelayQueuesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "RelayQueues", "query");
    },
    LensTransactionStatus: function LensTransactionStatus(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(LensTransactionStatusDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "LensTransactionStatus", "query");
    },
    BroadcastOnchain: function BroadcastOnchain(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(BroadcastOnchainDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "BroadcastOnchain", "mutation");
    },
    BroadcastOnMomoka: function BroadcastOnMomoka(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(BroadcastOnMomokaDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "BroadcastOnMomoka", "mutation");
    }
  };
}
var TransactionPollingError = /* @__PURE__ */ function(_Error) {
  _inherits3(TransactionPollingError2, _Error);
  var _super = _createSuper3(TransactionPollingError2);
  function TransactionPollingError2() {
    var _this;
    _classCallCheck3(this, TransactionPollingError2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty3(_assertThisInitialized3(_this), "name", "TransactionPollingError");
    _defineProperty3(_assertThisInitialized3(_this), "message", "Max attempts exceeded");
    return _this;
  }
  return _createClass3(TransactionPollingError2);
}(/* @__PURE__ */ _wrapNativeSuper3(Error));
var Transaction2 = /* @__PURE__ */ function() {
  function Transaction3(context, authentication) {
    _classCallCheck3(this, Transaction3);
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk$1(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Transaction3, [{
    key: "txIdToTxHash",
    value: function() {
      var _txIdToTxHash = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(txId) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee$(_context) {
          while (1)
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.sdk.TxIdToTxHash({
                  "for": txId
                });
              case 2:
                result = _context.sent;
                return _context.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context.stop();
            }
        }, _callee, this);
      }));
      function txIdToTxHash(_x) {
        return _txIdToTxHash.apply(this, arguments);
      }
      return txIdToTxHash;
    }()
  }, {
    key: "relayQueues",
    value: function() {
      var _relayQueues = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2() {
        var result;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.sdk.RelayQueues();
              case 2:
                result = _context2.sent;
                return _context2.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context2.stop();
            }
        }, _callee2, this);
      }));
      function relayQueues() {
        return _relayQueues.apply(this, arguments);
      }
      return relayQueues;
    }()
  }, {
    key: "broadcastOnchain",
    value: function() {
      var _broadcastOnchain = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.BroadcastOnchain({
                              request
                            }, headers);
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x3) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4, this);
      }));
      function broadcastOnchain(_x2) {
        return _broadcastOnchain.apply(this, arguments);
      }
      return broadcastOnchain;
    }()
  }, {
    key: "broadcastOnMomoka",
    value: function() {
      var _broadcastOnMomoka = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6(request) {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.next = 2;
                            return _this3.sdk.BroadcastOnMomoka({
                              request
                            }, headers);
                          case 2:
                            result = _context5.sent;
                            return _context5.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x5) {
                    return _ref2.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function broadcastOnMomoka(_x4) {
        return _broadcastOnMomoka.apply(this, arguments);
      }
      return broadcastOnMomoka;
    }()
  }, {
    key: "status",
    value: function() {
      var _status = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
          while (1)
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.sdk.LensTransactionStatus({
                  request
                });
              case 2:
                result = _context7.sent;
                return _context7.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context7.stop();
            }
        }, _callee7, this);
      }));
      function status(_x6) {
        return _status.apply(this, arguments);
      }
      return status;
    }()
  }, {
    key: "waitUntilComplete",
    value: function() {
      var _waitUntilComplete = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8(request) {
        var _this4 = this;
        return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
          while (1)
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt("return", poll({
                  fn: function fn() {
                    return _this4.status(request);
                  },
                  validate: function validate2(result) {
                    return (result === null || result === void 0 ? void 0 : result.status) === LensTransactionStatusType.Complete;
                  },
                  onMaxAttempts: function onMaxAttempts() {
                    return new TransactionPollingError();
                  }
                }));
              case 1:
              case "end":
                return _context8.stop();
            }
        }, _callee8);
      }));
      function waitUntilComplete(_x7) {
        return _waitUntilComplete.apply(this, arguments);
      }
      return waitUntilComplete;
    }()
  }]);
  return Transaction3;
}();
var OwnedHandlesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "OwnedHandles"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "OwnedHandlesRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "ownedHandles"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "HandleInfo"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }]
};
var ProfilesManagedDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ProfilesManaged"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ProfilesManagedRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "profilesManaged"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "items"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "Profile"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "pageInfo"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "PaginatedResultInfo"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "PaginatedResultInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "PaginatedResultInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "prev"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "next"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }]
};
var UserSigNoncesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "UserSigNonces"
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "userSigNonces"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "UserSigNonces"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UserSigNonces"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UserSigNonces"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "lensHubOnchainSigNonce"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "lensTokenHandleRegistryOnchainSigNonce"
        }
      }]
    }
  }]
};
var ClaimableProfilesDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "ClaimableProfiles"
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "claimableProfiles"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ClaimableProfilesResult"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ReservedClaimable"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ReservedClaimable"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "withHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "source"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "expiry"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ClaimableProfilesResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ClaimableProfilesResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "reserved"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ReservedClaimable"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "canMintProfileWithFreeTextHandle"
        }
      }]
    }
  }]
};
var LastLoggedInProfileDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "query",
    name: {
      kind: "Name",
      value: "LastLoggedInProfile"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "LastLoggedInProfileRequest"
          }
        }
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileCoverTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profilePictureTransform"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ImageTransform"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsArg"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsArg"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "profileStatsCountOpenActionArgs"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "ProfileStatsCountOpenActionArgs"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: []
      }
    }, {
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "rateRequest"
        }
      },
      type: {
        kind: "NamedType",
        name: {
          kind: "Name",
          value: "RateRequest"
        }
      },
      defaultValue: {
        kind: "ObjectValue",
        fields: [{
          kind: "ObjectField",
          name: {
            kind: "Name",
            value: "for"
          },
          value: {
            kind: "EnumValue",
            value: "USD"
          }
        }]
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "lastLoggedInProfile"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Profile"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "HandleInfo"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "HandleInfo"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "fullHandle"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "namespace"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "localName"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "suggestedFormatted"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "full"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "localName"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "linkedTo"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "contract"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "NetworkAddress"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "nftTokenId"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NetworkAddress"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NetworkAddress"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "address"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "chainId"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Profile"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Profile"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "ownedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "createdAt"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "operations"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "__typename"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isBlockedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowedByMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "isFollowingMe"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "OptimisticStatusResult"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canBlock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnblock"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canFollow"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "canUnfollow"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "interests"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "guardian"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "protected"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "cooldownEndsOn"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitesLeft"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "onchainIdentity"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "proofOfHumanity"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "ens"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "name"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "sybilDotOrg"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "verified"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "source"
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "Field",
                    name: {
                      kind: "Name",
                      value: "twitter"
                    },
                    selectionSet: {
                      kind: "SelectionSet",
                      selections: [{
                        kind: "Field",
                        name: {
                          kind: "Name",
                          value: "handle"
                        }
                      }]
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "worldcoin"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "isHuman"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followNftAddress"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModule"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "FeeFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "FeeFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RevertFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RevertFollowModuleSettings"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "UnknownFollowModuleSettings"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "UnknownFollowModuleSettings"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "metadata"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "appId"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "displayName"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "bio"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "rawURI"
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "picture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "ImageSet"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "ProfilePictureSet"
                    }
                  }]
                }
              }, {
                kind: "InlineFragment",
                typeCondition: {
                  kind: "NamedType",
                  name: {
                    kind: "Name",
                    value: "NftImage"
                  }
                },
                selectionSet: {
                  kind: "SelectionSet",
                  selections: [{
                    kind: "FragmentSpread",
                    name: {
                      kind: "Name",
                      value: "NftImage"
                    }
                  }]
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "coverPicture"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ProfileCoverSet"
                }
              }]
            }
          }, {
            kind: "Field",
            name: {
              kind: "Name",
              value: "attributes"
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "type"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "key"
                }
              }, {
                kind: "Field",
                name: {
                  kind: "Name",
                  value: "value"
                }
              }]
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "handle"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "HandleInfo"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsor"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signless"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "invitedBy"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "Field",
            name: {
              kind: "Name",
              value: "id"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "stats"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsArg"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfileStats"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "OptimisticStatusResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "OptimisticStatusResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "isFinalisedOnchain"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FeeFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FeeFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "amount"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Amount"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "recipient"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Amount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Amount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Erc20"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "rate"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "rateRequest"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "FiatAmount"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Erc20"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Erc20"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "FiatAmount"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "FiatAmount"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "asset"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Fiat"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "value"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Fiat"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Fiat"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "name"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "symbol"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "decimals"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RevertFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RevertFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "UnknownFollowModuleSettings"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "UnknownFollowModuleSettings"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "contract"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followModuleReturnData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeCalldata"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "initializeResultData"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "signlessApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "sponsoredApproved"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfilePictureSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profilePictureTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "Image"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "Image"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "uri"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mimeType"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "width"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "height"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "NftImage"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "NftImage"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "collection"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "NetworkAddress"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "tokenId"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "image"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "ProfilePictureSet"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "verified"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileCoverSet"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ImageSet"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "raw"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "optimized"
        },
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "transformed"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileCoverTransform"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: "Image"
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ProfileStats"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ProfileStats"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "id"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "followers"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "following"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "comments"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "posts"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "mirrors"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "quotes"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "publications"
        }
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvotes"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "collects"
        },
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "anyOf"
              },
              value: {
                kind: "ListValue",
                values: [{
                  kind: "ObjectValue",
                  fields: [{
                    kind: "ObjectField",
                    name: {
                      kind: "Name",
                      value: "category"
                    },
                    value: {
                      kind: "EnumValue",
                      value: "COLLECT"
                    }
                  }]
                }]
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "countOpenActions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "profileStatsCountOpenActionArgs"
            }
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReactions"
        },
        name: {
          kind: "Name",
          value: "reactions"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "upvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "UPVOTE"
              }
            }]
          }
        }]
      }, {
        kind: "Field",
        alias: {
          kind: "Name",
          value: "downvoteReacted"
        },
        name: {
          kind: "Name",
          value: "reacted"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "ObjectValue",
            fields: [{
              kind: "ObjectField",
              name: {
                kind: "Name",
                value: "type"
              },
              value: {
                kind: "EnumValue",
                value: "DOWNVOTE"
              }
            }]
          }
        }]
      }]
    }
  }]
};
var ClaimProfileWithHandleDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "ClaimProfileWithHandle"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "ClaimProfileWithHandleRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "claimProfileWithHandle"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RelaySuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RelaySuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "ClaimProfileWithHandleErrorResult"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "ClaimProfileWithHandleErrorResult"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "ClaimProfileWithHandleErrorResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "ClaimProfileWithHandleErrorResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "reason"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelaySuccess"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelaySuccess"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txId"
        }
      }]
    }
  }]
};
var CreateProfileWithHandleDocument = {
  kind: "Document",
  definitions: [{
    kind: "OperationDefinition",
    operation: "mutation",
    name: {
      kind: "Name",
      value: "CreateProfileWithHandle"
    },
    variableDefinitions: [{
      kind: "VariableDefinition",
      variable: {
        kind: "Variable",
        name: {
          kind: "Name",
          value: "request"
        }
      },
      type: {
        kind: "NonNullType",
        type: {
          kind: "NamedType",
          name: {
            kind: "Name",
            value: "CreateProfileWithHandleRequest"
          }
        }
      }
    }],
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        alias: {
          kind: "Name",
          value: "result"
        },
        name: {
          kind: "Name",
          value: "createProfileWithHandle"
        },
        arguments: [{
          kind: "Argument",
          name: {
            kind: "Name",
            value: "request"
          },
          value: {
            kind: "Variable",
            name: {
              kind: "Name",
              value: "request"
            }
          }
        }],
        selectionSet: {
          kind: "SelectionSet",
          selections: [{
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "RelaySuccess"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "RelaySuccess"
                }
              }]
            }
          }, {
            kind: "InlineFragment",
            typeCondition: {
              kind: "NamedType",
              name: {
                kind: "Name",
                value: "CreateProfileWithHandleErrorResult"
              }
            },
            selectionSet: {
              kind: "SelectionSet",
              selections: [{
                kind: "FragmentSpread",
                name: {
                  kind: "Name",
                  value: "CreateProfileWithHandleErrorResult"
                }
              }]
            }
          }]
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "CreateProfileWithHandleErrorResult"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "CreateProfileWithHandleErrorResult"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "reason"
        }
      }]
    }
  }, {
    kind: "FragmentDefinition",
    name: {
      kind: "Name",
      value: "RelaySuccess"
    },
    typeCondition: {
      kind: "NamedType",
      name: {
        kind: "Name",
        value: "RelaySuccess"
      }
    },
    selectionSet: {
      kind: "SelectionSet",
      selections: [{
        kind: "Field",
        name: {
          kind: "Name",
          value: "__typename"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txHash"
        }
      }, {
        kind: "Field",
        name: {
          kind: "Name",
          value: "txId"
        }
      }]
    }
  }]
};
var defaultWrapper20 = function defaultWrapper21(action, _operationName, _operationType) {
  return action();
};
var OwnedHandlesDocumentString = print(OwnedHandlesDocument);
var ProfilesManagedDocumentString = print(ProfilesManagedDocument);
var UserSigNoncesDocumentString = print(UserSigNoncesDocument);
var ClaimableProfilesDocumentString = print(ClaimableProfilesDocument);
var LastLoggedInProfileDocumentString = print(LastLoggedInProfileDocument);
var ClaimProfileWithHandleDocumentString = print(ClaimProfileWithHandleDocument);
var CreateProfileWithHandleDocumentString = print(CreateProfileWithHandleDocument);
function getSdk(client) {
  var withWrapper = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultWrapper20;
  return {
    OwnedHandles: function OwnedHandles(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(OwnedHandlesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "OwnedHandles", "query");
    },
    ProfilesManaged: function ProfilesManaged(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ProfilesManagedDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ProfilesManaged", "query");
    },
    UserSigNonces: function UserSigNonces(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(UserSigNoncesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "UserSigNonces", "query");
    },
    ClaimableProfiles: function ClaimableProfiles(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ClaimableProfilesDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ClaimableProfiles", "query");
    },
    LastLoggedInProfile: function LastLoggedInProfile(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(LastLoggedInProfileDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "LastLoggedInProfile", "query");
    },
    ClaimProfileWithHandle: function ClaimProfileWithHandle(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(ClaimProfileWithHandleDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "ClaimProfileWithHandle", "mutation");
    },
    CreateProfileWithHandle: function CreateProfileWithHandle(variables, requestHeaders) {
      return withWrapper(function(wrappedRequestHeaders) {
        return client.rawRequest(CreateProfileWithHandleDocumentString, variables, _objectSpread2(_objectSpread2({}, requestHeaders), wrappedRequestHeaders));
      }, "CreateProfileWithHandle", "mutation");
    }
  };
}
var Wallet = /* @__PURE__ */ function() {
  function Wallet2(context, authentication) {
    _classCallCheck3(this, Wallet2);
    this.context = context;
    this.authentication = authentication;
    var client = new FetchGraphQLClient(context);
    this.sdk = getSdk(client, sdkAuthHeaderWrapper(authentication));
  }
  _createClass3(Wallet2, [{
    key: "ownedHandles",
    value: function() {
      var _ownedHandles = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee2(request) {
        var _this = this;
        return _regeneratorRuntime2().wrap(function _callee2$(_context2) {
          while (1)
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee$(_context) {
                      while (1)
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this.sdk.OwnedHandles({
                              request: currRequest
                            });
                          case 2:
                            result = _context.sent;
                            return _context.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context.stop();
                        }
                    }, _callee);
                  }));
                  return function(_x2) {
                    return _ref.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context2.stop();
            }
        }, _callee2);
      }));
      function ownedHandles(_x) {
        return _ownedHandles.apply(this, arguments);
      }
      return ownedHandles;
    }()
  }, {
    key: "profilesManaged",
    value: function() {
      var _profilesManaged = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee4(request) {
        var _this2 = this;
        return _regeneratorRuntime2().wrap(function _callee4$(_context4) {
          while (1)
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", buildPaginatedQueryResult(/* @__PURE__ */ function() {
                  var _ref2 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee3(currRequest) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee3$(_context3) {
                      while (1)
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            _context3.next = 2;
                            return _this2.sdk.ProfilesManaged(_objectSpread2({
                              request: currRequest
                            }, buildRequestFromConfig(_this2.context)));
                          case 2:
                            result = _context3.sent;
                            return _context3.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context3.stop();
                        }
                    }, _callee3);
                  }));
                  return function(_x4) {
                    return _ref2.apply(this, arguments);
                  };
                }(), request));
              case 1:
              case "end":
                return _context4.stop();
            }
        }, _callee4);
      }));
      function profilesManaged(_x3) {
        return _profilesManaged.apply(this, arguments);
      }
      return profilesManaged;
    }()
  }, {
    key: "sigNonces",
    value: function() {
      var _sigNonces = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee6() {
        var _this3 = this;
        return _regeneratorRuntime2().wrap(function _callee6$(_context6) {
          while (1)
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref3 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee5(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee5$(_context5) {
                      while (1)
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            _context5.next = 2;
                            return _this3.sdk.UserSigNonces({}, headers);
                          case 2:
                            result = _context5.sent;
                            return _context5.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context5.stop();
                        }
                    }, _callee5);
                  }));
                  return function(_x5) {
                    return _ref3.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context6.stop();
            }
        }, _callee6, this);
      }));
      function sigNonces() {
        return _sigNonces.apply(this, arguments);
      }
      return sigNonces;
    }()
  }, {
    key: "claimableProfiles",
    value: function() {
      var _claimableProfiles = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee8() {
        var _this4 = this;
        return _regeneratorRuntime2().wrap(function _callee8$(_context8) {
          while (1)
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref4 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee7(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee7$(_context7) {
                      while (1)
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            _context7.next = 2;
                            return _this4.sdk.ClaimableProfiles({}, headers);
                          case 2:
                            result = _context7.sent;
                            return _context7.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context7.stop();
                        }
                    }, _callee7);
                  }));
                  return function(_x6) {
                    return _ref4.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context8.stop();
            }
        }, _callee8, this);
      }));
      function claimableProfiles() {
        return _claimableProfiles.apply(this, arguments);
      }
      return claimableProfiles;
    }()
  }, {
    key: "claimProfile",
    value: function() {
      var _claimProfile = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee10(request) {
        var _this5 = this;
        return _regeneratorRuntime2().wrap(function _callee10$(_context10) {
          while (1)
            switch (_context10.prev = _context10.next) {
              case 0:
                return _context10.abrupt("return", requireAuthHeaders(this.authentication, /* @__PURE__ */ function() {
                  var _ref5 = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee9(headers) {
                    var result;
                    return _regeneratorRuntime2().wrap(function _callee9$(_context9) {
                      while (1)
                        switch (_context9.prev = _context9.next) {
                          case 0:
                            _context9.next = 2;
                            return _this5.sdk.ClaimProfileWithHandle({
                              request
                            }, headers);
                          case 2:
                            result = _context9.sent;
                            return _context9.abrupt("return", result.data.result);
                          case 4:
                          case "end":
                            return _context9.stop();
                        }
                    }, _callee9);
                  }));
                  return function(_x8) {
                    return _ref5.apply(this, arguments);
                  };
                }()));
              case 1:
              case "end":
                return _context10.stop();
            }
        }, _callee10, this);
      }));
      function claimProfile(_x7) {
        return _claimProfile.apply(this, arguments);
      }
      return claimProfile;
    }()
  }, {
    key: "createProfile",
    value: function() {
      var _createProfile = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee11(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee11$(_context11) {
          while (1)
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!(this.context.environment.name === "production")) {
                  _context11.next = 2;
                  break;
                }
                throw new Error("Cannot create profile in production environment");
              case 2:
                _context11.next = 4;
                return this.sdk.CreateProfileWithHandle({
                  request
                });
              case 4:
                result = _context11.sent;
                return _context11.abrupt("return", result.data.result);
              case 6:
              case "end":
                return _context11.stop();
            }
        }, _callee11, this);
      }));
      function createProfile(_x9) {
        return _createProfile.apply(this, arguments);
      }
      return createProfile;
    }()
  }, {
    key: "lastLoggedInProfile",
    value: function() {
      var _lastLoggedInProfile = _asyncToGenerator2(/* @__PURE__ */ _regeneratorRuntime2().mark(function _callee12(request) {
        var result;
        return _regeneratorRuntime2().wrap(function _callee12$(_context12) {
          while (1)
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.sdk.LastLoggedInProfile(_objectSpread2({
                  request
                }, buildRequestFromConfig(this.context)));
              case 2:
                result = _context12.sent;
                return _context12.abrupt("return", result.data.result);
              case 4:
              case "end":
                return _context12.stop();
            }
        }, _callee12, this);
      }));
      function lastLoggedInProfile(_x10) {
        return _lastLoggedInProfile.apply(this, arguments);
      }
      return lastLoggedInProfile;
    }()
  }]);
  return Wallet2;
}();
var LensClient = /* @__PURE__ */ function() {
  function LensClient2(config2) {
    _classCallCheck3(this, LensClient2);
    this.config = config2;
    this.context = {
      environment: config2.environment,
      storage: config2.storage || new InMemoryStorageProvider(),
      mediaTransforms: config2.mediaTransforms || {},
      origin: config2.origin,
      headers: config2.headers
    };
    this._authentication = new Authentication(this.context);
  }
  _createClass3(LensClient2, [{
    key: "authentication",
    get: function get() {
      return this._authentication;
    }
    /**
     * The Explore module
     */
  }, {
    key: "explore",
    get: function get() {
      return new Explore(this.context, this._authentication);
    }
    /**
     * The Feed module
     */
  }, {
    key: "feed",
    get: function get() {
      return new Feed(this.context, this._authentication);
    }
    /**
     * The Handle module
     */
  }, {
    key: "handle",
    get: function get() {
      return new Handle(this.context, this._authentication);
    }
    /**
     * The Invites module
     */
  }, {
    key: "invites",
    get: function get() {
      return new Invites(this.context, this._authentication);
    }
    /**
     * The Modules module
     */
  }, {
    key: "modules",
    get: function get() {
      return new Modules(this.context, this._authentication);
    }
    /**
     * The Momoka module
     */
  }, {
    key: "momoka",
    get: function get() {
      return new Momoka(this.context, this._authentication);
    }
    /**
     * The Nfts module
     */
  }, {
    key: "nfts",
    get: function get() {
      return new Nfts(this.context, this._authentication);
    }
    /**
     * The Notifications module
     */
  }, {
    key: "notifications",
    get: function get() {
      return new Notifications(this.context, this._authentication);
    }
    /**
     * The Poaps module
     */
  }, {
    key: "poaps",
    get: function get() {
      return new Poaps(this.context, this._authentication);
    }
    /**
     * The Profile module
     */
  }, {
    key: "profile",
    get: function get() {
      return new Profile(this.context, this._authentication);
    }
    /**
     * The Publication module
     */
  }, {
    key: "publication",
    get: function get() {
      return new Publication(this.context, this._authentication);
    }
    /**
     * The Revenue module
     */
  }, {
    key: "revenue",
    get: function get() {
      return new Revenue(this.context, this._authentication);
    }
    /**
     * The Search module
     */
  }, {
    key: "search",
    get: function get() {
      return new Search(this.context, this._authentication);
    }
    /**
     * The Transaction module
     */
  }, {
    key: "transaction",
    get: function get() {
      return new Transaction2(this.context, this._authentication);
    }
    /**
     * The Wallet module
     */
  }, {
    key: "wallet",
    get: function get() {
      return new Wallet(this.context, this._authentication);
    }
  }]);
  return LensClient2;
}();
var Environment = /* @__PURE__ */ function() {
  function Environment2(name4, url, gated) {
    _classCallCheck3(this, Environment2);
    this.name = name4;
    this.url = url;
    this.gated = gated;
  }
  _createClass3(Environment2, [{
    key: "gqlEndpoint",
    get: function get() {
      return this.url;
    }
  }]);
  return Environment2;
}();
var production2 = new Environment("production", "https://api-v2.lens.dev", production);
var development2 = new Environment("development", "https://api-v2-mumbai-live.lens.dev", development);
var staging = new Environment("staging", "https://api-mumbai.lens-v2.crtlkey.com/", development);

// src/api.ts
var getHandles = async (address) => {
  const lensClient = new LensClient({
    environment: production2
  });
  const allOwnedProfiles = await lensClient.profile.fetchAll({
    where: { ownedBy: [address] }
  });
  return allOwnedProfiles.items;
};

// src/IdentifierHoverComponent.tsx
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var IdentifierHoverComponent = ({ did }) => {
  const { agent } = (0, import_veramo_react.useVeramo)();
  const { data: resolutionResult, isLoading } = (0, import_react_query.useQuery)(
    ["identifier", did],
    () => agent?.resolveDid({ didUrl: did })
  );
  const addresses = (0, import_react.useMemo)(() => {
    const addresses2 = [];
    if (resolutionResult?.didDocument?.verificationMethod) {
      for (const vm of resolutionResult.didDocument.verificationMethod) {
        const address = getEthereumAddress(vm);
        if (address) {
          addresses2.push(address);
        }
      }
    }
    return addresses2;
  }, [resolutionResult]);
  const handleQueries = (0, import_react_query.useQueries)(
    addresses.map((address) => {
      return {
        queryKey: ["lens-handles", address],
        queryFn: () => getHandles(address)
      };
    })
  );
  const handles = import_react.default.useMemo(() => {
    const handles2 = [];
    for (const handlesQuery of handleQueries) {
      if (handlesQuery.isSuccess && handlesQuery.data) {
        handlesQuery.data.forEach((handle) => {
          handles2.push(handle);
        });
      }
    }
    return handles2;
  }, [handleQueries]);
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)(import_antd.Typography.Text, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(Icon, { small: true }),
    " ",
    isLoading ? /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_antd.Spin, {}) : handles.map((h, i) => /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("span", { children: [
      "@",
      h.handle?.localName
    ] }, i))
  ] });
};

// src/IdentifierTab.tsx
var import_veramo_react2 = __toESM(require_veramo_react(), 1);
var import_react2 = __toESM(require_react(), 1);
var import_react_query2 = __toESM(require_react_query(), 1);
var import_antd2 = __toESM(require_antd(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var IdentifierTab = ({
  did
}) => {
  const { agent } = (0, import_veramo_react2.useVeramo)();
  const { data: resolutionResult, isLoading } = (0, import_react_query2.useQuery)(
    ["identifier", did],
    () => agent?.resolveDid({ didUrl: did })
  );
  const addresses = (0, import_react2.useMemo)(() => {
    const addresses2 = [];
    if (resolutionResult?.didDocument?.verificationMethod) {
      for (const vm of resolutionResult.didDocument.verificationMethod) {
        const address = getEthereumAddress(vm);
        if (address) {
          addresses2.push(address);
        }
      }
    }
    return addresses2;
  }, [resolutionResult]);
  const handleQueries = (0, import_react_query2.useQueries)(
    addresses.map((address) => {
      return {
        queryKey: ["lens-handles", address],
        queryFn: () => getHandles(address)
      };
    })
  );
  const handles = import_react2.default.useMemo(() => {
    const handles2 = [];
    for (const handlesQuery of handleQueries) {
      if (handlesQuery.isSuccess && handlesQuery.data) {
        handlesQuery.data.forEach((handle) => {
          handles2.push(handle);
        });
      }
    }
    return handles2;
  }, [handleQueries]);
  return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
    import_antd2.List,
    {
      grid: {
        gutter: 16,
        xs: 1,
        sm: 1,
        md: 1,
        lg: 1,
        xl: 1,
        xxl: 1,
        column: 1
      },
      dataSource: handles,
      renderItem: (item) => /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(import_antd2.Card, { style: { margin: 10 }, title: `@${item.handle?.localName}`, children: [
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_antd2.Typography.Text, { children: item.metadata?.displayName }),
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_antd2.Typography.Paragraph, { children: item.metadata?.bio })
      ] })
    }
  );
};

// src/index.tsx
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var Plugin = {
  init: () => {
    return {
      name: "Lens",
      description: "Lens protocol",
      requiredMethods: ["dataStoreORMGetIdentifiers"],
      icon: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(Icon, {}),
      routes: [],
      menuItems: [],
      hasCss: true,
      getIdentifierHoverComponent: () => IdentifierHoverComponent,
      getIdentifierTabsComponents: () => {
        return [
          {
            label: "Lens",
            component: IdentifierTab
          }
        ];
      }
    };
  }
};
var src_default = Plugin;
export {
  src_default as default
};
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/utils.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/modular.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/curve.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/edwards.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/ed25519.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/weierstrass.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/_shortw_utils.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/secp256k1.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/p256.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@scure/base/lib/esm/index.js:
  (*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/ciphers/esm/utils.js:
  (*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) *)

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/utils.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/modular.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/curve.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/weierstrass.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/_shortw_utils.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/secp256k1.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

decimal.js/decimal.mjs:
  (*!
   *  decimal.js v10.4.3
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js
   *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Licence
   *)
*/
